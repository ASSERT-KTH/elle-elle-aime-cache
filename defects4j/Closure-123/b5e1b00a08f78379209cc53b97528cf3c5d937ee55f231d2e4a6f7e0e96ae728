{
    "generation": "void add(Node n, Context context) {\n    // ...\n    case Token.FOR:\n        if (childCount == 4) {\n            add(\"for(\");\n            if (first.isVar()) {\n                add(first, Context.IN_FOR_INIT_CLAUSE);\n            } else {\n                addExpr(first, 0, Context.IN_FOR_INIT_CLAUSE);\n            }\n            add(\";\");\n            add(first.getNext());\n            add(\";\");\n            add(first.getNext().getNext());\n            add(\")\");\n            addNonEmptyStatement(last, getContextForNonEmptyExpression(context), false);\n        } else {\n            Preconditions.checkState(childCount == 3);\n            add(\"for(\");\n            if (first.isIn()) {\n                add(\"(\");\n                addExpr(first.getFirstChild(), 0, Context.IN_FOR_INIT_CLAUSE);\n                add(\" in \");\n                add(first.getLastChild());\n                add(\")\");\n            } else {\n                add(first);\n                add(\" in \");\n                add(first.getNext());\n            }\n            add(\")\");\n            addNonEmptyStatement(last, getContextForNonEmptyExpression(context), false);\n        }\n        break;\n    // ...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}