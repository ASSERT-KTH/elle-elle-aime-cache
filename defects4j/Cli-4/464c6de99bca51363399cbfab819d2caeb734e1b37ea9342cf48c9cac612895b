{
    "generation": "/**\n * <p>Throws a {@link MissingOptionException} if all of the\n * required options are not present.</p>\n *\n * @throws MissingOptionException if any of the required Options\n * are not present.\n */\nprivate void checkRequiredOptions()\n    throws MissingOptionException\n{\n    // if there are required options that have not been\n    // processed\n    if (!requiredOptions.isEmpty())\n    {\n        StringBuilder missingOptions = new StringBuilder();\n        Iterator<Option> iter = requiredOptions.iterator();\n\n        // loop through the required options\n        while (iter.hasNext())\n        {\n            Option option = iter.next();\n            if (missingOptions.length() == 0)\n            {\n                missingOptions.append(\"Missing \");\n                if (requiredOptions.size() > 1)\n                {\n                    missingOptions.append(\"required options: \");\n                }\n                else\n                {\n                    missingOptions.append(\"required option: \");\n                }\n            }\n            else\n            {\n                missingOptions.append(\", \");\n            }\n            missingOptions.append(option.getOpt());\n        }\n\n        throw new MissingOptionException(missingOptions.toString());\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}