{
    "generation": "    /**\n     * Helper method called when there is the explicit \"is-creator\", but no mode declaration.\n     *\n     * @since 2.9.2\n     */\n    protected void _addExplicitAnyCreator(DeserializationContext ctxt,\n            BeanDescription beanDesc, CreatorCollector creators,\n            CreatorCandidate candidate)\n        throws JsonMappingException\n    {\n        // Looks like there's bit of magic regarding 1-parameter creators; others simpler:\n        if (1!= candidate.paramCount()) {\n            // Ok: for delegates, we want one and exactly one parameter without\n            // injection AND without name\n            int oneNotInjected = candidate.findOnlyParamWithoutInjection();\n            if (oneNotInjected >= 0) {\n                // getting close; but most not have name\n                if (candidate.paramName(oneNotInjected) == null) {\n                    _addExplicitDelegatingCreator(ctxt, beanDesc, creators, candidate);\n                    return;\n                }\n            }\n            _addExplicitPropertyCreator(ctxt, beanDesc, creators, candidate);\n            return;\n        }\n        AnnotatedParameter param = candidate.parameter(0);\n        JacksonInject.Value injectId = candidate.injection(0);\n        PropertyName paramName = candidate.explicitParamName(0);\n        BeanPropertyDefinition paramDef = candidate.propertyDef(0);\n\n        // If there's injection or explicit name, should be properties-based\n        boolean useProps = (paramName!= null) || (injectId!= null);\n        if (!useProps && (paramDef!= null)) {\n            // One more thing: if implicit name matches property with a getter\n            // or field, we'll consider it property-based as well\n\n            // use findRenamedPropertyName added in jackson 3.0.1 onwards\n            // before its was named findRenamingByFieldRename.\n//            paramName = param.findRenamingByFieldRename(ctxt.getAnnotationIntrospector());\n            BeanPropertyDefinition renamingPropertyDefinition\n                    = beanDesc.getFactoryConfig().getIdentifierNaming().rename(beanDesc, paramDef, NameTransformer.NOP);\n\n           paramName = renamingPropertyDefinition.getInternalName();\n\n          useProps = (renamingPropertyDefinition.couldSerialize());\n        }\n         if (useProps){\n            SettableBeanProperty[] properties = new SettableBeanProperty[] {\n//                    constructCreatorProperty(paramName, paramDef).withValueDeserializer(\n                              constructCreatorProperty(ctxt, beanDesc, paramDef.getInternalName().getSimpleName(), 0, param, injectId),\n\n            };\n            creators.addPropertyCreator(candidate.creator(), useProps, properties);\n     }else{\n          creator.addDelegating(true, paramDef, );\n          return;\n    _handleSingleArgumentCreator(null, null, nulltrue, null);\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}