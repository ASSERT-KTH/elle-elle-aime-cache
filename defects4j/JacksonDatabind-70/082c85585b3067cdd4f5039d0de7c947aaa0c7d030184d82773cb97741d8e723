{
    "generation": "/**\n * Specialized method for removing specified existing entry.\n * NOTE: entry MUST exist, otherwise an exception is thrown.\n */\npublic void remove(SettableBeanProperty propToRm)\n{\n    ArrayList<SettableBeanProperty> props = new ArrayList<SettableBeanProperty>(_size);\n    String key = getPropertyName(propToRm);\n    boolean found = false;\n\n    for (int i = 1, end = _hashArea.length; i < end; i += 2) {\n        SettableBeanProperty prop = (SettableBeanProperty) _hashArea[i];\n        if (prop == null) {\n            continue;\n        }\n        if (!found) {\n            // Fix: use case-insensitive comparison when ACCEPT_CASE_INSENSITIVE_PROPERTIES is enabled\n            if (_config.isEnabled(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES)) {\n                found = key.equalsIgnoreCase(prop.getName());\n            } else {\n                found = key.equals(prop.getName());\n            }\n            if (found) {\n                // need to leave a hole here\n                _propsInOrder[_findFromOrdered(prop)] = null;\n                continue;\n            }\n        }\n        props.add(prop);\n    }\n    if (!found) {\n        // Improve error message to indicate case-insensitivity\n        String propName = propToRm.getName();\n        String errorMsg = _config.isEnabled(MapperFeature.ACCEPT_CASE_INSENSITIVE_PROPERTIES) \n               ? \"No entry (case-insensitive) '\" + propName + \"' found, can't remove\"\n                : \"No entry '\" + propName + \"' found, can't remove\";\n        throw new NoSuchElementException(errorMsg);\n    }\n    init(props);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}