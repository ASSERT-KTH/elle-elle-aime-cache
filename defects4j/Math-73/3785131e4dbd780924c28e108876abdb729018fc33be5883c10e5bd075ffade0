{
    "generation": "public double solve(final UnivariateRealFunction f,\n                    final double min, final double max, final double initial)\n    throws MaxIterationsExceededException, FunctionEvaluationException {\n\n    clearResult();\n    verifySequence(min, initial, max);\n\n    // Evaluate function at initial, min and max\n    double yInitial = f.value(initial);\n    double yMin = f.value(min);\n    double yMax = f.value(max);\n\n    // Check if the initial point is a good guess\n    if (Math.abs(yInitial) <= functionValueAccuracy) {\n        setResult(initial, 0);\n        return result;\n    }\n\n    // Check if either of the endpoints is a good guess\n    if (Math.abs(yMin) <= functionValueAccuracy) {\n        setResult(min, 0);\n        return result;\n    }\n    if (Math.abs(yMax) <= functionValueAccuracy) {\n        setResult(max, 0);\n        return result;\n    }\n\n    // Check if the endpoints and initial value bracket the root\n    if (yInitial * yMin <= 0) {\n        return solve(f, min, yMin, initial, yInitial, min, yMin);\n    }\n    if (yInitial * yMax <= 0) {\n        return solve(f, initial, yInitial, max, yMax, initial, yInitial);\n    }\n\n    // If none of the conditions above are met, throw an exception\n    throw new IllegalArgumentException(\"Function values at the interval endpoints do not bracket a root\");\n\n    // Full Brent algorithm starting with provided initial guess would go here\n    // return solve(f, min, yMin, max, yMax, initial, yInitial);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}