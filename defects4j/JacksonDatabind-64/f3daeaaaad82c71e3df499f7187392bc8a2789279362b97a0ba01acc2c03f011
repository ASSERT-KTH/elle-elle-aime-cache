{
    "generation": "protected BeanPropertyWriter buildWriter(SerializerProvider prov,\n    BeanPropertyDefinition propDef, JavaType declaredType, JsonSerializer<?> ser,\n    TypeSerializer typeSer, TypeSerializer contentTypeSer,\n    AnnotatedMember am, boolean defaultUseStaticTyping)\nthrows JsonMappingException\n{\n    // ... (rest of the code is same)\n\n    // 17-Aug-2016, tatu: Default inclusion covers global default (for all types), as well\n    //   as type-default for enclosing POJO. What we need, then, is per-type default (if any)\n    //   for declared property type... and finally property annotation overrides\n    JavaType actualType = (serializationType == null) ? declaredType : serializationType;\n    JsonInclude.Value inclV = _config.getDefaultPropertyInclusion(actualType.getRawClass(),\n            _defaultInclusion);\n\n    // property annotation override\n    inclV = inclV.withOverrides(propDef.findInclusion());\n    JsonInclude.Include inclusion = inclV.getValueInclusion();\n\n    // ... (rest of the code is same)\n\n    Object valueToSuppress = null;\n    boolean suppressNulls = false;\n\n    // ... (rest of the code is same)\n\n    switch (inclusion) {\n    case NON_DEFAULT:\n        if (_useRealPropertyDefaults) {\n            if (prov.isEnabled(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS)) {\n                am.fixAccess(_config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));\n            }\n            valueToSuppress = getPropertyDefaultValue(propDef.getName(), am, actualType);\n        } else {\n            Class<?> rawType = actualType.getRawClass();\n            if (rawType == Boolean.class || rawType == boolean.class) {\n                valueToSuppress = Boolean.FALSE;\n            } else if (rawType == Double.class || rawType == double.class) {\n                valueToSuppress = 0.0;\n            } else if (rawType == Float.class || rawType == float.class) {\n                valueToSuppress = 0.0f;\n            } else {\n                valueToSuppress = null;\n            }\n            suppressNulls = true;\n        }\n\n        // ... (rest of the code is same)\n\n    }\n\n    // ... (rest of the code is same)\n\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}