{
    "generation": "[...]\n        switch (inclusion) {\n        case NON_DEFAULT:\n            // First: case of class/type specifying it; try to find POJO property defaults\n            if (_useRealPropertyDefaults) {\n                // 07-Sep-2016, tatu: may also need to front-load access forcing now\n                if (prov.isEnabled(MapperFeature.CAN_OVERRIDE_ACCESS_MODIFIERS)) {\n                    am.fixAccess(_config.isEnabled(MapperFeature.OVERRIDE_PUBLIC_ACCESS_MODIFIERS));\n                }\n                valueToSuppress = getPropertyDefaultValue(propDef.getName(), am, actualType);\n            } else {\n                valueToSuppress = getDefaultValue(actualType);\n                suppressNulls = true;\n            }\n\n            // If we get a null valueToSuppress, we need to check the default value for the type.\n            if (valueToSuppress == null) {\n                if (actualType.isReferenceType()) {\n                    valueToSuppress = actualType.getValueHandler().getDefaultValue();\n                }\n                // We also need to consider container types.\n                else if (actualType.isContainerType()) {\n                    valueToSuppress = BeanPropertyWriter.MARKER_FOR_EMPTY;\n                }\n                suppressNulls = true;\n            } else {\n                if (valueToSuppress.getClass().isArray()) {\n                    valueToSuppress = ArrayBuilders.getArrayComparator(valueToSuppress);\n                }\n            }\n            break;\n        [...]\n        }\n[...]",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}