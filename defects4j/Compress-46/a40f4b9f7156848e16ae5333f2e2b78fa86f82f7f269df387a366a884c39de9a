{
    "generation": "private static ZipLong unixTimeToZipLong(long l) {\n    final long TWO_TO_32 = 0x100000000L;\n    final long MASK_32BIT = 0xFFFFFFFFL;\n\n    // Ensure the input value is within the range of a signed 32-bit integer\n    if (l < -0x80000000L || l >= 0x80000000L) {\n        throw new IllegalArgumentException(\"X5455 timestamps must fit in a signed 32 bit integer: \" + l);\n    }\n\n    // Apply a bitwise AND operation with 0xFFFFFFFFL to ensure we have a 32-bit value\n    long result = l & MASK_32BIT;\n\n    return new ZipLong(result);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}