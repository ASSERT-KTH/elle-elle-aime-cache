{
    "generation": "/**\n * Converts a Unix epoch time (in seconds) to a ZipLong, validating it fits within a signed 32-bit integer.\n *\n * @param l Unix epoch time in seconds\n * @return ZipLong representation of the input time\n * @throws IllegalArgumentException if the input time cannot fit in a signed 32-bit integer\n */\nprivate static ZipLong unixTimeToZipLong(long l) {\n    final long MAX_SIGNED_32BIT = 2147483647L;\n    if (l > MAX_SIGNED_32BIT || l < -MAX_SIGNED_32BIT - 1L) {\n        throw new IllegalArgumentException(\"X5455 timestamps must fit in a signed 32 bit integer: \" + l);\n    }\n    return new ZipLong(l);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}