{
    "generation": "/**\n * Converts a Unix timestamp (seconds since Jan 1, 1970, 00:00:00 UTC) to a ZipLong,\n * checking if the timestamp can fit in a signed 32-bit integer as required by the X5455 format.\n * \n * @param l Unix timestamp in seconds\n * @return ZipLong representation of the timestamp\n */\nprivate static ZipLong unixTimeToZipLong(long l) {\n    final long MAX_SIGNED_32_BIT = 2147483647L; // Maximum value for a signed 32-bit integer\n    if (l > MAX_SIGNED_32_BIT) {\n        throw new IllegalArgumentException(\"X5455 timestamps must fit in a signed 32 bit integer: \" + l);\n    }\n    // No need to check for negative values, as Unix timestamps are non-negative\n    return new ZipLong(l);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}