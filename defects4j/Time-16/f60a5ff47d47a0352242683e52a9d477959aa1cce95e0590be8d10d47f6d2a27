{
    "generation": "public int parseInto(ReadWritableInstant instant, String text, int position) {\n    DateTimeParser parser = requireParser();\n    if (instant == null) {\n        throw new IllegalArgumentException(\"Instant must not be null\");\n    }\n\n    long instantMillis = instant.getMillis();\n    Chronology chrono = instant.getChronology();\n    long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);\n    chrono = selectChronology(chrono);\n\n    int defaultYear;\n    if (iDefaultYear == null) {\n        defaultYear = chrono.year().get(instantLocal);\n    } else {\n        defaultYear = iDefaultYear;\n    }\n\n    DateTimeParserBucket bucket = new DateTimeParserBucket(instantLocal, chrono, iLocale, iPivotYear, defaultYear);\n    int newPos = parser.parseInto(bucket, text, position);\n\n    // use the year from the input instant if it's not provided by the parser bucket\n    // or wasn't changed during the parsing\n    int year = iDefaultYear != null ? bucket.getYear() : chrono.year().get(instantLocal);\n    if (year == bucket.getDefaultYear()) {\n        year = chrono.year().get(instantLocal);\n    }\n\n    long parsedInstantLocal = bucket.computeMillis(false, text);\n    DateMidnight base = new DateMidnight(year, 1, 1, chrono);\n    base = base.plusMonths(bucket.getMonthOfYear() - 1);  // MonthOfYear is 1-based\n    base = base.dayOfMonth().set Copy(bucket.getDayOfMonth());\n\n    DateTimeZone parsedZone;\n    if (iOffsetParsed && bucket.getOffsetInteger() != null) {\n        int parsedOffset = bucket.getOffsetInteger();\n        parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);\n    } else if (bucket.getZone() != null) {\n        parsedZone = bucket.getZone();\n    } else {\n        parsedZone = instant.getZone();\n    }\n\n    long parsedInstantMillis = base.getMillis() + (parsedZone.getOffset(base.getMillis()) - chrono.getZone().getOffset(base.getMillis()));\n    instant.setMillis(parsedInstantMillis);\n\n    instant.setChronology(chrono.withZone(parsedZone));\n    if (iZone != null) {\n        instant.setZone(iZone);\n    }\n    return newPos;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}