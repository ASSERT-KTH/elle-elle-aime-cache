{
    "generation": "public int parseInto(ReadWritableInstant instant, String text, int position) {\n    DateTimeParser parser = requireParser();\n    if (instant == null) {\n        throw new IllegalArgumentException(\"Instant must not be null\");\n    }\n    \n    long instantMillis = instant.getMillis();\n    Chronology chrono = instant.getChronology();\n    long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);\n    chrono = selectChronology(chrono);\n    \n    DateTimeParserBucket bucket = new DateTimeParserBucket(\n        instantLocal, chrono, iLocale, iPivotYear, iDefaultYear);\n    int newPos = parser.parseInto(bucket, text, position);\n    instant.setMillis(bucket.computeMillis(false, text));\n    if (iOffsetParsed && bucket.getOffsetInteger() != null) {\n        int parsedOffset = bucket.getOffsetInteger();\n        DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);\n        chrono = chrono.withZone(parsedZone);\n    } else if (bucket.getZone() != null) {\n        chrono = chrono.withZone(bucket.getZone());\n    }\n    instant.setChronology(chrono);\n    if (iZone != null) {\n        instant.setZone(iZone);\n    }\n    // Ensure the year is not reset to the default year if it was already set in the input instant\n    if (bucket.isYearParsed()) {\n        int year = bucket.getParsedYear();\n        int month = bucket.getParsedMonth();\n        int day = bucket.getParsedDay();\n        int hour = bucket.getParsedHourOfDay();\n        int minute = bucket.getParsedMinuteOfHour();\n        int second = bucket.getParsedSecondOfMinute();\n        int millis = bucket.getParsedMillisOfSecond();\n        instant.setYear(year);\n        instant.setMonthOfYear(month);\n        instant.setDayOfMonth(day);\n        instant.setHourOfDay(hour);\n        instant.setMinuteOfHour(minute);\n        instant.setSecondOfMinute(second);\n        instant.setMillisOfSecond(millis);\n    }\n    return newPos;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}