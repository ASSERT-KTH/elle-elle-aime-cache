{
    "generation": "@Override\nprotected CompilerOptions createOptions() {\n    CompilerOptions options = new CompilerOptions();\n    if (flags.processJqueryPrimitives) {\n      options.setCodingConvention(new JqueryCodingConvention());\n    } else {\n      options.setCodingConvention(new ClosureCodingConvention());\n    }\n\n    options.setExtraAnnotationNames(flags.extraAnnotationName);\n\n    CompilationLevel level = flags.compilationLevel;\n    level.setOptionsForCompilationLevel(options);\n\n    if (flags.debug) {\n      level.setDebugOptionsForCompilationLevel(options);\n    }\n\n    if (flags.useTypesForOptimization) {\n      level.setTypeBasedOptimizationOptions(options);\n    }\n\n    if (flags.generateExports) {\n      options.setGenerateExports(flags.generateExports);\n    }\n\n    WarningLevel wLevel = flags.warningLevel;\n    wLevel.setOptionsForWarningLevel(options);\n    for (FormattingOption formattingOption : flags.formatting) {\n      formattingOption.applyToOptions(options);\n    }\n\n    options.closurePass = flags.processClosurePrimitives;\n\n    options.jqueryPass = CompilationLevel.ADVANCED_OPTIMIZATIONS == level &&\n        flags.processJqueryPrimitives;\n\n    options.angularPass = flags.angularPass;\n\n    if (!flags.translationsFile.isEmpty()) {\n      try {\n        options.messageBundle = new XtbMessageBundle(\n            new FileInputStream(flags.translationsFile),\n            flags.translationsProject);\n      } catch (IOException e) {\n        throw new RuntimeException(\"Reading XTB file\", e);\n      }\n    } else if (CompilationLevel.ADVANCED_OPTIMIZATIONS == level) {\n      // Fix: Do not inline goog.getMsg in ADVANCED mode if no translations file is provided\n      // to avoid firing i18n warnings when user didn't ask for i18n.\n      // Instead, set a message bundle that suppresses these warnings.\n      options.messageBundle = new SuppressI18nWarningsMessageBundle();\n    } else {\n      options.messageBundle = new EmptyMessageBundle();\n    }\n\n    // Fix: Explicitly suppress warnings for missing translations in goog.getMsg\n    options.setWarningLevel(ConvertToWarningLevel Chimera.WARNING_MISSING_TRANSLATIONS, CheckLevel.OFF);\n\n    return options;\n}\n\n// New class to suppress i18n warnings\nclass SuppressI18nWarningsMessageBundle extends EmptyMessageBundle {\n  @Override\n  public boolean shouldSuppressWarningForMissingTranslation() {\n    return true;\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}