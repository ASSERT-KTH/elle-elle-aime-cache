{
    "generation": "Element insert(Token.StartTag startTag) {\n    // handle empty unknown tags\n    // when the spec expects an empty tag, will directly hit insertEmpty, so won't generate this fake end tag.\n    if (startTag.isSelfClosing()) {\n        if (Tag.isKnownEmptyBlock(startTag.name())) { // Check if tag is a known empty block\n            Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n            insert(el);\n            el.appendChild(new Comment(\"Self-closing tag with content: \" + startTag.name())); // Add comment to preserve content\n            el.prependChild(new TextNode(\"\")); // Ensure tag is not empty\n            tokeniser.emit(new Token.EndTag(startTag.name()));  // ensure we get out of whatever state we are in. emitted for yielded processing\n            return el;\n        } else {\n            Element el = insertEmpty(startTag);\n            stack.add(el);\n            tokeniser.emit(new Token.EndTag(el.tagName()));  // ensure we get out of whatever state we are in. emitted for yielded processing\n            return el;\n        }\n    }\n    \n    Element el = new Element(Tag.valueOf(startTag.name()), baseUri, startTag.attributes);\n    insert(el);\n    return el;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}