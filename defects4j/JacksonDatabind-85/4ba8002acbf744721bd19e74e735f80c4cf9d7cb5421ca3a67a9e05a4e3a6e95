{
    "generation": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException {\n    if (property == null) {\n        return this;\n    }\n    JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n    if (format == null) {\n        return this;\n    }\n    // Simple case first: serialize as numeric timestamp?\n    JsonFormat.Shape shape = format.getShape();\n    if (shape.isNumeric()) {\n        return withFormat(Boolean.TRUE, null);\n    }\n\n    // With [databind#1648], this gets bit tricky..\n    if ((shape == JsonFormat.Shape.STRING) || format.hasPattern() || format.hasLocale() || format.hasTimeZone()) {\n        TimeZone tz = format.getTimeZone();\n        final String pattern = format.hasPattern() ? format.getPattern() : serializers.getDateFormat().toPattern();\n        final Locale loc = format.hasLocale() ? format.getLocale() : serializers.getLocale();\n        SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n        if (tz == null) {\n            tz = serializers.getTimeZone();\n        }\n        df.setTimeZone(tz);\n        return withFormat(Boolean.FALSE, df);\n    }\n\n    // Otherwise, use the date format from the SerializerProvider\n    SimpleDateFormat df = new SimpleDateFormat(serializers.getDateFormat().toPattern(), serializers.getLocale());\n    df.setTimeZone(serializers.getTimeZone());\n    return withFormat(Boolean.FALSE, df);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}