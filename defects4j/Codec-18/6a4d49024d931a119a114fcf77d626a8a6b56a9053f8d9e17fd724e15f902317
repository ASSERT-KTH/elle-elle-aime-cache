{
    "generation": "public static boolean equals(final CharSequence cs1, final CharSequence cs2) {\n    if (cs1 == cs2) {\n        return true;\n    }\n    if (cs1 == null || cs2 == null) {\n        return false;\n    }\n    if (cs1 instanceof String && cs2 instanceof String) {\n        return cs1.equals(cs2);\n    }\n    int length = Math.min(cs1.length(), cs2.length());\n    return regionMatches(cs1, false, 0, cs2, 0, length) && cs1.length() == cs2.length();\n}\n\nprivate static boolean regionMatches(final CharSequence cs1, final boolean ignoreCase, final int thisStart, final CharSequence cs2, final int start, final int length) {\n    if (cs1 instanceof String && cs2 instanceof String) {\n        return ((String) cs1).regionMatches(ignoreCase, thisStart, (String) cs2, start, length);\n    } else {\n        for (int i = 0; i < length; i++) {\n            char c1 = cs1.charAt(thisStart + i);\n            char c2 = cs2.charAt(start + i);\n            if (c1 != c2) {\n                if (!ignoreCase) {\n                    return false;\n                }\n                // If characters differ but case-insensitive comparison requested\n                char u1 = Character.toUpperCase(c1);\n                char u2 = Character.toUpperCase(c2);\n                if (u1 != u2 && Character.toLowerCase(u1) != Character.toLowerCase(u2)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}