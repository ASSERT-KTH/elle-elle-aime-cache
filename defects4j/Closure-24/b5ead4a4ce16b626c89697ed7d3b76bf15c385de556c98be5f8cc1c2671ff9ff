{
    "generation": "private void findAliases(NodeTraversal t) {\n  Scope scope = t.getScope();\n  for (Var v : scope.getVarIterable()) {\n    Node n = v.getNode();\n    int type = n.getType();\n    Node parent = n.getParent();\n    \n    boolean isAlias = false;\n    \n    if (parent.isVar() && n.hasChildren() && n.getFirstChild().isQualifiedName()) {\n      String name = n.getString();\n      Var aliasVar = scope.getVar(name);\n      if (aliasVar != null) {\n        aliases.put(name, aliasVar);\n        \n        String qualifiedName = aliasVar.getInitialValue().getQualifiedName();\n        transformation.addAlias(name, qualifiedName);\n        isAlias = true;\n      }\n    }\n    \n    if (!isAlias) {\n      // Report non-alias locals for all cases\n      report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}