{
    "generation": "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize) {\n    if (binaryData == null || binaryData.length == 0) {\n        return binaryData;\n    }\n\n    // Calculate the base64 encoded length without chunking\n    int outputLength = 4 * ((binaryData.length + 2) / 3);\n\n    // Calculate the number of chunk separators if chunking is enabled\n    int numSeparators = isChunked ? (outputLength - 1) / MIME_CHUNK_SIZE : 0;\n\n    // Calculate the total length including chunk separators\n    int totalLength = outputLength + numSeparators * CHUNK_SEPARATOR.length();\n\n    // Check if the total length exceeds the maximum allowed size\n    if (totalLength > maxResultSize) {\n        throw new IllegalArgumentException(\"Input array too big, the output array would be bigger (\" +\n            totalLength +\n            \") than the specified maximum size of \" +\n            maxResultSize);\n    }\n\n    // Perform the actual encoding\n    Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe);\n    return b64.encode(binaryData);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}