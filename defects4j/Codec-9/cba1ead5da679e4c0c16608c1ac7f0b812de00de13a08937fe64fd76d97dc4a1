{
    "generation": "public static byte[] encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize) {\n    if (binaryData == null || binaryData.length == 0) {\n        return binaryData;\n    }\n\n    // The output length calculation needs to account for both the encoded data and the padding characters.\n    // Also, we need to consider if the output should be chunked or not.\n    long len = 4 * Math.ceil(binaryData.length / 3.0);\n    if (isChunked) {\n        len += (len - 1) / MIME_CHUNK_SIZE * CHUNK_SEPARATOR.length;\n    }\n\n    if (len > maxResultSize) {\n        throw new IllegalArgumentException(\"Input array too big, the output array would be bigger (\" +\n                len +\n                \") than the specified maxium size of \" +\n                maxResultSize);\n    }\n\n    Base64 b64 = isChunked ? new Base64(urlSafe) : new Base64(0, CHUNK_SEPARATOR, urlSafe);\n    return b64.encode(binaryData);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}