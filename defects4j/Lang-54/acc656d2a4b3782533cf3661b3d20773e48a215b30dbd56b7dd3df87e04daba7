{
    "generation": "    public static Locale toLocale(String str) {\n        if (str == null) {\n            return null;\n        }\n        int len = str.length();\n        if (len < 2 || (str.indexOf('_') == -1 && len != 2)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str, \"\");\n        } else {\n            if (str.charAt(2) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            // Split the string into parts based on underscores\n            String[] parts = str.split(\"_\", -1);\n            if (parts.length < 2 || parts.length > 3) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            String language = parts[0];\n            String country = parts.length > 1 ? parts[1] : \"\";\n            String variant = parts.length > 2 ? parts[2] : \"\";\n            // Validate country code if it's not empty\n            if (!country.isEmpty() && (country.length() != 2 || country.charAt(0) < 'A' || country.charAt(0) > 'Z' \n                                        || country.charAt(1) < 'A' || country.charAt(1) > 'Z')) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(language, country, variant);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}