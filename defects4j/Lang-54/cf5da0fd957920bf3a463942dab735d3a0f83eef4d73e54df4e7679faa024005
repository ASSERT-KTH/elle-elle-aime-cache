{
    "generation": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len == 0) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    int firstUnderscore = str.indexOf('_');\n    if (firstUnderscore == -1) {\n        if (len == 2) {\n            // Language only\n            char ch0 = str.charAt(0);\n            char ch1 = str.charAt(1);\n            if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str, \"\");\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    }\n    String language = str.substring(0, firstUnderscore);\n    if (language.length() != 2 || language.charAt(0) < 'a' || language.charAt(0) > 'z' || language.charAt(1) < 'a' || language.charAt(1) > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    \n    int secondUnderscore = str.indexOf('_', firstUnderscore + 1);\n    if (secondUnderscore == -1) {\n        // Language and country\n        String country = str.substring(firstUnderscore + 1);\n        if (country.length() != 2 || country.charAt(0) < 'A' || country.charAt(0) > 'Z' || country.charAt(1) < 'A' || country.charAt(1) > 'Z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(language, country);\n    } else {\n        // Language, country, and variant\n        String country = str.substring(firstUnderscore + 1, secondUnderscore);\n        if (!country.isEmpty() && (country.length() != 2 || country.charAt(0) < 'A' || country.charAt(0) > 'Z' || country.charAt(1) < 'A' || country.charAt(1) > 'Z')) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        String variant = str.substring(secondUnderscore + 1);\n        return new Locale(language, country, variant);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}