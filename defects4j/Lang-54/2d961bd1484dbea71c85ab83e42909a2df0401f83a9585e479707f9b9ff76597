{
    "generation": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    String[] parts = str.split(\"_\", -1);\n    if (parts.length > 3) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (parts.length == 1) {\n        if (parts[0].length() != 2 || !isValidLanguageCode(parts[0])) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(parts[0], \"\");\n    }\n    if (parts.length == 2) {\n        if (parts[0].length() != 2 || !isValidLanguageCode(parts[0])) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (parts[1].length() != 0 && parts[1].length() != 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (parts[1].length() == 2 && !isValidCountryCode(parts[1])) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(parts[0], parts[1]);\n    }\n    if (parts.length == 3) {\n        if (parts[0].length() != 2 || !isValidLanguageCode(parts[0])) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (parts[1].length() != 0 && parts[1].length() != 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (parts[1].length() == 2 && !isValidCountryCode(parts[1])) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (parts[2].length() == 0) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(parts[0], parts[1], parts[2]);\n    }\n    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n}\n\nprivate static boolean isValidLanguageCode(String code) {\n    if (code.length() != 2) return false;\n    for (char c : code.toCharArray()) {\n        if (c < 'a' || c > 'z') return false;\n    }\n    return true;\n}\n\nprivate static boolean isValidCountryCode(String code) {\n    if (code.length() != 2) return false;\n    for (char c : code.toCharArray()) {\n        if (c < 'A' || c > 'Z') return false;\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}