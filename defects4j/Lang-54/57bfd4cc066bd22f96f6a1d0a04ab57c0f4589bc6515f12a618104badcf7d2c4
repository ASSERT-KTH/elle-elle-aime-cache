{
    "generation": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2 || len == 4 || len == 6 || len > 10) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    }\n\n    int countryOffset = str.indexOf('_');\n    int variantOffset = str.indexOf('_', countryOffset + 1);\n\n    if (countryOffset == -1 || (variantOffset != -1 && variantOffset <= countryOffset + 1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    String language = str.substring(0, 2);\n    String country = \"\";\n    String variant = \"\";\n\n    if (countryOffset == 2 && len == 5) {\n        country = str.substring(3, 5);\n        if (country.charAt(0) < 'A' || country.charAt(0) > 'Z' || country.charAt(1) < 'A' || country.charAt(1) > 'Z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    } else if (variantOffset > 5) {\n        country = str.substring(3, 5);\n        if (country.isEmpty() || country.charAt(0) < 'A' || country.charAt(0) > 'Z' || country.charAt(1) < 'A' || country.charAt(1) > 'Z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        variant = str.substring(6);\n    }\n\n    return new Locale(language, country, variant);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}