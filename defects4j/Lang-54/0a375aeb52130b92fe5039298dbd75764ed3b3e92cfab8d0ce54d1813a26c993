{
    "generation": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    \n    int underscoreCount = countUnderscores(str);\n    \n    switch (underscoreCount) {\n        case 0:\n            // language only\n            if (str.length() == 2 && isLowercaseLetters(str)) {\n                return new Locale(str, \"\");\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        case 1:\n            // language_COUNTRY\n            String[] parts1 = str.split(\"_\", -1);\n            if (parts1.length != 2) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (parts1[0].length() == 2 && isLowercaseLetters(parts1[0]) &&\n                parts1[1].length() == 2 && isUppercaseLetters(parts1[1])) {\n                return new Locale(parts1[0], parts1[1]);\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        case 2:\n            // language_COUNTRY_variant or language__variant\n            String[] parts2 = str.split(\"_\", -1);\n            if (parts2.length != 3) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (parts2[0].length() == 2 && isLowercaseLetters(parts2[0])) {\n                if (parts2[1].isEmpty()) {\n                    // language__variant\n                    return new Locale(parts2[0], \"\", parts2[2]);\n                } else if (parts2[1].length() == 2 && isUppercaseLetters(parts2[1])) {\n                    // language_COUNTRY_variant\n                    return new Locale(parts2[0], parts2[1], parts2[2]);\n                } else {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        default:\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n}\n\nprivate static int countUnderscores(String str) {\n    int count = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if (str.charAt(i) == '_') {\n            count++;\n        }\n    }\n    return count;\n}\n\nprivate static boolean isLowercaseLetters(String s) {\n    return s != null && s.length() > 0 && s.equals(s.toLowerCase()) && s.matches(\"[a-z]+\");\n}\n\nprivate static boolean isUppercaseLetters(String s) {\n    return s != null && s.length() > 0 && s.equals(s.toUpperCase()) && s.matches(\"[A-Z]+\");\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}