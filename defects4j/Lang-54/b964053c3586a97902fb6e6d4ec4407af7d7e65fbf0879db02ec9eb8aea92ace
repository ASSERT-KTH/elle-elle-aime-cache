{
    "generation": "    public static Locale toLocale(String str) {\n        if (str == null) {\n            return null;\n        }\n        int len = str.length();\n        if (len < 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str, \"\");\n        } else {\n            if (str.charAt(2) != '_') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            if (len == 3) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            int underscoreCount = 0;\n            for (int i = 0; i < len; i++) {\n                if (str.charAt(i) == '_') {\n                    underscoreCount++;\n                }\n            }\n            if (underscoreCount == 1) {\n                // Language + Country\n                String country = str.substring(3);\n                if (country.length() == 0 || (country.length() == 2 && country.charAt(0) >= 'A' && country.charAt(0) <= 'Z' && country.charAt(1) >= 'A' && country.charAt(1) <= 'Z')) {\n                    return new Locale(str.substring(0, 2), country);\n                } else {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            } else if (underscoreCount == 2) {\n                // Language + Variant\n                String country = str.substring(3, str.indexOf('_', 3));\n                String variant = str.substring(str.indexOf('_', 3) + 1);\n                if (country.length() == 0) {\n                    return new Locale(str.substring(0, 2), \"\", variant);\n                } else if (country.length() == 2 && country.charAt(0) >= 'A' && country.charAt(0) <= 'Z' && country.charAt(1) >= 'A' && country.charAt(1) <= 'Z') {\n                    return new Locale(str.substring(0, 2), country, variant);\n                } else {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            } else {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}