{
    "generation": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    }\n    int underscoreCount = 0;\n    int firstUnderscore = -1;\n    int secondUnderscore = -1;\n    for (int i = 2; i < len; i++) {\n        if (str.charAt(i) == '_') {\n            underscoreCount++;\n            if (underscoreCount == 1) {\n                firstUnderscore = i;\n            } else if (underscoreCount == 2) {\n                secondUnderscore = i;\n                break;\n            }\n        }\n    }\n    if (underscoreCount == 0) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (underscoreCount == 1) {\n        if (firstUnderscore == len - 1) {\n            return new Locale(str.substring(0, 2), \"\");\n        }\n        String country = str.substring(firstUnderscore + 1);\n        if (country.length() != 2 || country.charAt(0) < 'A' || country.charAt(0) > 'Z' || country.charAt(1) < 'A' || country.charAt(1) > 'Z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str.substring(0, 2), country);\n    }\n    if (secondUnderscore == len - 1) {\n        String country = str.substring(firstUnderscore + 1, secondUnderscore);\n        if (country.length() != 0 && (country.length() != 2 || country.charAt(0) < 'A' || country.charAt(0) > 'Z' || country.charAt(1) < 'A' || country.charAt(1) > 'Z')) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str.substring(0, 2), country);\n    }\n    String country = str.substring(firstUnderscore + 1, secondUnderscore);\n    if (country.length() != 0 && (country.length() != 2 || country.charAt(0) < 'A' || country.charAt(0) > 'Z' || country.charAt(1) < 'A' || country.charAt(1) > 'Z')) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    String variant = str.substring(secondUnderscore + 1);\n    return new Locale(str.substring(0, 2), country, variant);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}