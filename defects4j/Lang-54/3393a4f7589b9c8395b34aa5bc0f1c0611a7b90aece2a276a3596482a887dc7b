{
    "generation": "/**\n * <p>Converts a String to a Locale.</p>\n *\n * <p>This method takes the string format of a locale and creates the\n * locale object from it.</p>\n *\n * <pre>\n *   LocaleUtils.toLocale(\"en\")         = new Locale(\"en\", \"\")\n *   LocaleUtils.toLocale(\"en_GB\")      = new Locale(\"en\", \"GB\")\n *   LocaleUtils.toLocale(\"en_GB_xxx\")  = new Locale(\"en\", \"GB\", \"xxx\")\n *   LocaleUtils.toLocale(\"fr__POSIX\")  = new Locale(\"fr\", \"\", \"POSIX\")\n * </pre>\n *\n * <p>This method validates the input strictly.\n * The language code must be lowercase.\n * The country code must be uppercase.\n * The separator must be an underscore.\n * The length must be correct.\n * </p>\n *\n * @param str  the locale String to convert, null returns null\n * @return a Locale, null if null input\n * @throws IllegalArgumentException if the string is an invalid format\n */\npublic static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    }\n    \n    String language = str.substring(0, 2);\n    String country = \"\";\n    String variant = \"\";\n    \n    int underscoreCount = 0;\n    int firstUnderscore = -1;\n    int secondUnderscore = -1;\n    \n    for (int i = 2; i < len; i++) {\n        if (str.charAt(i) == '_') {\n            underscoreCount++;\n            if (underscoreCount == 1) {\n                firstUnderscore = i;\n            } else if (underscoreCount == 2) {\n                secondUnderscore = i;\n                break;\n            }\n        }\n    }\n    \n    if (underscoreCount > 0) {\n        if (firstUnderscore + 1 < len) {\n            if (underscoreCount == 1) {\n                String potentialCountry = str.substring(firstUnderscore + 1);\n                if (potentialCountry.length() == 2) {\n                    char ch3 = potentialCountry.charAt(0);\n                    char ch4 = potentialCountry.charAt(1);\n                    if (ch3 >= 'A' && ch3 <= 'Z' && ch4 >= 'A' && ch4 <= 'Z') {\n                        country = potentialCountry;\n                    } else {\n                        variant = potentialCountry;\n                    }\n                } else {\n                    variant = potentialCountry;\n                }\n            } else if (underscoreCount == 2) {\n                String potentialCountry = str.substring(firstUnderscore + 1, secondUnderscore);\n                if (potentialCountry.length() == 2) {\n                    char ch3 = potentialCountry.charAt(0);\n                    char ch4 = potentialCountry.charAt(1);\n                    if (ch3 >= 'A' && ch3 <= 'Z' && ch4 >= 'A' && ch4 <= 'Z') {\n                        country = potentialCountry;\n                        variant = str.substring(secondUnderscore + 1);\n                    } else {\n                        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                    }\n                } else {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n            }\n        } else {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n    } else {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    return new Locale(language, country, variant);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}