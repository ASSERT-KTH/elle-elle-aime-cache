{
    "generation": "    public static Locale toLocale(String str) {\n        if (str == null) {\n            return null;\n        }\n        int len = str.length();\n        if (len < 2) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        char ch0 = str.charAt(0);\n        char ch1 = str.charAt(1);\n        if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str, \"\");\n        } else {\n            int underscoreCount = 0;\n            int lastUnderscoreIndex = -1;\n            for (int i = 2; i < len; i++) {\n                if (str.charAt(i) == '_') {\n                    underscoreCount++;\n                    lastUnderscoreIndex = i;\n                }\n            }\n            if (underscoreCount == 0) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            String language = str.substring(0, 2);\n            String country = \"\";\n            String variant = \"\";\n\n            if (len > 3) {\n                if (lastUnderscoreIndex == 2) {\n                    country = str.substring(3, lastUnderscoreIndex + 1);\n                } else {\n                    country = str.substring(3, lastUnderscoreIndex);\n                }\n                if (lastUnderscoreIndex + 1 < len) {\n                    variant = str.substring(lastUnderscoreIndex + 1);\n                }\n            }\n\n            if (country.length() > 0 && (country.length() != 2 || !isUpperCase(country))) {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(language, country, variant);\n        }\n    }\n\n    private static boolean isUpperCase(String str) {\n        for (char c : str.toCharArray()) {\n            if (c < 'A' || c > 'Z') {\n                return false;\n            }\n        }\n        return true;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}