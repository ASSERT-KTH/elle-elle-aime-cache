{
    "generation": "public static Locale toLocale(String str) {\n    if (str == null) {\n        return null;\n    }\n    int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    char ch0 = str.charAt(0);\n    char ch1 = str.charAt(1);\n    if (ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 2) {\n        return new Locale(str, \"\");\n    } else {\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 3) {\n            // Handle cases like \"fr_\" which are invalid\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n\n        int lastUnderscore = str.indexOf('_', 3);\n        if (lastUnderscore == -1) {\n            lastUnderscore = len; // No second underscore\n        }\n\n        if (lastUnderscore == 5) {\n            // Handle language + country case\n            String country = str.substring(3, 5);\n            if (country.charAt(0) < 'A' || country.charAt(0) > 'Z' || \n                country.charAt(1) < 'A' || country.charAt(1) > 'Z') {\n                throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n            }\n            return new Locale(str.substring(0, 2), country);\n        } else if (lastUnderscore < 5 || lastUnderscore > len) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        } else {\n            // Handle language + country + variant or language + variant\n            if (lastUnderscore != 6) {\n                // language + country + variant\n                String country = str.substring(3, 5);\n                if (country.charAt(0) < 'A' || country.charAt(0) > 'Z' || \n                    country.charAt(1) < 'A' || country.charAt(1) > 'Z') {\n                    throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n                }\n                return new Locale(str.substring(0, 2), country, str.substring(6));\n            } else {\n                // language + variant\n                return new Locale(str.substring(0, 2), \"\", str.substring(4));\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}