{
    "generation": "    /**\n     * Returns the range for the specified axis.\n     *\n     * @param axis  the axis.\n     *\n     * @return The range.\n     */\n    public Range getDataRange(ValueAxis axis) {\n\n        Range result = null;\n        List<XYDataset> mappedDatasets = new ArrayList<>();\n        List<XYAnnotation> includedAnnotations = new ArrayList<>();\n        boolean isDomainAxis = false;\n\n        // is it a domain axis?\n        int domainIndex = getDomainAxisIndex(axis);\n        if (domainIndex >= 0) {\n            isDomainAxis = true;\n            List<XYDataset> domainMappedDatasets = getDatasetsMappedToDomainAxis(domainIndex);\n            if (domainMappedDatasets != null) {\n                mappedDatasets.addAll(domainMappedDatasets);\n            }\n            if (domainIndex == 0) {\n                // grab the plot's annotations\n                includedAnnotations.addAll(getAnnotationsForDomainOrRange(true));\n            }\n        }\n\n        // or is it a range axis?\n        int rangeIndex = getRangeAxisIndex(axis);\n        if (rangeIndex >= 0) {\n            isDomainAxis = false;\n            List<XYDataset> rangeMappedDatasets = getDatasetsMappedToRangeAxis(rangeIndex);\n            if (rangeMappedDatasets != null) {\n                mappedDatasets.addAll(rangeMappedDatasets);\n            }\n            if (rangeIndex == 0) {\n                includedAnnotations.addAll(getAnnotationsForDomainOrRange(false));\n            }\n        }\n\n        // iterate through the datasets that map to the axis and get the union\n        // of the ranges.\n        for (XYDataset d : mappedDatasets) {\n            if (d != null) {\n                XYItemRenderer r = getRendererForDataset(d);\n                if (isDomainAxis) {\n                    result = Range.combine(result, (r != null ? r.findDomainBounds(d) : DatasetUtilities.findDomainBounds(d)));\n                }\n                else {\n                    result = Range.combine(result, (r != null ? r.findRangeBounds(d) : DatasetUtilities.findRangeBounds(d)));\n                }\n\n                if (r != null) {\n                    Collection<XYAnnotation> c = r.getAnnotations();\n                    for (XYAnnotation a : c) {\n                        if (a instanceof XYAnnotationBoundsInfo) {\n                            includedAnnotations.add(a);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (XYAnnotation xyAnno : includedAnnotations) {\n            if (xyAnno instanceof XYAnnotationBoundsInfo) {\n                XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) xyAnno;\n                if (xyabi.getIncludeInDataBounds()) {\n                    if (isDomainAxis) {\n                        result = Range.combine(result, xyabi.getXRange());\n                    }\n                    else {\n                        result = Range.combine(result, xyabi.getYRange());\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    private List<XYAnnotation> getAnnotationsForDomainOrRange(boolean isDomain) {\n        List<XYAnnotation> includedAnnotations = new ArrayList<>();\n        Iterator<XYAnnotation> iterator = this.annotations.iterator();\n        while (iterator.hasNext()) {\n            XYAnnotation annotation = iterator.next();\n            if (annotation instanceof XYAnnotationBoundsInfo) {\n                XYAnnotationBoundsInfo xyAnnBoundInfo = (XYAnnotationBoundsInfo) annotation;\n                if ((isDomain && xyAnnBoundInfo.getDomainAxisIndex() == 0) || (!isDomain && xyAnnBoundInfo.getRangeAxisIndex() == 0)) {\n                    includedAnnotations.add(annotation);\n                }\n            }\n        }\n        return includedAnnotations;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}