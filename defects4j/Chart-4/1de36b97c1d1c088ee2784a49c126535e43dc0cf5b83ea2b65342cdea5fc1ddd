{
    "generation": "/**\n * Returns the range for the specified axis.\n *\n * @param axis the axis.\n * @return The range.\n */\npublic Range getDataRange(ValueAxis axis) {\n\n    Range result = null;\n    List mappedDatasets = new ArrayList();\n    List includedAnnotations = new ArrayList();\n    boolean isDomainAxis = true;\n\n    // Determine if it's a domain axis\n    int domainIndex = getDomainAxisIndex(axis);\n    if (domainIndex >= 0) {\n        isDomainAxis = true;\n        mappedDatasets.addAll(getDatasetsMappedToDomainAxis(domainIndex));\n        if (domainIndex == 0) {\n            addAnnotationsIfInstance(includedAnnotations);\n        }\n    }\n\n    // Determine if it's a range axis\n    int rangeIndex = getRangeAxisIndex(axis);\n    if (rangeIndex >= 0) {\n        isDomainAxis = false;\n        mappedDatasets.addAll(getDatasetsMappedToRangeAxis(rangeIndex));\n        if (rangeIndex == 0) {\n            addAnnotationsIfInstance(includedAnnotations);\n        }\n    }\n\n    // Iterate through the datasets and combine ranges\n    for (Object obj : mappedDatasets) {\n        XYDataset d = (XYDataset) obj;\n        if (d != null) {\n            XYItemRenderer r = getRendererForDataset(d);\n            Range datasetRange = getDatasetRange(d, r, isDomainAxis);\n            result = Range.combine(result, datasetRange);\n\n            // Add renderer annotations if they implement XYAnnotationBoundsInfo\n            if (r != null) {\n                Collection annotations = r.getAnnotations();\n                if (annotations != null) {\n                    for (Object anno : annotations) {\n                        XYAnnotation a = (XYAnnotation) anno;\n                        if (a instanceof XYAnnotationBoundsInfo) {\n                            includedAnnotations.add(a);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // Process included annotations\n    for (Object obj : includedAnnotations) {\n        XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) obj;\n        if (xyabi.getIncludeInDataBounds()) {\n            Range annotationRange = isDomainAxis ? xyabi.getXRange() : xyabi.getYRange();\n            if (annotationRange != null) {\n                result = Range.combine(result, annotationRange);\n            }\n        }\n    }\n\n    return result;\n}\n\n/**\n * Adds annotations to the list if they are instances of XYAnnotationBoundsInfo.\n *\n * @param includedAnnotations the list to add annotations to.\n */\nprivate void addAnnotationsIfInstance(List includedAnnotations) {\n    Iterator iterator = this.annotations.iterator();\n    while (iterator.hasNext()) {\n        XYAnnotation annotation = (XYAnnotation) iterator.next();\n        if (annotation instanceof XYAnnotationBoundsInfo) {\n            includedAnnotations.add(annotation);\n        }\n    }\n}\n\n/**\n * Gets the range for a dataset using the appropriate method based on the axis type.\n *\n * @param d            the dataset.\n * @param r            the renderer.\n * @param isDomainAxis true if it's a domain axis, false otherwise.\n * @return the range.\n */\nprivate Range getDatasetRange(XYDataset d, XYItemRenderer r, boolean isDomainAxis) {\n    if (isDomainAxis) {\n        if (r != null) {\n            return r.findDomainBounds(d);\n        } else {\n            return DatasetUtilities.findDomainBounds(d);\n        }\n    } else {\n        if (r != null) {\n            return r.findRangeBounds(d);\n        } else {\n            return DatasetUtilities.findRangeBounds(d);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}