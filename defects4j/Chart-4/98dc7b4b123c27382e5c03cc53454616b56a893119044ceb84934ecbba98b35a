{
    "generation": "/**\n * Returns the range for the specified axis.\n *\n * @param axis the axis.\n * @return The range.\n */\npublic Range getDataRange(ValueAxis axis) {\n    if (axis == null) {\n        throw new IllegalArgumentException(\"Axis cannot be null\");\n    }\n\n    Range result = null;\n    List mappedDatasets = new ArrayList();\n    List includedAnnotations = new ArrayList();\n    boolean isDomainAxis = true;\n\n    // Determine if it's a domain axis\n    int domainIndex = getDomainAxisIndex(axis);\n    if (domainIndex >= 0) {\n        isDomainAxis = true;\n        mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));\n        if (domainIndex == 0) {\n            collectAnnotations(includedAnnotations);\n        }\n    }\n    // Determine if it's a range axis\n    int rangeIndex = getRangeAxisIndex(axis);\n    if (rangeIndex >= 0) {\n        isDomainAxis = false;\n        mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));\n        if (rangeIndex == 0) {\n            collectAnnotations(includedAnnotations);\n        }\n    }\n\n    // Iterate through the datasets and compute the combined range\n    Iterator iterator = mappedDatasets.iterator();\n    while (iterator.hasNext()) {\n        XYDataset d = (XYDataset) iterator.next();\n        if (d != null) {\n            XYItemRenderer r = getRendererForDataset(d);\n            Range datasetRange = null;\n            if (isDomainAxis) {\n                if (r != null) {\n                    datasetRange = r.findDomainBounds(d);\n                } else {\n                    datasetRange = DatasetUtilities.findDomainBounds(d);\n                }\n            } else {\n                if (r != null) {\n                    datasetRange = r.findRangeBounds(d);\n                } else {\n                    datasetRange = DatasetUtilities.findRangeBounds(d);\n                }\n            }\n            if (datasetRange != null) {\n                result = Range.combine(result, datasetRange);\n            }\n            if (r != null) {\n                Collection annotations = r.getAnnotations();\n                if (annotations != null) {\n                    Iterator annotationIter = annotations.iterator();\n                    while (annotationIter.hasNext()) {\n                        XYAnnotation a = (XYAnnotation) annotationIter.next();\n                        if (a instanceof XYAnnotationBoundsInfo) {\n                            includedAnnotations.add(a);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // Process included annotations\n    Iterator it = includedAnnotations.iterator();\n    while (it.hasNext()) {\n        XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) it.next();\n        if (xyabi.getIncludeInDataBounds()) {\n            Range annotationRange = isDomainAxis ? xyabi.getXRange() : xyabi.getYRange();\n            if (annotationRange != null) {\n                result = Range.combine(result, annotationRange);\n            }\n        }\n    }\n\n    return result != null ? result : Range.EMPTY_RANGE;\n}\n\n// Helper method to collect annotations\nprivate void collectAnnotations(List includedAnnotations) {\n    Iterator iterator = this.annotations.iterator();\n    while (iterator.hasNext()) {\n        XYAnnotation annotation = (XYAnnotation) iterator.next();\n        if (annotation instanceof XYAnnotationBoundsInfo) {\n            includedAnnotations.add(annotation);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}