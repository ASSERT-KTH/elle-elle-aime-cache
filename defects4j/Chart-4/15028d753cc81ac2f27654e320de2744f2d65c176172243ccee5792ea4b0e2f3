{
    "generation": "/**\n * Returns the range for the specified axis.\n *\n * @param axis  the axis.\n *\n * @return The range.\n */\npublic Range getDataRange(ValueAxis axis) {\n\n    Range result = null;\n    List mappedDatasets = new ArrayList();\n    List includedAnnotations = new ArrayList();\n    boolean isDomainAxis = true;\n\n    // is it a domain axis?\n    int domainIndex = getDomainAxisIndex(axis);\n    if (domainIndex >= 0) {\n        isDomainAxis = true;\n        mappedDatasets.addAll(getDatasetsMappedToDomainAxis(new Integer(domainIndex)));\n        if (domainIndex == 0) {\n            // grab the plot's annotations\n            Iterator iterator = this.annotations.iterator();\n            while (iterator.hasNext()) {\n                XYAnnotation annotation = (XYAnnotation) iterator.next();\n                if (annotation instanceof XYAnnotationBoundsInfo) {\n                    includedAnnotations.add(annotation);\n                }\n            }\n        }\n    }\n\n    // or is it a range axis?\n    int rangeIndex = getRangeAxisIndex(axis);\n    if (rangeIndex >= 0) {\n        isDomainAxis = false;\n        mappedDatasets.addAll(getDatasetsMappedToRangeAxis(new Integer(rangeIndex)));\n        if (rangeIndex == 0) {\n            Iterator iterator = this.annotations.iterator();\n            while (iterator.hasNext()) {\n                XYAnnotation annotation = (XYAnnotation) iterator.next();\n                if (annotation instanceof XYAnnotationBoundsInfo) {\n                    includedAnnotations.add(annotation);\n                }\n            }\n        }\n    }\n\n    // iterate through the datasets that map to the axis and get the union of the ranges.\n    Iterator iterator = mappedDatasets.iterator();\n    while (iterator.hasNext()) {\n        XYDataset d = (XYDataset) iterator.next();\n        if (d != null) {\n            XYItemRenderer r = getRendererForDataset(d);\n            if (isDomainAxis) {\n                if (r != null) {\n                    Range datasetRange = r.findDomainBounds(d);\n                    result = (result == null) ? datasetRange : Range.combine(result, datasetRange);\n                } else {\n                    Range datasetRange = DatasetUtilities.findDomainBounds(d);\n                    result = (result == null) ? datasetRange : Range.combine(result, datasetRange);\n                }\n            } else {\n                if (r != null) {\n                    Range datasetRange = r.findRangeBounds(d);\n                    result = (result == null) ? datasetRange : Range.combine(result, datasetRange);\n                } else {\n                    Range datasetRange = DatasetUtilities.findRangeBounds(d);\n                    result = (result == null) ? datasetRange : Range.combine(result, datasetRange);\n                }\n            }\n        }\n    }\n\n    Iterator it = includedAnnotations.iterator();\n    while (it.hasNext()) {\n        XYAnnotationBoundsInfo xyabi = (XYAnnotationBoundsInfo) it.next();\n        if (xyabi.getIncludeInDataBounds()) {\n            if (isDomainAxis) {\n                Range annotationRange = xyabi.getXRange();\n                result = (result == null) ? annotationRange : Range.combine(result, annotationRange);\n            } else {\n                Range annotationRange = xyabi.getYRange();\n                result = (result == null) ? annotationRange : Range.combine(result, annotationRange);\n            }\n        }\n    }\n\n    return result;\n\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}