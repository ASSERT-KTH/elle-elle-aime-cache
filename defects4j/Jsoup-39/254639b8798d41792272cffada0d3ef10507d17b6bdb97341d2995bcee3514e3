{
    "generation": "static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser) {\n    String docData = null;\n    Document doc = null;\n\n    docData = Charset.forName(defaultCharset).decode(byteData).toString();\n    // UTF-8 BOM indicator. takes precedence over everything else. rarely used.\n    if (docData.length() > 0 && docData.charAt(0) == 65279) {\n        charsetName = defaultCharset;\n        docData = docData.substring(1);\n    }\n\n    // Determine charsetName if not provided\n    if (charsetName == null) {\n        // look for <meta http-equiv=\"Content-Type\" content=\"text/html;charset=gb2312\"> or HTML5 <meta charset=\"gb2312\">\n        doc = parser.parseInput(docData, baseUri);\n        Element meta = doc.select(\"meta[http-equiv=content-type], meta[charset]\").first();\n        if (meta != null) {\n            // Existing charsetName detection code here ...\n        }\n    }\n\n    // Decode data using provided or detected charsetName\n    byteData.rewind();\n    if (charsetName != null) {\n        docData = Charset.forName(charsetName).decode(byteData).toString();\n    } else {\n        // Default to UTF-8 if charsetName could not be determined\n        charsetName = \"UTF-8\";\n        docData = Charset.forName(charsetName).decode(byteData).toString();\n    }\n\n    if (doc == null) {\n        doc = parser.parseInput(docData, baseUri);\n    }\n    doc.outputSettings().charset(charsetName);\n\n    return doc;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}