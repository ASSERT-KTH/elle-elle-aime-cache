{
    "generation": "    /**\n     * @return Whether the variable is only assigned a value once for its\n     *     lifetime.\n     */\n    boolean isAssignedOnceInLifetime() {\n      Reference ref = getOneAndOnlyAssignment();\n      if (ref == null) {\n        return false;\n      }\n\n      // Make sure this assignment is not in a loop or in a function\n      // that could be called recursively.\n      for (BasicBlock block = ref.getBasicBlock();\n           block!= null; block = block.getParent()) {\n        if (block.isFunction) {\n          for (FunctionCallSite site : getCallSitesOf(block)) {\n            if (isRecursiveFunction(site)) {\n              return false;\n            }\n          }\n          break;\n        } else if (block.isLoop) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    // TODO: please replace '...' with your actual method logic\n    private Iterable<FunctionCallSite> getCallSitesOf(BasicBlock block) {\n      //...\n    }\n\n    private boolean isRecursiveFunction(FunctionCallSite site) {\n      //...\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}