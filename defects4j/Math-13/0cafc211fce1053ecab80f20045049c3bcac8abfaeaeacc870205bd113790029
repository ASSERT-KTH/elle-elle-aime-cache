{
    "generation": "    /**\n     * Computes the square-root of the weight matrix.\n     *\n     * @param m Symmetric, positive-definite (weight) matrix.\n     * @return the square-root of the weight matrix.\n     */\n    private RealMatrix squareRoot(RealMatrix m) {\n        // Ensure the matrix is symmetric and positive-definite\n        if (!isSymmetricPositiveDefinite(m)) {\n            throw new IllegalArgumentException(\"Input matrix must be symmetric and positive-definite.\");\n        }\n        \n        final DecompositionSolver solver = new EigenDecomposition(m).getSolver();\n        final RealMatrix sqrtD = solver.getInverse().scalarMultiply(0.5);\n        final RealMatrix sqrtM = solver.getSquareRoot();\n        \n        return sqrtM.multiply(sqrtD).multiply(sqrtM.transpose());\n    }\n\n    /**\n     * Checks if a matrix is symmetric and positive-definite.\n     *\n     * @param m The matrix to check.\n     * @return true if the matrix is symmetric and positive-definite, false otherwise.\n     */\n    private boolean isSymmetricPositiveDefinite(RealMatrix m) {\n        // Check if the matrix is symmetric\n        if (!m.equals(m.transpose())) {\n            return false;\n        }\n        \n        // Check if the matrix is positive-definite\n        final EigenDecomposition dec = new EigenDecomposition(m);\n        for (double eigenvalue : dec.getRealEigenvalues()) {\n            if (eigenvalue <= 0) {\n                return false;\n            }\n        }\n        \n        return true;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}