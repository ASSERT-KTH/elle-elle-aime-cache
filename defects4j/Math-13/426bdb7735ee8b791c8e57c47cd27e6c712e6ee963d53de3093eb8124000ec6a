{
    "generation": "/**\n * Computes the square-root of the weight matrix.\n *\n * @param m Symmetric, positive-definite (weight) matrix.\n * @return the square-root of the weight matrix.\n */\nprivate RealMatrix squareRoot(RealMatrix m) {\n    final EigenDecomposition dec = new EigenDecomposition(m);\n    final double[] eigenValues = dec.getRealEigenvalues();\n    for (int i = 0; i < eigenValues.length; i++) {\n        // Check for non-positive eigenvalues to prevent NaN/Infinity results\n        if (eigenValues[i] <= 0) {\n            // You can either throw an exception or return a special value\n            // For this example, we'll adjust the eigenvalue to a small positive value\n            eigenValues[i] = Double.MIN_VALUE;\n        }\n    }\n    // Manually construct the square-root matrix using the (adjusted) eigenvalues\n    final RealMatrix sqrtMatrix = dec.getVT().scalarMultiply(Arrays.stream(eigenValues).map(Math::sqrt).toArray())\n                                   .multiply(dec.getV());\n    return sqrtMatrix;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}