{
    "generation": "/**\n * Computes the square-root of the weight matrix.\n *\n * @param m Symmetric, positive-definite (weight) matrix.\n * @return the square-root of the weight matrix.\n */\nprivate RealMatrix squareRoot(RealMatrix m) {\n    // Check if matrix is identity to avoid unnecessary computation\n    if (isIdentity(m)) {\n        return m;\n    }\n\n    final EigenDecomposition dec = new EigenDecomposition(m);\n    if (dec.hasPositiveEigenvalue()) {\n        // Compute square-root only for positive eigenvalues\n        final RealVector sqrtEigenValues = dec.getEigenvalues().mapToSelf(e -> (e > 0)? Math.sqrt(e) : e);\n        return dec.getSquareRoot(sqrtEigenValues);\n    } else {\n        // Handle non-positive definite matrix (e.g., return a default value or throw an exception)\n        throw new NonPositiveDefiniteMatrixException(\"Matrix is not positive definite\");\n    }\n}\n\n// Helper function to check for identity matrix\nprivate boolean isIdentity(RealMatrix m) {\n    final int dim = m.getRowDimension();\n    for (int i = 0; i < dim; i++) {\n        for (int j = 0; j < dim; j++) {\n            if ((i == j && Math.abs(m.getEntry(i, j) - 1.0) > 1e-6) ||\n                (i!= j && Math.abs(m.getEntry(i, j)) > 1e-6)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}