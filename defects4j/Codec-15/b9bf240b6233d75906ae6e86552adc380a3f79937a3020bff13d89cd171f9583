{
    "generation": "private char getMappingCode(final String str, final int index) {\n    // map() throws IllegalArgumentException\n    final char mappedChar = this.map(str.charAt(index));\n\n    // HW rule check\n    if (index > 1 && mappedChar != '0') {\n        final char hwChar = str.charAt(index - 1);\n        if ('H' == hwChar || 'W' == hwChar) {\n            final char preHWChar = str.charAt(index - 2);\n            final char preHWCode = this.map(preHWChar);\n\n            // Check if previous character was also mapped to the same digit,\n            // indicating they should be treated as one.\n            if (preHWCode == mappedChar && preHWCode != '0') {\n                return 0;\n            }\n        } else if (index > 2) {\n            // If 'HW' was not present, check if the character before 'HW'\n            // should be treated as grouped with the current character.\n            final char prepreHWChar = str.charAt(index - 2);\n            final char prepreHWCode = this.map(prepreHWChar);\n            if (prepreHWCode == mappedChar && prepreHWCode != '0') {\n                return 0;\n            }\n        }\n    }\n    return mappedChar;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}