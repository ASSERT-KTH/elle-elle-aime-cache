{
    "generation": "    private char getMappingCode(final String str, final int index) {\n        // map() throws IllegalArgumentException\n        final char mappedChar = this.map(str.charAt(index));\n        // HW rule check\n        if (index > 0 && mappedChar != '0') { \n            final char hwChar = str.charAt(index - 1);\n            if ('H' == hwChar || 'W' == hwChar) {\n                int preHWIndex = index - 2;\n                // Find the previous character that is not H or W\n                while (preHWIndex >= 0 && (str.charAt(preHWIndex) == 'H' || str.charAt(preHWIndex) == 'W')) {\n                    preHWIndex--;\n                }\n                if (preHWIndex >= 0) {\n                    final char preHWChar = str.charAt(preHWIndex);\n                    final char firstCode = this.map(preHWChar);\n                    if (firstCode == mappedChar) {\n                        return '0';\n                    }\n                }\n            }\n        }\n        return mappedChar;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}