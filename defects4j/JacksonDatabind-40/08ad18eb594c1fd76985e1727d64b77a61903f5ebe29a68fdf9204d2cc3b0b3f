{
    "generation": "import com.fasterxml.jackson.annotation.JsonSetter;\nimport com.fasterxml.jackson.databind.DeserializationFeature;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\nimport java.io.IOException;\n\npublic class TestSimpleTypes {\n\n    private void _testEmptyToNullCoercion(Class<?> primType, Object emptyValue) throws IOException\n    {\n        ObjectMapper m = new ObjectMapper();\n        m.enable(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT);\n        // First, verify that we get empty value if coercion is not enabled\n        ObjectResult ob = m.readValue(\"{\\\"value\\\":\\\"\\\"}\", ObjectResult.class);\n        if (!emptyValue.equals(ob.value)) {\n          fail(\"Should get empty value (\"+emptyValue+\") with empty String and no-coercion; got \"+ob.value);\n        }\n        // and then that we get null with coercion\n        m = new ObjectMapper();\n\n        m.enable(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT);\n        m.configOverride(primType)\n                .setSetterInfo(JsonSetter.Value.forContentNulls(Nulls.AS_EMPTY));\n       \n        ob = m.readValue(\"{\\\"value\\\":\\\"\\\"}\", ObjectResult.class);\n        if (ob.value != null) {\n            fail(\"Should get null with empty String and coercion; got \"+ob.value+\" (type \"+ob.value.getClass()+\")\");\n        }\n    }\n\n    static class ObjectResult {\n        public Object value;\n\n        public void setValue(Object v) {\n            value = v;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}