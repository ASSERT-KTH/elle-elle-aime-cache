{
    "generation": "public Object coerceEmptyToNull(Class<?> primitiveType) {\n    if (primitiveType == int.class) {\n        return 0;\n    } else if (primitiveType == long.class) {\n        return 0L;\n    } else if (primitiveType == double.class) {\n        return 0.0;\n    } else if (primitiveType == float.class) {\n        return 0.0f;\n    }\n    // Add more primitive types as needed.\n    throw new IllegalArgumentException(\"Unsupported primitive type: \" + primitiveType);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}