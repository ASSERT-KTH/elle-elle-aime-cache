{
    "generation": "import com.fasterxml.jackson.annotation.JsonSetter;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.exc.MismatchedInputException;\n\nimport java.io.IOException;\n\npublic class TestSimpleTypes {\n\n    private void _testEmptyToNullCoercion(Class<?> primType, Object emptyValue) throws IOException\n    {\n        ObjectMapper m = new ObjectMapper();\n        m.setDefaultSetterInfo(JsonSetter.Value.forContentNulls(Nulls.AS_EMPTY));\n        Bean b = m.readValue(\"{\\\"value\\\":\\\"\\\"}\", Bean.class);\n        if (b.value != emptyValue) {\n            throw new AssertionError(\"Should not have passed\");\n        }\n        // also, defaulting should work for nulls as well, even if it's not enabled:\n        b = m.readValue(\"{\\\"value\\\":null}\", Bean.class);\n        if (b.value != emptyValue) {\n            throw new AssertionError(\"Should not have passed\");\n        }\n\n        // and for both empty AND null, with explicit defaulting:\n        m.setDefaultSetterInfo(JsonSetter.Value.forContentNulls(Nulls.AS_EMPTY)\n                .forContentEmptyValue(emptyValue));\n        b = m.readValue(\"{\\\"value\\\":\\\"\\\"}\", Bean.class);\n        if (b.value != emptyValue) {\n            throw new AssertionError(\"Should not have passed\");\n        }\n        b = m.readValue(\"{\\\"value\\\":null}\", Bean.class);\n        if (b.value != emptyValue) {\n            throw new AssertionError(\"Should not have passed\");\n        }\n        m = new ObjectMapper();\n        m.coercionConfigDefaults().setCoercion(CoercionInputShape.EmptyString, CoercionAction.AsNull);\n        try {\n           m.readValue(\"{\\\"value\\\":\\\"\\\"}\", Bean.class);\n           fail(\"Should not have passed\");\n        } catch (MismatchedInputException e) {\n           verifyException(e, \"Cannot coerce empty String (\\\"\\\")\");\n           verifyException(e, \"to `\"+primType.getName()+\"` value\");\n        }\n\n    }\n\n    static class Bean {\n        public Object value;\n\n        public void setValue(Object v) {\n            value = v;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}