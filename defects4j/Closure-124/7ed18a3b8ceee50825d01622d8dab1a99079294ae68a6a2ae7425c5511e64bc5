{
    "generation": "/**\n * Checks name referenced in node to determine if it might have\n * changed.\n * @return Whether the replacement can be made.\n */\nprivate boolean isSafeReplacement(Node node, Node replacement) {\n  // No checks are needed for simple names.\n  if (node.isName()) {\n    return true;\n  }\n  Preconditions.checkArgument(node.isGetProp());\n\n  return !hasNameAssignedToProperty(node, replacement);\n}\n\nprivate boolean hasNameAssignedToProperty(Node node, Node replacement) {\n  for (Node child = node.getFirstChild(); child != null; child = child.getNext()) {\n    if (child.isName() && isNameAssignedTo(child.getString(), replacement)) {\n      return true;\n    } else if (child.hasChildren() && hasNameAssignedToProperty(child, replacement)) {\n      return true;\n    }\n  }\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}