{
    "generation": "/**\n * Checks name referenced in node to determine if it might have\n * changed.\n * @return Whether the replacement can be made.\n */\nprivate boolean isSafeReplacement(Node node, Node replacement) {\n    // No checks are needed for simple names.\n    if (node.isName()) {\n        return true;\n    }\n    Preconditions.checkArgument(node.isGetProp());\n\n    Node objectNode = node.getFirstChild();\n    // If the object being accessed is not a simple name, we cannot guarantee safety.\n    if (!objectNode.isName()) {\n        return false;\n    }\n\n    String objectName = objectNode.getString();\n    // Check if the object name is assigned to the replacement node.\n    if (isNameAssignedTo(objectName, replacement)) {\n        return false;\n    }\n\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}