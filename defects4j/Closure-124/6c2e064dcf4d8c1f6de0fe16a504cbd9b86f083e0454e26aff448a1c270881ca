{
    "generation": "  /**\n   * Checks name referenced in node to determine if it might have\n   * changed.\n   * @return Whether the replacement can be made.\n   */\n  private boolean isSafeReplacement(Node node, Node replacement) {\n    // No checks are needed for simple names.\n    if (node.isName()) {\n      return true;\n    }\n    Preconditions.checkArgument(node.isGetProp());\n\n    // Traverse the property access chain to find the root name.\n    Node rootNameNode = node;\n    while (rootNameNode.isGetProp()) {\n      rootNameNode = rootNameNode.getFirstChild();\n    }\n    Preconditions.checkState(rootNameNode.isName());\n\n    String rootName = rootNameNode.getString();\n    if (isNameAssignedTo(rootName, replacement)) {\n      return false;\n    }\n\n    return true;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}