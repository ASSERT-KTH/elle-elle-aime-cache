{
    "generation": "@Override\npublic double integrate(final FirstOrderDifferentialEquations equations,\n                       final double t0, final double[] y0,\n                       final double t, final double[] y)\n    throws DerivativeException, IntegratorException {\n\n    // ...\n\n    // main integration loop\n    while (!lastStep) {\n\n        // ...\n\n        double error = 0;\n        for (boolean loop = true; loop;) {\n\n            if (firstTime || !fsal) {\n                // first stage\n                computeDerivatives(stepStart, y, yDotK[0]);\n            }\n\n            if (firstTime) {\n                final double[] scale;\n                if (vecAbsoluteTolerance == null) {\n                    scale = new double[y0.length];\n                    Arrays.fill(scale, scalAbsoluteTolerance);\n                } else {\n                    scale = vecAbsoluteTolerance;\n                }\n                hNew = initializeStep(equations, forward, nSteps, scale, stepStart, y,\n                                      yDotK[0], yTmp, yDotK[1]); // Change getOrder() to nSteps\n                firstTime = false;\n            }\n\n            // ...\n\n        }\n\n        // ...\n\n    }\n\n    // ...\n\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}