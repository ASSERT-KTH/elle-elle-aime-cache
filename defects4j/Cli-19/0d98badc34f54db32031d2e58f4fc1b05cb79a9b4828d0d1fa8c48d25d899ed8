{
    "generation": "/**\n * <p>If an {@link Option} exists for <code>token</code> then\n * set the current option and add the token to the processed \n * list.</p>\n *\n * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>\n * is set then ignore the current token, add the remaining tokens\n * to the processed tokens list directly, and throw an \n * {@link UnrecognizedOptionException} for the current token.</p>\n *\n * @param token The current option token\n * @param stopAtNonOption Specifies whether flattening should halt\n * at the first non option.\n * @throws UnrecognizedOptionException if the token is not a recognized option and stopAtNonOption is true\n */\nprivate void processOptionToken(String token, boolean stopAtNonOption) throws UnrecognizedOptionException\n{\n    if (options.hasOption(token))\n    {\n        currentOption = options.getOption(token);\n        tokens.add(token);\n    }\n    else if (stopAtNonOption)\n    {\n        eatTheRest = true;\n        tokens.add(token);\n        throw new UnrecognizedOptionException(token); // Throw exception for unrecognized option\n    }\n    else\n    {\n        throw new UnrecognizedOptionException(token); // Throw exception for unrecognized option when stopAtNonOption is false\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}