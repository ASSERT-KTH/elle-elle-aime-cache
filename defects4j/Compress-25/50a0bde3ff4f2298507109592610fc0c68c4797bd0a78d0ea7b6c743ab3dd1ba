{
    "generation": "/**\n * @param encoding the encoding to use for file names, use null\n * for the platform's default encoding\n * @param useUnicodeExtraFields whether to use InfoZIP Unicode\n * Extra Fields (if present) to set the file names.\n * @param allowStoredEntriesWithDataDescriptor whether the stream\n * will try to read STORED entries that use a data descriptor\n * @since 1.1\n */\npublic ZipArchiveInputStream(InputStream inputStream,\n                             String encoding,\n                             boolean useUnicodeExtraFields,\n                             boolean allowStoredEntriesWithDataDescriptor) {\n    zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);\n    this.useUnicodeExtraFields = useUnicodeExtraFields;\n    // Fix: Ensure the PushbackInputStream buffer size is at least 2 to handle \n    // stored entries with data descriptors (as in COMPRESS-264)\n    int bufferSize = Math.max(buf.capacity(), 2);\n    in = new PushbackInputStream(inputStream, bufferSize);\n    this.allowStoredEntriesWithDataDescriptor =\n        allowStoredEntriesWithDataDescriptor;\n    // haven't read anything so far\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}