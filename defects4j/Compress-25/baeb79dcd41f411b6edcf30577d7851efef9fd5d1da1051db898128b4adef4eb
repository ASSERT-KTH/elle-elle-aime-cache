{
    "generation": "    /**\n     * @param encoding the encoding to use for file names, use null\n     * for the platform's default encoding\n     * @param useUnicodeExtraFields whether to use InfoZIP Unicode\n     * Extra Fields (if present) to set the file names.\n     * @param allowStoredEntriesWithDataDescriptor whether the stream\n     * will try to read STORED entries that use a data descriptor\n     * @since 1.1\n     */\n    public ZipArchiveInputStream(InputStream inputStream,\n                                 String encoding,\n                                 boolean useUnicodeExtraFields,\n                                 boolean allowStoredEntriesWithDataDescriptor) {\n        zipEncoding = ZipEncodingHelper.getZipEncoding(encoding);\n        this.useUnicodeExtraFields = useUnicodeExtraFields;\n        in = new PushbackInputStream(inputStream, BUFFER_SIZE);\n        this.allowStoredEntriesWithDataDescriptor = allowStoredEntriesWithDataDescriptor;\n        // Initialize the entry state to ensure correct reading of the first entry\n        entry = new CurrentEntry();\n        // Read the first entry's local file header\n        entry.hasDataDescriptor = false;\n        entry.localHeaderStart = 0;\n        entry.localHeaderEnd = 0;\n        entry.dataStart = 0;\n        entry.dataEnd = 0;\n        entry.bytesRead = 0;\n        entry.name = null;\n        entry.size = -1;\n        entry.compressedSize = -1;\n        entry.method = -1;\n        entry.crc = 0;\n        entry.gpb = 0;\n        entry.versionMadeBy = 0;\n        entry.versionRequired = 0;\n        entry.internalAttributes = 0;\n        entry.externalAttributes = 0;\n        entry.offset = 0;\n        entry.centralDirectory = false;\n        entry.entry = null;\n        // haven't read anything so far\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}