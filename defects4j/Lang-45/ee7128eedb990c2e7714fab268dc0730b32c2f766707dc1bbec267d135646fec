{
    "generation": "public static String abbreviate(String str, int lower, int upper, String appendToEnd) {\n    // initial parameter checks\n    if (str == null) {\n        return null;\n    }\n    if (str.length() == 0) {\n        return str;\n    }\n\n    // if the lower value is greater than the length of the string,\n    // set to the length of the string\n    if (lower > str.length()) {\n        lower = str.length();\n    }\n    // if the upper value is -1 (i.e. no limit) or is greater\n    // than the length of the string, set to the length of the string\n    if (upper == -1 || upper > str.length()) {\n        upper = str.length();\n    }\n    // if upper is less than lower, raise it to lower\n    if (upper < lower) {\n        upper = lower;\n    }\n\n    StringBuffer result = new StringBuffer();\n    for (int i = 0; i < upper; i += lower) {\n        int endIndex = i + lower;\n        if (endIndex >= str.length()) {\n            result.append(str.substring(i));\n            break;\n        }\n        int lastSpace = StringUtils.lastIndexOf(str, \" \", endIndex);\n        if (lastSpace < i || lastSpace == -1) {\n            result.append(str.substring(i, endIndex));\n        } else {\n            result.append(str.substring(i, lastSpace));\n            break;\n        }\n        if (endIndex < upper) {\n            result.append(StringUtils.defaultString(appendToEnd));\n        }\n    }\n    return result.toString();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}