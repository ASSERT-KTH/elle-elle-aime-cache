{
    "generation": "public static String abbreviate(String str, int lower, int upper, String appendToEnd) {\n    // initial parameter checks\n    if (str == null) {\n        return null;\n    }\n    if (str.length() == 0) {\n        return StringUtils.EMPTY;\n    }\n\n    // Adjust upper limit if necessary\n    if (upper == -1 || upper > str.length()) {\n        upper = str.length();\n    }\n    // Ensure lower does not exceed upper\n    if (lower > upper) {\n        lower = upper;\n    }\n    // Ensure upper does not exceed string length\n    if (upper > str.length()) {\n        upper = str.length();\n    }\n\n    StringBuffer result = new StringBuffer();\n    int index = StringUtils.indexOf(str, \" \", lower);\n    if (index == -1) {\n        // No space found after lower limit\n        result.append(str.substring(0, upper));\n        // Append only if abbreviation occurred\n        if (upper < str.length()) {\n            result.append(StringUtils.defaultString(appendToEnd));\n        }\n    } else {\n        // Space found\n        if (index >= upper) {\n            // Space is beyond upper limit\n            result.append(str.substring(0, upper));\n            result.append(StringUtils.defaultString(appendToEnd));\n        } else {\n            // Space is within upper limit\n            result.append(str.substring(0, index));\n            result.append(StringUtils.defaultString(appendToEnd));\n        }\n    }\n    return result.toString();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}