{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\"; // nothing to make absolute with\n    } else {\n        URL base;\n        try {\n            try {\n                base = new URL(baseUri);\n            } catch (MalformedURLException e) {\n                // the base is unsuitable, but the attribute may be abs on its own, so try that\n                URL abs = new URL(relUrl);\n                return abs.toExternalForm();\n            }\n            // workaround: java resolves '//path/file +?foo' to '//path/?foo', not '//path/file?foo' as desired\n            if (relUrl.startsWith(\"?\")) {\n                String baseStr = base.toExternalForm();\n                if (baseStr.contains(\"?\")) {\n                    baseStr = baseStr.substring(0, baseStr.indexOf(\"?\"));\n                }\n                relUrl = baseStr + relUrl;\n                return relUrl;\n            } else {\n                URL abs = new URL(base, relUrl);\n                return abs.toExternalForm();\n            }\n        } catch (MalformedURLException e) {\n            return \"\";\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}