{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\"; // nothing to make absolute with\n    } else {\n        URL base;\n        try {\n            base = new URL(baseUri);\n            if (relUrl.startsWith(\"?\")) {\n                String basePath = base.getPath();\n                if (!basePath.endsWith(\"/\")) {\n                    basePath = basePath.substring(0, basePath.lastIndexOf('/'));\n                }\n                URL abs = new URL(base.getProtocol(), base.getHost(), base.getPort(), basePath + relUrl);\n                return abs.toExternalForm();\n            } else {\n                URL abs = new URL(base, relUrl);\n                return abs.toExternalForm();\n            }\n        } catch (MalformedURLException e) {\n            try {\n                // try if the relUrl is an absolute URL\n                URL abs = new URL(relUrl);\n                return abs.toExternalForm();\n            } catch (MalformedURLException ignored) {\n                return \"\";\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}