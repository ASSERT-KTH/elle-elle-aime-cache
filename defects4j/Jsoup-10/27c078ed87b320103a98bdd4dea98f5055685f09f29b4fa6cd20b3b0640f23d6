{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\"; // nothing to make absolute with\n    } else {\n        try {\n            URL absUrl = new URL(relUrl); // try creating URL object from relUrl\n            if (absUrl.toExternalForm().startsWith(relUrl)) { // check if it's absolute\n                return absUrl.toExternalForm();\n            }\n        } catch (MalformedURLException e) {\n            // relUrl is not absolute\n        }\n\n        URL base;\n        try {\n            base = new URL(baseUri);\n        } catch (MalformedURLException e) {\n            // baseUri is unsuitable, return relative path as it is\n            return relUrl;\n        }\n\n        // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired\n        try {\n            URL abs = new URL(base, relUrl);\n            return abs.toExternalForm();\n        } catch (MalformedURLException e) {\n            // relUrl is unsuitable, return relative path as it is\n            return relUrl;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}