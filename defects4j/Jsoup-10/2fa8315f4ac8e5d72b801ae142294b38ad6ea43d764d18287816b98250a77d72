{
    "generation": "    public String absUrl(String attributeKey) {\n        Validate.notEmpty(attributeKey);\n\n        if (!hasAttr(attributeKey)) {\n            return \"\"; // nothing to make absolute with\n        }\n\n        String relUrl = attr(attributeKey);\n        URL base;\n        try {\n            base = new URL(baseUri);\n        } catch (MalformedURLException e) {\n            // the baseUri is unsuitable, but the attribute may be abs on its own, so try that\n            try {\n                URL abs = new URL(relUrl);\n                return abs.toExternalForm();\n            } catch (MalformedURLException ignored) {\n                return \"\"; // if it's still not valid, return empty\n            }\n        }\n\n        try {\n            URL abs;\n            if (relUrl.startsWith(\"?\")) {\n                // Special handling for URLs starting with '?'\n                // Constructing a new URL with the base and appending the relative query path directly.\n                String newPath = base.getPath();\n                abs = new URL(base.getProtocol(), base.getHost(), base.getPort(), newPath + relUrl);\n            } else {\n                abs = new URL(base, relUrl);\n            }\n            return abs.toExternalForm();\n        } catch (MalformedURLException e) {\n            return \"\";\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}