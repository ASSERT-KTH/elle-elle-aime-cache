{
    "generation": "public String absUrl(String attributeKey) {\n    Validate.notEmpty(attributeKey);\n\n    String relUrl = attr(attributeKey);\n    if (!hasAttr(attributeKey)) {\n        return \"\"; // nothing to make absolute with\n    } else {\n        URL base;\n        try {\n            try {\n                base = new URL(baseUri);\n            } catch (MalformedURLException e) {\n                // the base is unsuitable, but the attribute may be abs on its own, so try that\n                URL abs = new URL(relUrl);\n                return abs.toExternalForm();\n            }\n            // Handles the query string properly by first checking if the relUrl starts with ?\n            if (relUrl.startsWith(\"?\")) {\n                // For URLs starting with ?, we need to get the path from base and append the query\n                String path = base.getPath();\n                if (path.isEmpty()) path = \"/\";\n                URL abs = new URL(base.getProtocol(), base.getHost(), base.getPort(), path + relUrl);\n                return abs.toExternalForm();\n            } else {\n                URL abs = new URL(base, relUrl);\n                return abs.toExternalForm();\n            }\n        } catch (MalformedURLException e) {\n            return \"\";\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}