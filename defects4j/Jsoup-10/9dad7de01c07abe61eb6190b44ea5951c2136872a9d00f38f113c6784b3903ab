{
    "generation": "    public String absUrl(String attributeKey) {\n        Validate.notEmpty(attributeKey);\n\n        String relUrl = attr(attributeKey);\n        if (!hasAttr(attributeKey)) {\n            return \"\"; // nothing to make absolute with\n        } else {\n            URL base;\n            try {\n                base = new URL(baseUri);\n            } catch (MalformedURLException e) {\n                // the base is unsuitable, but the attribute may be abs on its own, so try that\n                try {\n                    URL abs = new URL(relUrl);\n                    return abs.toExternalForm();\n                } catch (MalformedURLException ex) {\n                    return \"\";\n                }\n            }\n            // workaround: java resolves '//path/file + ?foo' to '//path/?foo', not '//path/file?foo' as desired\n            URL abs;\n            try {\n                URL url;\n                try {\n                    url = new URL(base, relUrl);\n                } catch (MalformedURLException ex) {\n                    try {\n                        url = new URL(\"http\", base.getHost(), base.getPort(), base.getPath() + relUrl);\n                    } catch (MalformedURLException ex2) {\n                        return \"\";\n                    }\n                }\n                abs = url;\n            } catch (MalformedURLException ex) {\n                return \"\";\n            }\n            return abs.toExternalForm();\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}