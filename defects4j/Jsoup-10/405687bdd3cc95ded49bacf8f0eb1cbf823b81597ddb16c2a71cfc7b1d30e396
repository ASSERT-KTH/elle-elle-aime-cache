{
    "generation": "    public String absUrl(String attributeKey) {\n        Validate.notEmpty(attributeKey);\n\n        String relUrl = attr(attributeKey);\n        if (!hasAttr(attributeKey)) {\n            return \"\"; // nothing to make absolute with\n        } else {\n            URL base;\n            try {\n                try {\n                    base = new URL(baseUri);\n                } catch (MalformedURLException e) {\n                    // the base is unsuitable, but the attribute may be abs on its own, so try that\n                    URL abs = new URL(relUrl);\n                    return abs.toExternalForm();\n                }\n                // fix: properly resolve relative URLs with query parameters\n                if (relUrl.startsWith(\"?\")) {\n                    String baseUrlWithNoQuery = base.getProtocol() + \"://\" + base.getHost();\n                    if (base.getPort() != -1) {\n                        baseUrlWithNoQuery += \":\" + base.getPort();\n                    }\n                    baseUrlWithNoQuery += base.getPath();\n                    URL abs = new URL(baseUrlWithNoQuery + relUrl);\n                    return abs.toExternalForm();\n                } else {\n                    URL abs = new URL(base, relUrl);\n                    return abs.toExternalForm();\n                }\n            } catch (MalformedURLException e) {\n                return \"\";\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}