{
    "generation": "    public String absUrl(String attributeKey) {\n        Validate.notEmpty(attributeKey);\n\n        String relUrl = attr(attributeKey);\n        if (!hasAttr(attributeKey)) {\n            return \"\"; // nothing to make absolute with\n        } else {\n            try {\n                URL base = new URL(baseUri);\n                if (relUrl.startsWith(\"?\")) {\n                    // Handle query string relative URL\n                    String baseString = base.toExternalForm();\n                    int queryIndex = baseString.indexOf('?');\n                    if (queryIndex == -1) {\n                        return baseString + relUrl;\n                    } else {\n                        // If base already has a query, need to handle it properly\n                        String basepath = base.getPath();\n                        if (basepath.endsWith(\"/\")) {\n                            basepath = basepath + \"index.html\"; // assume index.html\n                        }\n                        URL baseWithFile = new URL(base, basepath);\n                        return baseWithFile.toExternalForm() + relUrl;\n                    }\n                } else {\n                    // Normal URL resolution\n                    URL abs = new URL(base, relUrl);\n                    return abs.toExternalForm();\n                }\n            } catch (MalformedURLException e) {\n                try {\n                    // the base is unsuitable, but the attribute may be abs on its own, so try that\n                    URL abs = new URL(relUrl);\n                    return abs.toExternalForm();\n                } catch (MalformedURLException e2) {\n                    return \"\";\n                }\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}