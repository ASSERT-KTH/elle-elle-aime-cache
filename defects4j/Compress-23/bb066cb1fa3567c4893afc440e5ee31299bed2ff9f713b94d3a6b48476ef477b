{
    "generation": "@Override\nInputStream decode(final InputStream in, final Coder coder,\n        byte[] password) throws IOException {\n    byte propsByte = coder.properties[0];\n    long dictSize = ((coder.properties[1] & 0xFFL) | \n                     ((coder.properties[2] & 0xFFL) << 8) | \n                     ((coder.properties[3] & 0xFFL) << 16) | \n                     ((coder.properties[4] & 0xFFL) << 24));\n    if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {\n        throw new IOException(\"Dictionary larger than 4GiB maximum size\");\n    }\n    if (dictSize > Integer.MAX_VALUE) { // added check for XZ's limitation\n        throw new UnsupportedOptionsException(\"LZMA dictionary is too big for this implementation\");\n    }\n    return new LZMAInputStream(in, -1, propsByte, (int) dictSize);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}