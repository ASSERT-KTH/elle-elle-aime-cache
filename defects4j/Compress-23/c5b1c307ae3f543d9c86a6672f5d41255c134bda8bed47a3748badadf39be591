{
    "generation": "@Override\nInputStream decode(final InputStream in, final Coder coder,\n        byte[] password) throws IOException {\n    byte propsByte = coder.properties[0];\n    long dictSize = (coder.properties[1] & 0xFF); // Ensure byte value is unsigned\n    for (int i = 1; i < 4; i++) {\n        dictSize |= ((coder.properties[i + 1] & 0xFF) << (8 * i)); // Ensure byte values are unsigned\n    }\n    if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {\n        throw new IOException(\"Dictionary larger than maximum size supported by this implementation\");\n    }\n    if (dictSize > (1L << 30)) { // 1 GiB, as per XZ Java implementation limits\n        throw new UnsupportedOptionsException(\"LZMA dictionary is too big for this implementation\");\n    }\n    return new LZMAInputStream(in, -1, propsByte, (int) dictSize);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}