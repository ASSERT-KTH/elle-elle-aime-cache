{
    "generation": "@Override\nInputStream decode(final InputStream in, final Coder coder,\n        byte[] password) throws IOException {\n    byte propsByte = coder.properties[0];\n    long dictSize = coder.properties[1];\n    for (int i = 1; i < 4; i++) {\n        dictSize |= ((long) (coder.properties[i + 1] & 0xFF) << (8 * i));\n    }\n    if (dictSize > Long.MAX_VALUE) { // We also need to change this condition to Long.MAX_VALUE\n        throw new IOException(\"Dictionary larger than Long.MAX_VALUE maximum size\");\n    }\n    if (dictSize <= Integer.MAX_VALUE) {\n        return new LZMAInputStream(in, -1, propsByte, (int) dictSize);\n    } else {\n        return new LargeLZMAInputStream(in, -1, propsByte, dictSize);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}