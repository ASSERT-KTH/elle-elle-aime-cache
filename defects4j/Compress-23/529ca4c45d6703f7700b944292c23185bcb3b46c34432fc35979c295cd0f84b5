{
    "generation": "@Override\nInputStream decode(final InputStream in, final Coder coder,\n                   byte[] password) throws IOException {\n    byte propsByte = coder.properties[0];\n    long dictSize = coder.properties[1] & 0xFF; // Ensure proper unsigned handling\n    for (int i = 1; i < 4; i++) {\n        dictSize |= ((long) (coder.properties[i + 1] & 0xFF) << (8 * i));\n    }\n    if (dictSize > LZMAInputStream.DICT_SIZE_MAX) {\n        throw new IOException(\"Dictionary larger than 4GiB maximum size\");\n    }\n    // Cast to int safely, as the dictionary size must be within Integer.MAX_VALUE\n    if (dictSize > Integer.MAX_VALUE) {\n        throw new IOException(\"Dictionary size exceeds maximum supported memory\");\n    }\n    return new LZMAInputStream(in, -1, propsByte, (int) dictSize);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}