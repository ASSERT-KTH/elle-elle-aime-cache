{
    "generation": "public XYDataItem addOrUpdate(Number x, Number y) {\n    if (x == null) {\n        throw new IllegalArgumentException(\"Null 'x' argument.\");\n    }\n\n    XYDataItem overwritten = null;\n    int index = indexOf(x);\n    if (index >= 0) {\n        if (!this.allowDuplicateXValues) {\n            XYDataItem existing = (XYDataItem) this.data.get(index);\n            try {\n                overwritten = (XYDataItem) existing.clone();\n            }\n            catch (CloneNotSupportedException e) {\n                throw new SeriesException(\"Couldn't clone XYDataItem!\");\n            }\n            existing.setY(y);\n\n            if (getItemCount() > this.maximumItemCount) {\n                this.data.remove(this.data.size() - 1);\n            }\n        }\n    }\n    else {\n        if (this.autoSort) {\n            // In the autoSort case, we need to find the correct insert position.\n            // Collections.binarySearch returns :\n            //     (-(insertion point) - 1) when key is not present in the array\n            // So we should calculate the insertion point from that result.\n            int insertPoint = -(index + 1);\n            this.data.add(insertPoint, new XYDataItem(x, y));\n        }\n        else {\n            this.data.add(new XYDataItem(x, y));\n        }\n\n        if (getItemCount() > this.maximumItemCount) {\n            this.data.remove(0);\n        }\n    }\n    fireSeriesChanged();\n    return overwritten;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}