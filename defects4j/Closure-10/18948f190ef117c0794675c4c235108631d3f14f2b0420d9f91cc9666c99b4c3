{
    "generation": "static boolean mayBeString(Node n, boolean recurse) {\n    if (recurse) {\n        return allResultsMatch(n, MAY_BE_STRING_PREDICATE);\n    } else {\n        if (n.isString()) {\n            return true;\n        }\n        if (n.isNumber() || n.isBoolean()) {\n            return false;\n        }\n        if (n.isConditional()) {\n            return mayBeString(n.getFirstChild(), false) || mayBeString(n.getFirstChild().getNext(), false);\n        }\n        if (n.isOr() || n.isAnd()) {\n            return mayBeString(n.getFirstChild(), false) || mayBeString(n.getFirstChild().getNext(), false);\n        }\n        return mayBeStringHelper(n);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}