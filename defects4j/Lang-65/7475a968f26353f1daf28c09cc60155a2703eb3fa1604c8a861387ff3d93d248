{
    "generation": "/**\n * <p>Internal calculation method.</p>\n * \n * @param val  the calendar\n * @param field  the field constant\n * @param round  true to round, false to truncate\n * @throws ArithmeticException if the year is over 280 million\n */\nprivate static void modify(Calendar val, int field, boolean round) {\n    if (val.get(Calendar.YEAR) > 280000000) {\n        throw new ArithmeticException(\"Calendar value too large for accurate calculations\");\n    }\n    \n\n    // ----------------- Fix for LANG-59 ---------------------- START ---------------\n    // see http://issues.apache.org/jira/browse/LANG-59\n    //\n    // Manually truncate milliseconds, seconds and minutes, rather than using\n    // Calendar methods.\n\n    // truncate milliseconds\n    if (field == Calendar.MILLISECOND) {\n        val.set(Calendar.MILLISECOND, 0);\n    } \n    // truncate seconds\n    else if (field == Calendar.SECOND || field == Calendar.MINUTE) {\n        val.set(Calendar.SECOND, 0);\n        if (field == Calendar.MINUTE) {\n            val.set(Calendar.MINUTE, 0);\n        }\n    } \n    // truncate minutes\n    else if (field == Calendar.HOUR_OF_DAY || field == Calendar.HOUR) {\n        val.set(Calendar.MINUTE, 0);\n        val.set(Calendar.SECOND, 0);\n        val.set(Calendar.MILLISECOND, 0);\n        if (field == Calendar.HOUR) {\n            if (val.get(Calendar.HOUR_OF_DAY) >= 12) {\n                val.set(Calendar.HOUR_OF_DAY, 12);\n            } else {\n                val.set(Calendar.HOUR_OF_DAY, 0);\n            }\n        } else if (field == Calendar.HOUR_OF_DAY) {\n            val.set(Calendar.HOUR_OF_DAY, val.get(Calendar.HOUR_OF_DAY));\n        }\n    }\n\n    // reset time\n    if (field > Calendar.SECOND) {\n        val.set(Calendar.MILLISECOND, 0);\n        val.set(Calendar.SECOND, 0);\n        val.set(Calendar.MINUTE, 0);\n        val.set(Calendar.HOUR_OF_DAY, val.get(Calendar.HOUR_OF_DAY));\n    }\n\n    // ----------------- Fix for LANG-59 ----------------------- END ----------------\n\n    // Rest of the method remains the same...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}