{
    "generation": "private static void modify(Calendar val, int field, boolean round) {\n    if (val.get(Calendar.YEAR) > 280000000) {\n        throw new ArithmeticException(\"Calendar value too large for accurate calculations\");\n    }\n\n    // ----------------- Fix for LANG-59 ---------------------- START ---------------\n    // see http://issues.apache.org/jira/browse/LANG-59\n    //\n    // Manually truncate milliseconds, seconds and minutes, rather than using\n    // Calendar methods.\n\n    // Store the original time in milliseconds for adjustment\n    long millis = val.getTimeInMillis();\n\n    // truncate milliseconds\n    millis -= millis % 1000;\n\n    if (field == Calendar.SECOND || field == Calendar.MINUTE || field == Calendar.HOUR_OF_DAY || field == Calendar.HOUR || field == Calendar.DATE) {\n        // No need to continue if we're truncating at this level or higher\n        val.setTimeInMillis(millis);\n        return;\n    }\n\n    // truncate seconds\n    millis -= (millis / 1000) % 60 * 1000;\n\n    if (field == Calendar.MINUTE || field == Calendar.HOUR_OF_DAY || field == Calendar.HOUR || field == Calendar.DATE) {\n        // No need to continue if we're truncating at this level or higher\n        val.setTimeInMillis(millis);\n        return;\n    }\n\n    // truncate minutes\n    millis -= (millis / (60 * 1000)) % 60 * 60 * 1000;\n\n    // reset time\n    val.setTimeInMillis(millis);\n    // ----------------- Fix for LANG-59 ----------------------- END ----------------\n\n    boolean roundUp = false;\n    for (int i = 0; i < fields.length; i++) {\n        // Rest of the code...\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}