{
    "generation": "boolean process(Token t, TreeBuilder tb) {\n    switch (t.type) {\n        // ... other cases remain unchanged ...\n\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.name();\n            // ... other start tag cases remain unchanged ...\n\n            else if (name.equals(\"script\")) {\n                tb.insert(startTag);\n                tb.tokeniser.transition(TokeniserState.ScriptData);\n                tb.markInsertionMode();\n                tb.transition(Text);\n            }\n\n            // ... other start tag cases remain unchanged ...\n\n            break;\n\n        // ... other cases remain unchanged ...\n\n        case EndTag:\n            Token.EndTag endTag = t.asEndTag();\n            name = endTag.name();\n            if (name.equals(\"script\")) {\n                if (!tb.inScope(\"script\")) {\n                    tb.error(this);\n                    return false;\n                } else {\n                    tb.generateImpliedEndTags();\n                    if (!tb.currentElement().nodeName().equals(\"script\"))\n                        tb.error(this);\n                    tb.popStackToClose(\"script\");\n                }\n            } else if (name.equals(\"body\")) {\n                if (!tb.inScope(\"body\")) {\n                    tb.error(this);\n                    return false;\n                } else {\n                    // todo: error if stack contains something not dd, dt, li, optgroup, option, p, rp, rt, tbody, td, tfoot, th, thead, tr, body, html\n                    tb.transition(AfterBody);\n                }\n            } else if (name.equals(\"html\")) {\n                boolean notIgnored = tb.process(new Token.EndTag(\"body\"));\n                if (notIgnored)\n                    return tb.process(endTag);\n            }\n\n            // ... other end tag cases remain unchanged ...\n\n            break;\n\n        // ... EOF case remains unchanged ...\n\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}