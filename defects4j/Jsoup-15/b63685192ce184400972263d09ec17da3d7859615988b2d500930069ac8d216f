{
    "generation": "boolean process(Token t, TreeBuilder tb) {\n    switch (t.type) {\n        //... (rest of the function remains the same)\n\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.name();\n            //... (rest of the function remains the same)\n\n            else if (StringUtil.in(name, \"style\", \"script\", \"noscript\", \"xmp\", \"iframe\", \"noembed\")) {\n                tb.reconstructFormattingElements();\n                handleRawtext(startTag, tb);\n                // FIX INTRODUCED HERE\n                tb.framesetOk(false);\n                if (name.equals(\"script\")) {\n                    tb.tokeniser.transition(TokeniserState.ScriptData);\n                } else if (name.equals(\"style\")) {\n                    tb.tokeniser.transition(TokeniserState.Rawtext);\n                }\n            }\n\n            //... (rest of the function remains the same)\n\n        case EndTag:\n            //... (rest of the function remains the same)\n\n            else if (StringUtil.in(name, \"style\", \"script\", \"noscript\", \"xmp\", \"iframe\", \"noembed\")) {\n                if (!tb.inScope(name)) {\n                    tb.error(this);\n                    return false;\n                } else {\n                    tb.generateImpliedEndTags();\n                    if (!tb.currentElement().nodeName().equals(name))\n                        tb.error(this);\n                    tb.popStackToClose(name);\n                    // FIX INTRODUCED HERE\n                    if (name.equals(\"script\")) {\n                        tb.tokeniser.transition(TokeniserState.Data);\n                    } else if (name.equals(\"style\")) {\n                        tb.tokeniser.transition(TokeniserState.Data);\n                    }\n                }\n            }\n\n            //... (rest of the function remains the same)\n    }\n    return true;\n}\n\n// Helper function (no changes)\nvoid handleRawtext(Token.StartTag tag, TreeBuilder tb) {\n    tb.insert(tag);\n    tb.tokeniser.acknowledgeSelfClosingFlag();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}