{
    "generation": "boolean process(Token t, TreeBuilder tb) {\n    switch (t.type) {\n        //... (rest of the function remains the same)\n\n        case StartTag:\n            //... (rest of the StartTag block remains the same)\n\n            else if (StringUtil.in(name, \"script\", \"style\")) { // Added this condition\n                tb.reconstructFormattingElements();\n                tb.insert(startTag);\n                tb.tokeniser.transition(TokeniserState.Rcdata); // Transition to Rcdata state for script/style tags\n                tb.markInsertionMode();\n                tb.framesetOk(false);\n            }\n\n            //... (rest of the function remains the same)\n\n        case Character: {\n            Token.Character c = t.asCharacter();\n            if (c.getData().equals(nullString)) {\n                // todo confirm that check\n                tb.error(this);\n                return false;\n            } else if (isWhitespace(c)) {\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n            } else {\n                tb.reconstructFormattingElements();\n                if (tb.state() == Text && tb.currentElement().nodeName().equals(\"script\") || tb.currentElement().nodeName().equals(\"style\")) {\n                    tb.currentElement().appendData(c.getData()); // Append data to script/style tags in Text state\n                } else {\n                    tb.insert(c);\n                    tb.framesetOk(false);\n                }\n            }\n            break;\n        }\n\n        //... (rest of the function remains the same)\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}