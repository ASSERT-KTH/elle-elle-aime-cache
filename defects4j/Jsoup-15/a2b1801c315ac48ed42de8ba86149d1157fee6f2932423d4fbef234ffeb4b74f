{
    "generation": "        boolean process(Token t, TreeBuilder tb) {\n            switch (t.type) {\n                ...\n                case Rawdata:\n                    handleRawdata(t, tb);\n                    break;\n                ...\n                case StartTag:\n                    Token.StartTag startTag = t.asStartTag();\n                    String name = startTag.name();\n                    if (name.equals(\"script\") || name.equals(\"style\")) {\n                        tb.framesetOk(false);\n                        tb.insert(startTag);\n                        tb.markInsertionMode();\n                        tb.transition(InScript);\n                        // Prevent script/style content from being included in text representation\n                        tb.setScriptStyleContentSuppression(true);\n                    } else {\n                        // Existing logic for other start tags\n                        ...\n                    }\n                    break;\n                case EndTag:\n                    Token.EndTag endTag = t.asEndTag();\n                    name = endTag.name();\n                    if (name.equals(\"script\") || name.equals(\"style\")) {\n                        tb.generateImpliedEndTags();\n                        if (!tb.currentElement().nodeName().equals(name)) {\n                            tb.error(this);\n                        }\n                        tb.popStackToClose(name);\n                        tb.clearActiveFormattingElementsToLastMarker();\n                        // Re-enable text content inclusion\n                        tb.setScriptStyleContentSuppression(false);\n                        tb.transition(tb.originalInsertionMode());\n                    } else {\n                        // Existing logic for other end tags\n                        ...\n                    }\n                    break;\n                ...\n                case EndOfFile:\n                    // Ensure script/style content suppression is off before finalizing\n                    tb.setScriptStyleContentSuppression(false);\n                    // stop parsing\n                    break;\n            }\n            return true;\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}