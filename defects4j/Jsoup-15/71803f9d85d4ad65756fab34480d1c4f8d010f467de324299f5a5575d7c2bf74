{
    "generation": "        boolean process(Token t, TreeBuilder tb) {\n            switch (t.type) {\n                case Character: {\n                    // ... (same code as before)\n                }\n                case Comment: {\n                    // ... (same code as before)\n                }\n                case Doctype: {\n                    // ... (same code as before)\n                }\n                case StartTag:\n                    Token.StartTag startTag = t.asStartTag();\n                    String name = startTag.name();\n                    if (name.equals(\"html\")) {\n                        // ... (same code as before)\n                    } else if (StringUtil.in(name, \"base\", \"basefont\", \"bgsound\", \"command\", \"link\", \"meta\", \"noframes\", \"style\", \"title\")) {\n                        return tb.process(t, InHead);\n                    } else if (name.equals(\"body\")) {\n                        // ... (same code as before)\n                    } \n                    // ... (all other existing conditions)\n                    else if (name.equals(\"script\") || name.equals(\"style\")) {\n                        handleRawtext(startTag, tb);\n                    }\n                    else {\n                        tb.reconstructFormattingElements();\n                        tb.insert(startTag);\n                    }\n                    break;\n\n                case EndTag:\n                    // ... (same code as before)\n                    break;\n                case EOF:\n                    // ... (same code as before)\n                    break;\n            }\n            return true;\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}