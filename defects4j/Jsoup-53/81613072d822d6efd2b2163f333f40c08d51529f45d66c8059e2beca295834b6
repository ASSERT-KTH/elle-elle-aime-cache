{
    "generation": "    /**\n     * Pulls a balanced string off the queue. E.g. if queue is \"(one (two) three) four\", (,) will return \"one (two) three\",\n     * and leave \" four\" on the queue. Unbalanced openers and closers can quoted (with ' or \") or escaped (with \\). Those escapes will be left\n     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for\n     * contains text strings; use unescape for that.\n     * @param open opener\n     * @param close closer\n     * @return data matched from the queue\n     */\n    public String chompBalanced(char open, char close) {\n        int start = -1;\n        int end = -1;\n        int depth = 0;\n        boolean escaped = false;\n\n        while (!isEmpty()) {\n            char c = consume();\n            if (escaped) {\n                // If the previous character was an escape, just continue without changing depth\n                escaped = false;\n            } else if (c == '\\\\') {\n                // Set the escaped flag for the next character\n                escaped = true;\n            } else if (c == open) {\n                depth++;\n                if (start == -1) {\n                    start = pos - 1; // Adjust start to include the opening character\n                }\n            } else if (c == close) {\n                depth--;\n                if (depth == 0) {\n                    end = pos; // Adjust end to include the closing character\n                    break;\n                }\n            }\n        }\n\n        return (end >= 0) ? queue.substring(start, end) : \"\";\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}