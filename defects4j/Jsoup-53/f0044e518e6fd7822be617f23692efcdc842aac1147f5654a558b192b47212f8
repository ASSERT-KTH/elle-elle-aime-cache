{
    "generation": "public String chompBalanced(char open, char close) {\n    int start = -1;\n    int end = -1;\n    int depth = 0;\n    boolean inQuote = false;\n    char quoteChar = 0;\n    boolean escaped = false;\n    StringBuilder result = new StringBuilder();\n\n    while (!isEmpty()) {\n        char c = consume();\n        if (escaped) {\n            // The previous character was an escape, so include this character as is\n            result.append(c);\n            escaped = false;\n        } else if (c == '\\\\') {\n            // Escape character\n            escaped = true;\n            continue;\n        } else if (c == '\"' || c == '\\'') {\n            // Quote character\n            if (!inQuote) {\n                // Start of a quote\n                inQuote = true;\n                quoteChar = c;\n            } else if (c == quoteChar) {\n                // End of the quote\n                inQuote = false;\n            }\n            result.append(c);\n        } else {\n            if (!inQuote) {\n                if (c == open) {\n                    depth++;\n                    if (start == -1) {\n                        start = pos;\n                    }\n                } else if (c == close) {\n                    depth--;\n                }\n                if (depth < 0) {\n                    // Unbalanced closer\n                    break;\n                }\n            }\n            result.append(c);\n        }\n        if (depth <= 0 && !inQuote) {\n            // Reached the end of the balanced string\n            end = pos;\n            break;\n        }\n    }\n\n    return (end >= 0 && start >= 0) ? result.toString() : \"\";\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}