{
    "generation": "    public String chompBalanced(char open, char close) {\n        int start = -1;\n        int end = -1;\n        int depth = 0;\n        char last = 0;\n        boolean inQuote = false;\n        char quoteChar = 0;\n\n        do {\n            if (isEmpty()) break;\n            char c = consume();\n            if (last == 0 || last != ESC) {\n                if (c == '\\\\' && !inQuote) {\n                    if (pos < queue.length()) {\n                        // Consume the next character as part of the escape sequence\n                        c = consume();\n                    }\n                } else if (c == '\\'' || c == '\\\"') {\n                    if (!inQuote) {\n                        inQuote = true;\n                        quoteChar = c;\n                    } else if (c == quoteChar) {\n                        inQuote = false;\n                    }\n                } else if (!inQuote) {\n                    if (c == open) {\n                        depth++;\n                        if (start == -1)\n                            start = pos;\n                    } else if (c == close)\n                        depth--;\n                }\n            }\n\n            if (depth > 0 && last != 0)\n                end = pos; // don't include the outer match pair in the return\n            last = c;\n        } while (depth > 0 || inQuote);\n        return (end >= 0) ? queue.substring(start, end) : \"\";\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}