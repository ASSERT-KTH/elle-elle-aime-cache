{
    "generation": "    /**\n     * Pulls a balanced string off the queue. E.g. if queue is \"(one (two) three) four\", (,) will return \"one (two) three\",\n     * and leave \" four\" on the queue. Unbalanced openers and closers can quoted (with ' or \") or escaped (with \\). Those escapes will be left\n     * in the returned string, which is suitable for regexes (where we need to preserve the escape), but unsuitable for\n     * contains text strings; use unescape for that.\n     * @param open opener\n     * @param close closer\n     * @return data matched from the queue\n     */\n    public String chompBalanced(char open, char close) {\n        int start = -1;\n        int end = -1;\n        int depth = 0;\n        char last = 0;\n\n        do {\n            if (isEmpty()) break;\n            Character c = consume();\n\n            if (last == ESC) {\n                // Do nothing if the last character was an escape character\n            } else if ((last == '\\\\') && (c == 'n' || c == 't' || c == 'f' || c == 'r')) {\n                // Handle escaped characters \\n, \\t, \\f, \\r\n            } else if (c == 0) {\n                break; // EOF\n            } else if (c.equals(open)) {\n                depth++;\n                if (start == -1)\n                    start = pos;\n            } else if (c.equals(close)) {\n                depth--;\n                if (depth < 0) {\n                    requeue(Character.toString(c)); // Found unbalanced closer, requeue it\n                    break;\n                }\n            }\n\n            if (depth > 0)\n                end = pos; // don't include the outer match pair in the return\n            last = c;\n        } while (depth > 0);\n\n        if (end >= 0)\n            return queue.substring(start, end);\n\n        // Requeue remaining characters if no balanced string was found\n        while (!isEmpty()) {\n            requeue(Character.toString(consume()));\n        }\n        return \"\";\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}