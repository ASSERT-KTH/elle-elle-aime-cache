{
    "generation": "    public String chompBalanced(char open, char close) {\n        int start = -1;\n        int end = -1;\n        int depth = 0;\n        char last = 0;\n\n        do {\n            if (isEmpty()) break;\n            Character c = consume();\n            if (last != ESC) { // Only check for special cases if not escaped\n                if (c.equals(open)) {\n                    depth++;\n                    if (start == -1)\n                        start = pos - 1; // Adjust start to include the opening delimiter\n                } else if (c.equals(close) && depth > 0) {\n                    depth--;\n                    if (depth == 0) {\n                        end = pos; // Include the closing delimiter\n                        break; // Exit once the balanced section is found\n                    }\n                }\n            }\n\n            last = c; // Update the last character\n        } while (depth > 0 || !isEmpty()); // Ensure to process all characters if depth > 0\n\n        return (start != -1 && end != -1) ? queue.substring(start, end) : \"\";\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}