{
    "generation": "    public String chompBalanced(char open, char close) {\n        int start = -1;\n        int end = -1;\n        int depth = 0;\n        char last = 0;\n\n        do {\n            if (isEmpty()) break;\n            Character c = consume();\n            if (last == 0 || last != ESC) {\n                if (c.equals(open)) {\n                    depth++;\n                    if (start == -1)\n                        start = pos - 1; // Adjust to include the current character in the substring\n                } else if (c.equals(close)) {\n                    depth--;\n                    if (depth == 0)\n                        end = pos; // Include up to this position for the balanced substring\n                }\n            }\n\n            last = c;\n        } while (depth > 0);\n\n        return (start >= 0 && end > start) ? queue.substring(start, end) : \"\";\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}