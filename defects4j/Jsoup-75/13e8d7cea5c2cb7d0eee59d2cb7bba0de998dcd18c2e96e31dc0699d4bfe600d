{
    "generation": "final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {\n    final int sz = size;\n    for (int i = 0; i < sz; i++) {\n        // inlined from Attribute.html()\n        final String key = keys[i];\n        final String val = vals[i];\n        accum.append(' ').append(key);\n\n        // collapse checked=null, checked=\"\", checked=checked; write out others\n        if (!(out.syntax() == Document.OutputSettings.Syntax.html\n            && (isBooleanAttribute(key) && (val == null || val.isEmpty() || val.equals(key))))) {\n            accum.append(\"=\\\"\");\n            Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);\n            accum.append('\"');\n        }\n    }\n}\n\nprivate boolean isBooleanAttribute(String key) {\n    // List of boolean attributes as per HTML specifications\n    String[] booleanAttributes = {\n        \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\",\n        \"hidden\", \"ismap\", \"itemscope\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"noresize\", \"noshade\", \"novalidate\",\n        \"nowrap\", \"open\", \"readonly\", \"required\", \"reversed\", \"scoped\", \"seamless\", \"selected\", \"sortable\", \"truespeed\",\n        \"typemustmatch\", \"visible\"\n    };\n    for (String attr : booleanAttributes) {\n        if (key.equalsIgnoreCase(attr)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}