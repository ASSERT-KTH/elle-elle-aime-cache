{
    "generation": "final void html(final Appendable accum, final Document.OutputSettings out) throws IOException {\n    final int sz = size;\n    for (int i = 0; i < sz; i++) {\n        // inlined from Attribute.html()\n        final String key = keys[i];\n        final String val = vals[i];\n        accum.append(' ').append(key);\n\n        // Handle boolean attributes correctly\n        if (Attribute.isBooleanAttribute(key)) {\n            if (val == null || val.isEmpty() || val.equalsIgnoreCase(key)) {\n                // For boolean attributes, only output the key if value is null, empty, or equal to key\n                continue;\n            } else {\n                // If a boolean attribute has a non-standard value, output it as a regular attribute\n                accum.append(\"=\\\"\");\n                Entities.escape(accum, val, out, true, false, false);\n                accum.append('\"');\n            }\n        } else {\n            // For non-boolean attributes, always output the value\n            accum.append(\"=\\\"\");\n            Entities.escape(accum, val == null ? EmptyString : val, out, true, false, false);\n            accum.append('\"');\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}