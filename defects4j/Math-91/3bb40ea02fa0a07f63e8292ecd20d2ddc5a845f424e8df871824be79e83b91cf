{
    "generation": "/**\n * Compares this object to another based on size.\n * @param object the object to compare to\n * @return -1 if this is less than <tt>object</tt>, +1 if this is greater\n *         than <tt>object</tt>, 0 if they are equal.\n */\npublic int compareTo(Fraction object) {\n    if (this == object) {\n        return 0;\n    }\n    \n    long n1 = numerator;\n    long d1 = denominator;\n    long n2 = object.numerator;\n    long d2 = object.denominator;\n    \n    long lcm = (d1 / gcd(d1, d2)) * d2;\n    long c1 = n1 * (lcm / d1);\n    long c2 = n2 * (lcm / d2);\n    \n    return (c1 < c2) ? -1 : ((c1 > c2) ? 1 : 0);\n}\n\n// Helper method to calculate the greatest common divisor\nprivate static long gcd(long a, long b) {\n    while (b != 0) {\n        long t = b;\n        b = a % b;\n        a = t;\n    }\n    return a;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}