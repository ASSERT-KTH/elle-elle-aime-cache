{
    "generation": "/**\n * Compares this object to another based on size.\n * @param object the object to compare to\n * @return -1 if this is less than <tt>object</tt>, +1 if this is greater\n *         than <tt>object</tt>, 0 if they are equal.\n */\npublic int compareTo(Fraction object) {\n    int cmp = compareFraction(object);\n    if (cmp != 0) {\n        return cmp;\n    }\n    // If fractions are equal, compare their double values\n    double nOd = doubleValue();\n    double dOn = object.doubleValue();\n    return Double.compare(nOd, dOn);\n}\n\nprivate int compareFraction(Fraction object) {\n    long thisNumerator = this.numerator;\n    long thisDenominator = this.denominator;\n    long otherNumerator = object.numerator;\n    long otherDenominator = object.denominator;\n\n    long normalizedThisNumerator = thisNumerator * otherDenominator;\n    long normalizedOtherNumerator = otherNumerator * thisDenominator;\n\n    return Long.compare(normalizedThisNumerator, normalizedOtherNumerator);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}