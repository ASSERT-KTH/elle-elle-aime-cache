{
    "generation": "JSType meet(JSType that) {\n  UnionTypeBuilder builder = new UnionTypeBuilder(registry);\n  \n  if (that instanceof UnionType) {\n    for (JSType thisAlt : alternates) {\n      for (JSType thatAlt : ((UnionType) that).alternates) {\n        JSType meetResult = thisAlt.meet(thatAlt);\n        if (meetResult != null && !meetResult.isNoType()) {\n          builder.addAlternate(meetResult);\n        }\n      }\n    }\n  } else {\n    for (JSType alternate : alternates) {\n      JSType meetResult = alternate.meet(that);\n      if (meetResult != null && !meetResult.isNoType()) {\n        builder.addAlternate(meetResult);\n      }\n    }\n  }\n\n  JSType result = builder.build();\n  if (result != null) {\n    return result;\n  } else if (this.isObject() && that.isObject()) {\n    return getNativeType(JSTypeNative.NO_OBJECT_TYPE);\n  } else {\n    return getNativeType(JSTypeNative.NO_TYPE);\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}