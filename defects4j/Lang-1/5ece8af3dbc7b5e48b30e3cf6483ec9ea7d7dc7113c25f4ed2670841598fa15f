{
    "generation": "/**\n * <p>Turns a string value into a java.lang.Number.</p>\n *...\n */\npublic static Number createNumber(final String str) throws NumberFormatException {\n    if (str == null) {\n        return null;\n    }\n    if (StringUtils.isBlank(str)) {\n        throw new NumberFormatException(\"A blank string is not a valid number\");\n    }\n    // Need to deal with all possible hex prefixes here\n    final String[] hex_prefixes = {\"0x\", \"0X\", \"-0x\", \"-0X\", \"#\", \"-#\"};\n    int pfxLen = 0;\n    for(final String pfx : hex_prefixes) {\n        if (str.startsWith(pfx)) {\n            pfxLen = pfx.length(); // Fix: Assign the exact length, not cumulative\n            break;\n        }\n    }\n    if (pfxLen > 0) { // we have a hex number\n        final String hexStr = str.substring(pfxLen); // Extract the hex part\n        if (hexStr.length() > 16) { // too many for Long\n            return new BigInteger(hexStr, 16);\n        }\n        if (hexStr.length() > 8) { // too many for an int\n            return Long.valueOf(hexStr, 16);\n        }\n        return Integer.valueOf(hexStr, 16);\n    }\n    //... (rest of the function remains the same)\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}