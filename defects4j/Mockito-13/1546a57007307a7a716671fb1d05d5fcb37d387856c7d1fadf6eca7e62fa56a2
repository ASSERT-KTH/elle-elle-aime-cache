{
    "generation": "public Object handle(Invocation invocation) throws Throwable {\n    if (invocationContainerImpl.hasAnswersForStubbing()) {\n        InvocationMatcher invocationMatcher = matchersBinder.bindMatchers(mockingProgress.getArgumentMatcherStorage(), invocation);\n        invocationContainerImpl.setMethodForStubbing(invocationMatcher);\n        return null;\n    }\n    VerificationMode verificationMode = mockingProgress.pullVerificationMode();\n    InvocationMatcher invocationMatcher = matchersBinder.bindMatchers(mockingProgress.getArgumentMatcherStorage(), invocation);\n    mockingProgress.validateState();\n\n    if (verificationMode != null && verificationMode instanceof MockAwareVerificationMode) {\n        MockAwareVerificationMode mockAwareVerificationMode = (MockAwareVerificationMode) verificationMode;\n        if (mockAwareVerificationMode.getMock() == invocation.getMock()) {\n            VerificationDataImpl data = new VerificationDataImpl(invocationContainerImpl, invocationMatcher);\n            mockAwareVerificationMode.verify(data);\n            return null;\n        } else {\n            // If verification was started on a different mock, we need to re-add the verification mode\n            mockingProgress.verifyLater(verificationMode);\n        }\n    }\n\n    invocationContainerImpl.setInvocationForPotentialStubbing(invocationMatcher);\n    OngoingStubbingImpl<T> ongoingStubbing = new OngoingStubbingImpl<T>(invocationContainerImpl);\n    mockingProgress.reportOngoingStubbing(ongoingStubbing);\n\n    StubbedInvocationMatcher stubbedInvocation = invocationContainerImpl.findAnswerFor(invocation);\n\n    if (stubbedInvocation != null) {\n        stubbedInvocation.captureArgumentsFrom(invocation);\n        return stubbedInvocation.answer(invocation);\n    } else {\n        Object ret = mockSettings.getDefaultAnswer().answer(invocation);\n\n        invocationContainerImpl.resetInvocationForPotentialStubbing(invocationMatcher);\n        return ret;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}