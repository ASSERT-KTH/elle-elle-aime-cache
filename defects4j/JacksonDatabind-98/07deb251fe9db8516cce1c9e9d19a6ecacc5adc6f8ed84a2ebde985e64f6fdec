{
    "generation": "public Object complete(JsonParser p, DeserializationContext ctxt,\n        PropertyValueBuffer buffer, PropertyBasedCreator creator)\n    throws IOException\n{\n    // first things first: deserialize all data buffered\n    final int len = _properties.length;\n    Object[] values = new Object[len];\n    Object typeValue = null;\n\n    for (int i = 0; i < len; ++i) {\n        String typeId = _typeIds[i];\n        final ExtTypedProperty extProp = _properties[i];\n        if (typeId == null) {\n            // let's allow missing both type and property\n            if (_tokens[i] == null) {\n                continue;\n            }\n            // but not just one\n            if (!extProp.hasDefaultType()) {\n                ctxt.reportInputMismatch(_beanType,\n                        \"Missing external type id property '%s'\",\n                        extProp.getTypePropertyName());\n            } else {\n                typeId = extProp.getDefaultTypeId();\n                typeValue = _typeDeserializer.deserializeTypedFromAny(p, ctxt);\n            }\n        } else if (_tokens[i] == null) {\n            SettableBeanProperty prop = extProp.getProperty();\n            ctxt.reportInputMismatch(_beanType,\n                    \"Missing property '%s' for external type id '%s'\",\n                    prop.getName(), _properties[i].getTypePropertyName());\n        }\n\n        if (!_typeProperty.getName().equals(extProp.getTypePropertyName())) {\n            values[i] = _deserialize(p, ctxt, i, typeId);\n        } else {\n            typeValue = _deserialize(p, ctxt, i, typeId);\n        }\n\n        final SettableBeanProperty prop = extProp.getProperty();\n        // also: if it's creator prop, fill in\n        if (prop.getCreatorIndex() >= 0) {\n            buffer.assignParameter(prop, values[i]);\n\n            // if id is NOT plain `String`, apply deserializer\n            if (typeValue != null) {\n                SettableBeanProperty typeProp = extProp.getTypeProperty();\n                if ((typeProp != null) && (typeProp.getCreatorIndex() >= 0)) {\n                    buffer.assignParameter(typeProp, typeValue);\n                }\n            }\n        }\n    }\n    Object bean = creator.build(ctxt, buffer);\n    // third: assign non-creator properties\n    for (int i = 0; i < len; ++i) {\n        SettableBeanProperty prop = _properties[i].getProperty();\n        if (prop.getCreatorIndex() < 0) {\n            prop.set(bean, values[i]);\n        }\n    }\n    return bean;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}