{
    "generation": "    /**\n     * Variant called when creation of the POJO involves buffering of creator properties\n     * as well as property-based creator.\n     */\n    public Object complete(JsonParser p, DeserializationContext ctxt,\n            PropertyValueBuffer buffer, PropertyBasedCreator creator)\n        throws IOException\n    {\n        // first things first: deserialize all data buffered\n        final int len = _properties.length;\n        Object[] values = new Object[len];\n        for (int i = 0; i < len; ++i) {\n            String typeId = _typeIds[i];\n            final ExtTypedProperty extProp = _properties[i];\n            if (typeId == null) {\n                // Allow missing both type and property if neither is set\n                if (_tokens[i] == null) {\n                    continue;\n                }\n                // Check for default type\n                if (!extProp.hasDefaultType()) {\n                    ctxt.reportInputMismatch(_beanType,\n                            \"Missing external type id property '%s'\",\n                            extProp.getTypePropertyName());\n                } else {\n                    typeId = extProp.getDefaultTypeId();\n                }\n            } else if (_tokens[i] == null) {\n                // Type id is present but value is missing\n                SettableBeanProperty prop = extProp.getProperty();\n                ctxt.reportInputMismatch(_beanType,\n                        \"Missing property '%s' for external type id '%s'\",\n                        prop.getName(), extProp.getTypePropertyName());\n            }\n\n            // Deserialize the value\n            values[i] = _deserialize(p, ctxt, i, typeId);\n\n            final SettableBeanProperty prop = extProp.getProperty();\n            // If it's a creator property, fill it into the buffer\n            if (prop.getCreatorIndex() >= 0) {\n                buffer.assignParameter(prop, values[i]);\n\n                // Handle type property for creator properties\n                SettableBeanProperty typeProp = extProp.getTypeProperty();\n                if (typeProp != null && typeProp.getCreatorIndex() >= 0) {\n                    // Deserialize typeId properly if not a plain string\n                    Object deserializedTypeId = typeProp.getValueDeserializer() != null\n                            ? typeProp.getValueDeserializer().deserialize(p, ctxt)\n                            : typeId;\n                    buffer.assignParameter(typeProp, deserializedTypeId);\n                }\n            }\n        }\n\n        // Build the bean using the creator\n        Object bean = creator.build(ctxt, buffer);\n\n        // Assign non-creator properties\n        for (int i = 0; i < len; ++i) {\n            SettableBeanProperty prop = _properties[i].getProperty();\n            if (prop.getCreatorIndex() < 0) {\n                prop.set(bean, values[i]);\n            }\n        }\n        return bean;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}