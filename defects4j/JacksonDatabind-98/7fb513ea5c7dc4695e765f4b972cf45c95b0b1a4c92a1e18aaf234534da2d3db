{
    "generation": "public Object complete(JsonParser p, DeserializationContext ctxt, PropertyValueBuffer buffer, PropertyBasedCreator creator) throws IOException\n{\n    final int len = _properties.length;\n    Object[] values = new Object[len];\n    for (int i = 0; i < len; ++i) {\n        String typeId = _typeIds[i];\n        final ExtTypedProperty extProp = _properties[i];\n        if (typeId == null) {\n            if (_tokens[i] == null) {\n                continue;\n            }\n            if (!extProp.hasDefaultType()) {\n                ctxt.reportInputMismatch(_beanType, \"Missing external type id property '%s'\", extProp.getTypePropertyName());\n            } else {\n                typeId = extProp.getDefaultTypeId();\n            }\n        } else if (_tokens[i] == null) {\n            SettableBeanProperty prop = extProp.getProperty();\n            ctxt.reportInputMismatch(_beanType, \"Missing property '%s' for external type id '%s'\", prop.getName(), _properties[i].getTypePropertyName());\n        }\n        values[i] = _deserialize(p, ctxt, i, typeId);\n\n        SettableBeanProperty prop = extProp.getProperty();\n        if (prop.getCreatorIndex() >= 0) {\n            buffer.assignParameter(prop, values[i]);\n\n            SettableBeanProperty typeProp = extProp.getTypeProperty();\n            if (typeProp != null && typeProp.getCreatorIndex() >= 0) {\n                buffer.assignParameter(typeProp, typeId);\n            }\n        } else {\n            // Assign non-creator property\n            prop.set(buffer.getParameters()[prop.getCreatorIndex()], values[i]);\n        }\n    }\n    Object bean = creator.build(ctxt, buffer);\n    return bean;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}