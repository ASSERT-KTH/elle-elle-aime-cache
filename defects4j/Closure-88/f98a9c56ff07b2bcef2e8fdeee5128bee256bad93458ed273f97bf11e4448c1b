{
    "generation": "  private VariableLiveness isVariableReadBeforeKill(\n      Node n, String variable) {\n    if (NodeUtil.isName(n) && variable.equals(n.getString())) {\n      if (NodeUtil.isLhsOfAssign(n)) {\n        // The variable is part of a LHS assignment.\n        return VariableLiveness.KILL;\n      } else {\n        return VariableLiveness.READ;\n      }\n    }\n\n    // Expressions are evaluated left-right, depth first.\n    VariableLiveness result = VariableLiveness.MAYBE_LIVE;\n    for (Node child = n.getFirstChild();\n        child != null; child = child.getNext()) {\n      if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION\n        VariableLiveness childState = isVariableReadBeforeKill(child, variable);\n        if (childState == VariableLiveness.READ || childState == VariableLiveness.KILL) {\n          return childState; // Return immediately if a definitive state is found.\n        }\n      }\n    }\n    return result;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}