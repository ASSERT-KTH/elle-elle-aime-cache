{
    "generation": "private VariableLiveness isVariableReadBeforeKill(\n      Node n, String variable) {\n    if (NodeUtil.isName(n) && variable.equals(n.getString())) {\n      if (NodeUtil.isLhs(n, n.getParent())) {\n        // Still a kill since it's the left-hand side of an assignment\n        return VariableLiveness.KILL;\n      } else {\n        return VariableLiveness.READ;\n      }\n    }\n\n    if (n.isAnd() || n.isOr()) {\n      // If we encounter a logical AND or OR, we return MAYBE_LIVE because\n      // the right-hand side may not be evaluated.\n      return VariableLiveness.MAYBE_LIVE;\n    } else {\n      // Expressions are evaluated left-right, depth first.\n      for (Node child = n.getFirstChild();\n          child != null; child = child.getNext()) {\n        if (!ControlFlowGraph.isEnteringNewCfgNode(child)) {\n          VariableLiveness state = isVariableReadBeforeKill(child, variable);\n          if (state != VariableLiveness.MAYBE_LIVE) {\n            return state;\n          }\n        }\n      }\n    }\n\n    return VariableLiveness.MAYBE_LIVE;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}