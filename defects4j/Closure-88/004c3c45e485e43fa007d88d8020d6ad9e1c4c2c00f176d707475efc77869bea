{
    "generation": "private VariableLiveness isVariableReadBeforeKill(Node n, String variable) {\n    if (NodeUtil.isName(n)) {\n        if (variable.equals(n.getString())) {\n            if (NodeUtil.isLhs(n, n.getParent())) {\n                return VariableLiveness.KILL;\n            } else {\n                return VariableLiveness.READ;\n            }\n        }\n        else if (NodeUtil.isLhs(n, n.getParent())) {\n            return VariableLiveness.MAYBE_LIVE;\n        }\n    }\n\n    for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {\n        if (!ControlFlowGraph.isEnteringNewCfgNode(child)) {\n            VariableLiveness state = isVariableReadBeforeKill(child, variable);\n            if (state != VariableLiveness.MAYBE_LIVE) {\n                // If variable is killed or read in child, then in the parent, it must be read after it's killed\n                if(state == VariableLiveness.KILL ||\n                        (state == VariableLiveness.READ && NodeUtil.isLhs(n, n.getParent()))) {\n                    return VariableLiveness.READ;\n                }\n                else {\n                    return state;\n                }\n            }\n        }\n    }\n\n    // If variable is assigned in this node, then it's killed, unless it's read later in this node\n    if (NodeUtil.isLhs(n, n.getParent())) {\n        return VariableLiveness.KILL;\n    }\n\n    return VariableLiveness.MAYBE_LIVE;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}