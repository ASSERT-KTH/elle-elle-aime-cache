{
    "generation": "    /**\n     * Method that can be called on backends that support passing opaque datatypes of\n     * non-JSON formats\n     *\n     * @since 2.8\n     */\n    public void writeEmbeddedObject(Object object) throws IOException {\n        if (object == null) {\n            _writeNull();\n            return;\n        }\n\n        if (object instanceof byte[]) {\n            _writeBinary((byte[]) object);\n            return;\n        }\n\n        throw new JsonGenerationException(\"No native support for writing embedded objects of type \" + object.getClass().getName(), this);\n    }\n\n    // Helper methods to be implemented by subclasses\n    protected void _writeNull() throws IOException {\n        // Default implementation to write a null value\n        // This can be overridden by subclasses if necessary\n    }\n\n    protected void _writeBinary(byte[] data) throws IOException {\n        // Default implementation to write binary data\n        // This can be overridden by subclasses if necessary\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}