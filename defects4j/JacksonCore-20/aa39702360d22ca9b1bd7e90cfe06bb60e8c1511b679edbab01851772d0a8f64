{
    "generation": "/**\n * Method that can be called on backends that support passing opaque datatypes of\n * non-JSON formats\n *\n * @since 2.8\n */\npublic void writeEmbeddedObject(Object object) throws IOException {\n    if (object == null) {\n        writeNull();\n    } else if (object instanceof byte[]) {\n        writeBinary((byte[]) object);\n    } else {\n        throw new JsonGenerationException(\"No native support for writing embedded objects of type \" + object.getClass().getName(), this);\n    }\n}\n\nprivate void writeNull() throws IOException {\n    _verifyValueWrite(\"write null value\");\n    _cfgPrettyPrinter.writeNull(this);\n    _writeNull();\n}\n\nprivate void writeBinary(byte[] data) throws IOException {\n    _verifyValueWrite(\"write binary value\");\n    if (data == null) {\n        writeNull();\n        return;\n    }\n    _writeBinary(data, 0, data.length);\n}\n\nprivate void _writeBinary(byte[] data, int offset, int len) throws IOException {\n    _writeBinary(Base64Variants.getDefaultVariant(), data, offset, len);\n}\n\nprivate void _writeBinary(Base64Variant b64variant, byte[] data, int offset, int len) throws IOException, JsonGenerationException {\n    _cfgPrettyPrinter.beforeValue(this);\n    _writeBinary(b64variant, data, offset, len, '\"');\n    _cfgPrettyPrinter.afterValue(this);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}