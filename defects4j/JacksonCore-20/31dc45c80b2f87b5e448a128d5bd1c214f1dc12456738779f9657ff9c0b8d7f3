{
    "generation": "import com.fasterxml.jackson.core.JsonGenerator;\nimport com.fasterxml.jackson.core.JsonGenerationException;\nimport com.fasterxml.jackson.core.base64.Base64Variants;\nimport com.fasterxml.jackson.core.io.SerializedString;\n\nimport java.io.IOException;\nimport java.util.Base64;\n\n/**\n * Method that can be called on backends that support passing opaque datatypes of\n * non-JSON formats\n *\n * @since 2.8\n */\npublic void writeEmbeddedObject(Object object) throws IOException {\n    if (object == null) {\n        writeNull();\n    } else if (object instanceof byte[]) {\n        byte[] bytes = (byte[]) object;\n        String base64String = Base64.getEncoder().encodeToString(bytes);\n        writeRawValue(Base64Variants.MODIFIED_FOR_JSON.encode(bytes));\n    } else {\n        throw new JsonGenerationException(\"No native support for writing embedded objects of type \" + object.getClass().getName(), this);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}