{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos)\n{\n    int len = dateStr.length();\n    char c = dateStr.charAt(len - 1);\n    DateFormat df;\n\n    if (len <= 10 && Character.isDigit(c)) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (c == 'Z') {\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        if (dateStr.charAt(len - 4) == ':') {\n            StringBuilder sb = new StringBuilder(dateStr);\n            sb.insert(len - 1, \".000\");\n            dateStr = sb.toString();\n        }\n    } else {\n        if (hasTimeZone(dateStr)) {\n            if (dateStr.indexOf('.') < 0) {\n                // No milliseconds present, add \".000\"\n                int timeLen = len - dateStr.lastIndexOf('T') - 1;\n                if (timeLen == 5) { // missing seconds\n                    dateStr = dateStr.replaceFirst(\"(\\\\+|\\\\-\\\\d\\\\d)$\", \":00$1\");\n                }\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.insert(dateStr.lastIndexOf('+') > 0 ? dateStr.lastIndexOf('+')\n                        : dateStr.lastIndexOf('-'), \".000\");\n                dateStr = sb.toString();\n            } else {\n                // Ensure milliseconds have exactly three digits\n                int milliIndex = dateStr.lastIndexOf('.') + 1;\n                int millisLen = dateStr.length() - milliIndex - 5; // Exclude timezone offset length\n                if (millisLen < 3) {\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    for (int i = 0; i < 3 - millisLen; ++i) {\n                        sb.insert(milliIndex + millisLen, '0'); \n                    }\n                    dateStr = sb.toString();\n                }\n            }\n            df = _formatISO8601;\n            if (_formatISO8601 == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else {\n            StringBuilder sb = new StringBuilder(dateStr);\n            int timeLen = len - dateStr.lastIndexOf('T') - 1;\n            if (timeLen <= 8) {\n                sb.append(\".000\");\n            }\n            sb.append('Z');\n            dateStr = sb.toString();\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,\n                        _timezone, _locale);\n            }\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}