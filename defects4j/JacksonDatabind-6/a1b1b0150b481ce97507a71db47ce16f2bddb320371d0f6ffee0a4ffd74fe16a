{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos) {\n    int len = dateStr.length();\n    char c = dateStr.charAt(len - 1);\n    DateFormat df;\n\n    if (len <= 10 && Character.isDigit(c)) {\n        // Plain date without time\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (c == 'Z') {\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        // Handle cases where milliseconds might be missing\n        if (dateStr.charAt(len - 4) == ':') {\n            StringBuilder sb = new StringBuilder(dateStr);\n            sb.insert(len - 1, \".000\");\n            dateStr = sb.toString();\n        }\n    } else {\n        // Handle timezone and milliseconds\n        if (hasTimeZone(dateStr)) {\n            // Handle optional colon or missing seconds/milliseconds in time zone format\n            c = dateStr.charAt(len - 3);\n            if (c == ':') {\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.deleteCharAt(len - 3);\n                dateStr = sb.toString();\n            } else if (c == '+' || c == '-') {\n                if (dateStr.indexOf(':', len - 6) == -1) {\n                    dateStr += \"00\"; // Add missing minutes if not present\n                }\n            }\n            // Add milliseconds if missing or partial\n            int tIndex = dateStr.lastIndexOf('T');\n            int millisStart = dateStr.lastIndexOf('.', tIndex == -1 ? len : tIndex);\n            if (millisStart != -1) {\n                // Pad partial milliseconds if needed\n                int millisLength = len - millisStart - 1;\n                if (millisLength < 3) {\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    for (int i = millisLength; i < 3; i++) {\n                        sb.append('0');\n                    }\n                    dateStr = sb.toString();\n                }\n            } else {\n                // Add .000 if there are no milliseconds\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.insert((tIndex == -1 ? len : tIndex) - 1, \".000\");\n                dateStr = sb.toString();\n            }\n            df = _formatISO8601;\n            if (_formatISO8601 == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else {\n            // Plain date with implied 'Z'\n            StringBuilder sb = new StringBuilder(dateStr);\n            if (dateStr.indexOf('T') != -1 && dateStr.lastIndexOf('.') == -1) {\n                sb.append(\".000\");\n            }\n            sb.append('Z');\n            dateStr = sb.toString();\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n            }\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}