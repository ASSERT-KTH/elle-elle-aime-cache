{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos)\n{\n    /* Perform some cleanup and normalization based on ISO-8601 rules to handle\n     * different cases like missing seconds, milliseconds or timezone adjustments.\n     */\n    int len = dateStr.length();\n    char c = dateStr.charAt(len - 1);\n    DateFormat df;\n\n    // Handle plain date (no time portion)\n    if (len <= 10 && Character.isDigit(c)) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (c == 'Z') { // Case when 'Z' indicates a UTC timezone.\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        // Handle case where milliseconds might be missing.\n        if (dateStr.charAt(len - 4) == ':') {\n            StringBuilder sb = new StringBuilder(dateStr);\n            sb.insert(len - 1, \".000\");\n            dateStr = sb.toString();\n        }\n    } else {\n        // Determine if the string includes a timezone indicator.\n        if (hasTimeZone(dateStr)) {\n            c = dateStr.charAt(len - 3);\n            if (c == ':') { // Timezone offset contains a colon e.g. \"+01:00\".\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.delete(len - 3, len - 2); // Remove the colon.\n                dateStr = sb.toString();\n            } else if (c == '+' || c == '-') { // Missing minutes in timezone offset.\n                dateStr += \"00\";\n            }\n            // Handle missing milliseconds or seconds.\n            int lastColon = dateStr.lastIndexOf(':');\n            int timeStart = dateStr.indexOf('T') + 1;\n            if (lastColon > timeStart + 2) { // Check if seconds are present.\n                if (dateStr.charAt(lastColon + 3) != '.') { // No milliseconds.\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    sb.insert(lastColon + 3, \".000\");\n                    dateStr = sb.toString();\n                }\n            } else { // Seconds (and milliseconds) are missing.\n                StringBuilder sb = new StringBuilder(dateStr);\n                sb.insert(lastColon + 3, \":00.000\");\n                dateStr = sb.toString();\n            }\n            df = _formatISO8601;\n            if (_formatISO8601 == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else { // No explicit timezone, append 'Z' for UTC.\n            StringBuilder sb = new StringBuilder(dateStr);\n            int timeLen = len - dateStr.lastIndexOf('T') - 1;\n            if (timeLen <= 8) { // If milliseconds are missing.\n                sb.append(\".000\");\n            }\n            sb.append('Z');\n            dateStr = sb.toString();\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,\n                        _timezone, _locale);\n            }\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}