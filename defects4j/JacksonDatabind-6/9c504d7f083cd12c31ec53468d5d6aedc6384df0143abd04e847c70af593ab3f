{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos) {\n    /* 21-May-2009, tatu: DateFormat has very strict handling of timezone modifiers for ISO-8601. So we need to do some scrubbing. */\n    int len = dateStr.length();\n    DateFormat df;\n\n    if (len <= 10 && Character.isDigit(dateStr.charAt(len-1))) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (dateStr.endsWith(\"Z\")) {\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        if (dateStr.charAt(len-4) == ':') {\n            dateStr = dateStr.substring(0, len-1) + \".000\" + dateStr.substring(len-1);\n        }\n    } else if (hasTimeZone(dateStr)) {\n        if (dateStr.charAt(len-3) == ':' || dateStr.charAt(len-3) == '+' || dateStr.charAt(len-3) == '-') {\n            dateStr = dateStr.substring(0, len-2) + ':' + dateStr.substring(len-2);\n        }\n        if (dateStr.charAt(len-9) == ':') {\n            dateStr = dateStr.substring(0, len-5) + \".000\" + dateStr.substring(len-5);\n        }\n        df = _formatISO8601;\n        if (df == null) {\n            df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n        }\n    } else {\n        dateStr += \".000Z\";\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}