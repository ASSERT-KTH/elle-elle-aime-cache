{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos) {\n    int len = dateStr.length();\n    char c = dateStr.charAt(len-1);\n    DateFormat df;\n\n    if (len <= 10 && Character.isDigit(c)) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (c == 'Z') {\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n    } else {\n        if (hasTimeZone(dateStr)) {\n            c = dateStr.charAt(len-3);\n            if (c == ':' || c == '+' || c == '-') {\n                len = dateStr.length();\n                c = dateStr.charAt(len-9);\n                if (Character.isDigit(c)) { // if seconds are missing, insert\n                    StringBuilder sb = new StringBuilder(dateStr);\n                    sb.insert(len-5, \":00\");\n                    dateStr = sb.toString();\n                }\n            }\n            df = _formatISO8601;\n            if (_formatISO8601 == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else {\n            StringBuilder sb = new StringBuilder(dateStr);\n            if (dateStr.charAt(len-1) != 'Z') { // if timezone is missing, append 'Z'\n                sb.append('Z');\n            }\n            dateStr = sb.toString();\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z,\n                        _timezone, _locale);\n            }\n        }\n    }\n\n    // handle cases where milliseconds are partial or missing\n    if (dateStr.charAt(len-4) == '.') { // if milliseconds are partial or missing, pad with zeros\n        while (dateStr.length() < len + 3) {\n            dateStr += \"0\";\n        }\n    }\n\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}