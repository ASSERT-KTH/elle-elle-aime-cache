{
    "generation": "protected Date parseAsISO8601(String dateStr, ParsePosition pos) {\n    int len = dateStr.length();\n    char c = dateStr.charAt(len - 1);\n    DateFormat df;\n\n    if (len <= 10 && Character.isDigit(c)) {\n        df = _formatPlain;\n        if (df == null) {\n            df = _formatPlain = _cloneFormat(DATE_FORMAT_PLAIN, DATE_FORMAT_STR_PLAIN, _timezone, _locale);\n        }\n    } else if (c == 'Z') {\n        df = _formatISO8601_z;\n        if (df == null) {\n            df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n        }\n        // Add missing milliseconds\n        if (dateStr.charAt(len - 4) == ':' && dateStr.charAt(len - 7) != '.') {\n            dateStr = dateStr.substring(0, len - 1) + \".000\" + dateStr.substring(len - 1);\n        }\n    } else {\n        if (hasTimeZone(dateStr)) {\n            c = dateStr.charAt(len - 3);\n            if (c == ':') { // remove optional colon\n                dateStr = dateStr.substring(0, len - 3) + dateStr.substring(len - 2);\n            } else if (c == '+' || c == '-') { // missing minutes\n                dateStr += \"00\";\n            }\n            len = dateStr.length();\n            if (dateStr.charAt(len - 9) != '.' && dateStr.charAt(len - 6) != ':') {\n                dateStr = dateStr.substring(0, len - 5) + \".000\" + dateStr.substring(len - 5);\n            }\n            df = _formatISO8601;\n            if (_formatISO8601 == null) {\n                df = _formatISO8601 = _cloneFormat(DATE_FORMAT_ISO8601, DATE_FORMAT_STR_ISO8601, _timezone, _locale);\n            }\n        } else {\n            if (dateStr.charAt(len - 8) != '.') {\n                dateStr = dateStr.substring(0, len) + \".000\" + 'Z';\n            } else {\n                dateStr = dateStr + 'Z';\n            }\n            df = _formatISO8601_z;\n            if (df == null) {\n                df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, DATE_FORMAT_STR_ISO8601_Z, _timezone, _locale);\n            }\n        }\n    }\n    return df.parse(dateStr, pos);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}