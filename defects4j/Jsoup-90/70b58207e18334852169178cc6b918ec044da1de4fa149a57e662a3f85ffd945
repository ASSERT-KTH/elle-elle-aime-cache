{
    "generation": "private static boolean looksLikeUtf8(byte[] input) {\n    int i = 0;\n    // BOM:\n    if (input.length >= 3 && (input[0] & 0xFF) == 0xEF\n        && (input[1] & 0xFF) == 0xBB && (input[2] & 0xFF) == 0xBF) {\n        i = 3;\n    }\n\n    while (i < input.length) {\n        int o = input[i] & 0xFF;\n        if (o <= 0x7F) {\n            i++;\n            continue; // ASCII\n        }\n\n        // UTF-8 leading:\n        int expectedBytes = 0;\n        if ((o & 0xE0) == 0xC0) {\n            expectedBytes = 1;\n        } else if ((o & 0xF0) == 0xE0) {\n            expectedBytes = 2;\n        } else if ((o & 0xF8) == 0xF0) {\n            expectedBytes = 3;\n        } else {\n            return false;\n        }\n\n        if (i + expectedBytes >= input.length) {\n            return false;\n        }\n\n        for (int j = 0; j < expectedBytes; j++) {\n            i++;\n            o = input[i] & 0xFF;\n            if ((o & 0xC0) != 0x80) {\n                return false;\n            }\n        }\n        i++;\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}