{
    "generation": "/**\n * Tests the list for equality with another object (typically also a list).\n *\n * @param obj  the other object (<code>null</code> permitted).\n *\n * @return A boolean.\n */\npublic boolean equals(Object obj) {\n\n    if (obj == this) {\n        return true;\n    }\n    if (!(obj instanceof ShapeList)) {\n        return false;\n    }\n    ShapeList other = (ShapeList) obj;\n    return this.size() == other.size() && \n           elementsEqual(this, other);\n\n}\n\n// Helper method to compare elements of two ShapeLists\nprivate boolean elementsEqual(ShapeList list1, ShapeList list2) {\n    for (int i = 0; i < list1.size(); i++) {\n        Object elem1 = list1.get(i);\n        Object elem2 = list2.get(i);\n        if (elem1 == null) {\n            if (elem2!= null) {\n                return false;\n            }\n        } else if (!elem1.equals(elem2)) {\n            return false;\n        }\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}