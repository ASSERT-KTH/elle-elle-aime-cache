{
    "generation": "/**\n * Tests the list for equality with another object (typically also a list).\n *\n * @param obj  the other object (<code>null</code> permitted).\n *\n * @return A boolean.\n */\n@Override\npublic boolean equals(Object obj) {\n\n    if (obj == this) {\n        return true;\n    }\n    if (!(obj instanceof ShapeList)) {\n        return false;\n    }\n\n    ShapeList other = (ShapeList) obj;\n    if (other.size() != this.size()) {\n        return false;\n    }\n\n    for (int i = 0; i < this.size(); i++) {\n        // Note that we're using equals() method here because Shape interface does not extend Comparable\n        if (this.getShape(i) == null) {\n            if (other.getShape(i) != null) {\n                return false;\n            }\n        } else {\n            if (!this.getShape(i).equals(other.getShape(i))) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}