{
    "generation": "    private InputStream getCurrentStream() throws IOException {\n        if (deferredBlockStreams.isEmpty()) {\n            throw new IllegalStateException(\"No current 7z entry (call getNextEntry() first).\");\n        }\n        \n        while (deferredBlockStreams.size() > 1) {\n            // In solid compression mode we need to decompress all leading folder'\n            // streams to get access to an entry. We defer this until really needed\n            // so that entire blocks can be skipped without wasting time for decompression.\n            final InputStream stream = deferredBlockStreams.remove(0);\n            long skipped = IOUtils.skip(stream, Long.MAX_VALUE);\n            if (skipped > 0) { // Check if any bytes were skipped\n                stream.close();\n            } else {\n                // If no bytes were skipped, put the stream back to the list\n                deferredBlockStreams.add(0, stream);\n                break; // Exit the loop\n            }\n        }\n\n        return deferredBlockStreams.get(0);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}