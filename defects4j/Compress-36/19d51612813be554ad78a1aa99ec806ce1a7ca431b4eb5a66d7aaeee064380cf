{
    "generation": "private InputStream getCurrentStream() throws IOException {\n    if (deferredBlockStreams.isEmpty()) {\n        throw new IllegalStateException(\"No current 7z entry (call getNextEntry() first).\");\n    }\n\n    // The while loop should start from the second element (index 1) until the last element.\n    for (int i = 1; i < deferredBlockStreams.size(); i++) {\n        // In solid compression mode we need to decompress all leading folder streams to get\n        // access to an entry. We defer this until really needed so that entire blocks can be\n        // skipped without wasting time for decompression.\n        final InputStream stream = deferredBlockStreams.remove(i);\n        IOUtils.skip(stream, Long.MAX_VALUE);\n        stream.close();\n    }\n\n    return deferredBlockStreams.get(0);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}