{
    "generation": "private InputStream getCurrentStream() throws IOException {\n    if (deferredBlockStreams.isEmpty()) {\n        // Check if the current entry is of size zero\n        if (currentEntry != null && currentEntry.getSize() == 0) {\n            // For size zero entries, return a stream that immediately reaches EOF\n            return new ByteArrayInputStream(new byte[0]);\n        } else {\n            throw new IllegalStateException(\"No current 7z entry (call getNextEntry() first).\");\n        }\n    }\n    \n    while (deferredBlockStreams.size() > 1) {\n        // In solid compression mode we need to decompress all leading folder's streams\n        // to get access to an entry. We defer this until really needed so that entire blocks\n        // can be skipped without wasting time for decompression.\n        final InputStream stream = deferredBlockStreams.remove(0);\n        IOUtils.skip(stream, Long.MAX_VALUE);\n        stream.close();\n    }\n\n    return deferredBlockStreams.get(0);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}