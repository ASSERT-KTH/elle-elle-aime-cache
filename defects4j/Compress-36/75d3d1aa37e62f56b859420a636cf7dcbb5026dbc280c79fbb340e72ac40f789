{
    "generation": "private InputStream getCurrentStream() throws IOException {\n    // Remove all deferred streams as we are moving to the next entry\n    while (!deferredBlockStreams.isEmpty()) {\n        final InputStream stream = deferredBlockStreams.remove(0);\n        IOUtils.skip(stream, Long.MAX_VALUE);\n        stream.close();\n    }\n\n    if (deferredBlockStreams.isEmpty()) {\n        throw new IllegalStateException(\"No current 7z entry (call getNextEntry() first).\");\n    }\n\n    return deferredBlockStreams.get(0);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}