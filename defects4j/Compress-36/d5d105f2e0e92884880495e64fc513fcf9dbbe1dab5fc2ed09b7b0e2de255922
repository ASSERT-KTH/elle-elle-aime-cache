{
    "generation": "private InputStream getCurrentStream() throws IOException {\n    if (deferredBlockStreams.isEmpty() || deferredBlockStreams.get(0) == null) {\n        throw new IllegalStateException(\"No current 7z entry (call getNextEntry() first).\");\n    }\n    \n    while (deferredBlockStreams.size() > 1) {\n        // In solid compression mode we need to decompress all leading folder'\n        // streams to get access to an entry. We defer this until really needed\n        // so that entire blocks can be skipped without wasting time for decompression.\n        final InputStream stream = deferredBlockStreams.remove(0);\n        if (stream!= null) { // added null check\n            IOUtils.skip(stream, Long.MAX_VALUE);\n            stream.close();\n        }\n    }\n\n    final InputStream currentStream = deferredBlockStreams.get(0);\n    if (currentStream == null) { // added null check and throw\n        throw new IllegalStateException(\"No current 7z entry stream (call getNextEntry() first).\");\n    }\n    return currentStream;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}