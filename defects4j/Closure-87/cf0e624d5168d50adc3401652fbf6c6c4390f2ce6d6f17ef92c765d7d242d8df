{
    "generation": "/**\n * @return Whether the node is a block with a single statement that is\n *     an expression.\n */\nprivate boolean isFoldableExpressBlock(Node n) {\n  if (n.getType() == Token.BLOCK) {\n    if (n.hasOneChild()) {\n      Node maybeExpr = n.getFirstChild();\n      return NodeUtil.isExpressionNode(maybeExpr) &&!(maybeExpr.getType() == Token.EXPR_RESULT &&\n          NodeUtil.isCall(maybeExpr.getFirstChild()) && NodeUtil.isGetProp(maybeExpr.getFirstChild().getFirstChild()));\n    }\n  }\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}