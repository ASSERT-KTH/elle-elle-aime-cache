{
    "generation": "  /**\n   * @return Whether the node is a block with a single statement that is\n   *     an expression.\n   */\n  private boolean isFoldableExpressBlock(Node n) {\n    if (n.getType() == Token.BLOCK) {\n      if (n.hasOneChild()) {\n        Node maybeExpr = n.getFirstChild();\n        // Check if maybeExpr is an EXPR_RESULT with a single child\n        // that is a CALL, and the CALL has an implicit 'this' param.\n        if (maybeExpr.getType() == Token.EXPR_RESULT && maybeExpr.hasOneChild()) {\n          Node expr = maybeExpr.getFirstChild();\n          if (expr.getType() == Token.CALL && NodeUtil.hasImplicitThisParam(expr)) {\n            return false;\n          }\n        }\n        return NodeUtil.isExpressionNode(maybeExpr);\n      }\n    }\n    return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}