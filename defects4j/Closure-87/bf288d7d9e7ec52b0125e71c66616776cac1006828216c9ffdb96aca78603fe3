{
    "generation": "/**\n * @return Whether the node is a block with a single statement that is\n *     an expression, but not an event handler property (e.g. onchange).\n */\nprivate boolean isFoldableExpressBlock(Node n) {\n  if (n.getType() == Token.BLOCK) {\n    if (n.hasOneChild()) {\n      Node maybeExpr = n.getFirstChild();\n      // Check if maybeExpr is an event handler call (e.g. onchange)\n      if (maybeExpr.getType() == Token.EXPR_RESULT && maybeExpr.getFirstChild().getType() == Token.GETPROP\n          && NodeUtil.isValidPropertyForBinaryOperation(maybeExpr.getFirstChild(), \"onchange\")) {\n        return false;\n      }\n      return NodeUtil.isExpressionNode(maybeExpr);\n    }\n  }\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}