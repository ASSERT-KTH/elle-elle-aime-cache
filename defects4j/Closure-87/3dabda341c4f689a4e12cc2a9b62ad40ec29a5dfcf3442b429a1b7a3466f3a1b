{
    "generation": "/**\n * @return Whether the node is a block with a single statement that is\n *     an expression, considering the IE event handler return value bug.\n */\nprivate boolean isFoldableExpressBlock(Node n) {\n  if (n.getType() == Token.BLOCK) {\n    if (n.hasOneChild()) {\n      Node maybeExpr = n.getFirstChild();\n      // Additional check to handle the IE event handler return value bug (Issue 291)\n      if (NodeUtil.isExpressionNode(maybeExpr)) {\n        // Check if the expression is a method call with an implicit 'this' param\n        if (maybeExpr.getType() == Token.CALL) {\n          Node callee = maybeExpr.getFirstChild();\n          if (callee.getType() == Token.GETPROP || callee.getType() == Token.GETELEM) {\n            // If the method name is 'onchange', do not fold to avoid the IE bug\n            if (callee.getChildCount() > 0 && callee.getLastChild().getString().equals(\"onchange\")) {\n              return false;\n            }\n          }\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}