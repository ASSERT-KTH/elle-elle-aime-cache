{
    "generation": "/**\n * @return Whether the node is a block with a single statement that is\n *     an expression, and not an event handler with an implicit 'this' param.\n */\nprivate boolean isFoldableExpressBlock(Node n) {\n    if (n.getType() == Token.BLOCK) {\n        if (n.hasOneChild()) {\n            Node maybeExpr = n.getFirstChild();\n            // Additional check to avoid folding EXPR_RESULTs in event handlers\n            // with implicit 'this' param (fix for Issue 291)\n            return NodeUtil.isExpressionNode(maybeExpr) \n                &&!(maybeExpr.getFirstChild() instanceof Node \n                     && ((Node) maybeExpr.getFirstChild()).getString().equals(\"onchange\"));\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}