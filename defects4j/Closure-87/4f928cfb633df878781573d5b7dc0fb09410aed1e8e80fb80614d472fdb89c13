{
    "generation": "private boolean isFoldableExpressBlock(Node n) {\n  if (n.getType() == Token.BLOCK && n.hasOneChild()) {\n    Node maybeExpr = n.getFirstChild();\n    if (NodeUtil.isExpressionStatement(maybeExpr)\n        && !isEventHandlerCall(maybeExpr.getFirstChild())) {\n      return NodeUtil.isExpressionNode(maybeExpr.getFirstChild());\n    }\n  }\n  return false;\n}\n\nprivate boolean isEventHandlerCall(Node n) {\n  if (n != null && n.isGetProp() && n.getFirstChild().isThis()) {\n    Node propValue = n.getLastChild();\n    if (propValue.isString()\n        && (propValue.getString().startsWith(\"on\")\n            || propValue.getString().equals(\"handleEvent\"))) {\n      return true;\n    }\n  }\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}