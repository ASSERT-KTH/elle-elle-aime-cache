{
    "generation": "/**\n * @return Whether the node is a block with a single statement that is\n *     an expression.\n */\nprivate boolean isFoldableExpressBlock(Node n) {\n  if (n.getType() == Token.BLOCK) {\n    if (n.hasOneChild()) {\n      Node maybeExpr = n.getFirstChild();\n      // Check if the expression is a function call and has 'on' prefix\n      if (NodeUtil.isExpressionNode(maybeExpr) \n          && maybeExpr.isCall() \n          && maybeExpr.getFirstChild().getString().matches(\"on\\\\w+\")) {\n        return false;\n      }\n      return NodeUtil.isExpressionNode(maybeExpr);\n    }\n  }\n\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}