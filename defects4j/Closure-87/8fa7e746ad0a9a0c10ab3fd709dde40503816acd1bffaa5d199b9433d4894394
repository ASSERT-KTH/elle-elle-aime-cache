{
    "generation": "private boolean isFoldableExpressBlock(Node n) {\n  if (n.getType() == Token.BLOCK && n.hasOneChild()) {\n    Node maybeExpr = n.getFirstChild();\n    if (NodeUtil.isExpressionStatement(maybeExpr)\n        && NodeUtil.isExpressionNode(maybeExpr.getFirstChild())\n        && !checkForThisReference(maybeExpr)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nprivate boolean checkForThisReference(Node n) {\n  return n.hasDescendant(t -> t.isThis());\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}