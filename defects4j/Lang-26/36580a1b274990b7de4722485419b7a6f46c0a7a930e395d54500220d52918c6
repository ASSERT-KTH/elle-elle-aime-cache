{
    "generation": "/**\n * <p>Formats a <code>Date</code> object.</p>\n * \n * @param date  the date to format\n * @return the formatted string\n */\npublic String format(Date date) {\n    Calendar c = new GregorianCalendar(mTimeZone);\n    c.setTime(date);\n    // Workaround for JRE bug where week is incorrect around year boundaries\n    if (c.get(Calendar.MONTH) == 0 && c.get(Calendar.WEEK_OF_YEAR) == 1) {\n        c.set(Calendar.WEEK_OF_YEAR, getWeekOfYear(c));\n    }\n    return applyRules(c, new StringBuffer(mMaxLengthEstimate)).toString();\n}\n\n// Helper function to get the correct week of year\nprivate int getWeekOfYear(Calendar calendar) {\n    Calendar firstDayOfYear = (Calendar) calendar.clone();\n    firstDayOfYear.set(Calendar.DAY_OF_YEAR, 1);\n    int firstDayWeek = firstDayOfYear.get(Calendar.WEEK_OF_YEAR);\n    return calendar.get(Calendar.WEEK_OF_YEAR) == firstDayWeek? 1 : calendar.get(Calendar.WEEK_OF_YEAR);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}