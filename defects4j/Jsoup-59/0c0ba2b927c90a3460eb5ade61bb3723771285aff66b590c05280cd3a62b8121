{
    "generation": "final void newAttribute() {\n    if (attributes == null)\n        attributes = new Attributes();\n\n    if (pendingAttributeName != null) {\n        // Sanitize the attribute name by trimming and removing any control characters\n        pendingAttributeName = pendingAttributeName.trim();\n        if (pendingAttributeName.isEmpty() || containsControlCharacter(pendingAttributeName)) {\n            pendingAttributeName = null;\n        } else {\n            Attribute attribute;\n            if (hasPendingAttributeValue) {\n                attribute = new Attribute(pendingAttributeName,\n                    pendingAttributeValue.length() > 0 ? pendingAttributeValue.toString() : pendingAttributeValueS);\n            } else if (hasEmptyAttributeValue) {\n                attribute = new Attribute(pendingAttributeName, \"\");\n            } else {\n                attribute = new BooleanAttribute(pendingAttributeName);\n            }\n            attributes.put(attribute);\n        }\n    }\n    pendingAttributeName = null;\n    hasEmptyAttributeValue = false;\n    hasPendingAttributeValue = false;\n    reset(pendingAttributeValue);\n    pendingAttributeValueS = null;\n}\n\nprivate boolean containsControlCharacter(String value) {\n    for (int i = 0; i < value.length(); i++) {\n        char c = value.charAt(i);\n        if (c < 0x20 || c == 0x7F) { // ASCII control characters\n            return true;\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}