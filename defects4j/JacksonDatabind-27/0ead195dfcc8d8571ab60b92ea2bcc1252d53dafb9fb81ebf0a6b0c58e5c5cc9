{
    "generation": "    @SuppressWarnings(\"resource\")\n    protected Object deserializeUsingPropertyBasedWithExternalTypeId(JsonParser p, DeserializationContext ctxt)\n            throws IOException\n    {\n        final ExternalTypeHandler ext = _externalTypeIdHandler.start();\n        final PropertyBasedCreator creator = _propertyBasedCreator;\n        PropertyValueBuffer buffer = creator.startBuilding(p, ctxt, _objectIdReader);\n\n        TokenBuffer tokens = new TokenBuffer(p);\n        tokens.writeStartObject();\n\n        JsonToken t = p.getCurrentToken();\n        for (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {\n            String propName = p.getCurrentName();\n            p.nextToken(); // to point to value\n            // creator property?\n            SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);\n            if (creatorProp != null) {\n                // first: let's check to see if this might be part of value with external type id\n                if (ext.handlePropertyValue(p, ctxt, propName, buffer)) {\n                    ;\n                } else {\n                    // if not external type id, assign parameter and check if this is the last creator property\n                    if (buffer.assignParameter(creatorProp, _deserializeWithErrorWrapping(p, ctxt, creatorProp))) {\n                        // If it is the last creator property to set\n                        if (buffer.allCreatorParametersAssigned()) {\n                            try {\n                                Object bean = creator.build(ctxt, buffer);\n\n                                // if so, need to copy all remaining tokens into buffer\n                                while (t != JsonToken.END_OBJECT) {\n                                    tokens.copyCurrentStructure(p);\n                                    t = p.nextToken();\n                                }\n\n                                return ext.complete(p, ctxt, bean);\n                            } catch (Exception e) {\n                                wrapAndThrow(e, _beanType.getRawClass(), propName, ctxt);\n                            }\n                        } else {\n                            // Not the last creator property to set, then skip to the next token\n                            t = p.nextToken();\n                        }\n                    }\n                }\n                continue;\n            }\n            // continue with the rest of the method...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}