{
    "generation": "@SuppressWarnings(\"resource\")\nprotected Object deserializeUsingPropertyBasedWithExternalTypeId(JsonParser p, DeserializationContext ctxt)\n    throws IOException\n{\n    final ExternalTypeHandler ext = _externalTypeIdHandler.start();\n    final PropertyBasedCreator creator = _propertyBasedCreator;\n    PropertyValueBuffer buffer = creator.startBuilding(p, ctxt, _objectIdReader);\n\n    TokenBuffer tokens = new TokenBuffer(p);\n    tokens.writeStartObject();\n\n    Map<String, Object> creatorProperties = new LinkedHashMap<>();\n\n    JsonToken t = p.getCurrentToken();\n    while (t == JsonToken.FIELD_NAME) {\n        String propName = p.getCurrentName();\n        p.nextToken(); // to point to value\n        // creator property?\n        SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);\n        if (creatorProp != null) {\n            // Collect creator properties in a map\n            creatorProperties.put(propName, _deserializeWithErrorWrapping(p, ctxt, creatorProp));\n        } else {\n            // Handle non-creator properties immediately\n            // Object Id property?\n            if (buffer.readIdProperty(propName)) {\n                continue;\n            }\n            // regular property? needs buffering\n            SettableBeanProperty prop = _beanProperties.find(propName);\n            if (prop != null) {\n                buffer.bufferProperty(prop, prop.deserialize(p, ctxt));\n                continue;\n            }\n            // external type id (or property that depends on it)?\n            if (ext.handlePropertyValue(p, ctxt, propName, null)) {\n                continue;\n            }\n            // \"any property\"?\n            if (_anySetter != null) {\n                buffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));\n            } else {\n                // Ignore unknown properties\n                handleUnknownProperty(p, ctxt, handledType(), propName);\n            }\n        }\n        t = p.nextToken(); // to move to following FIELD_NAME/END_OBJECT\n    }\n\n    // Now build the creator using collected creator properties\n    for (Map.Entry<String, Object> entry : creatorProperties.entrySet()) {\n        SettableBeanProperty creatorProp = creator.findCreatorProperty(entry.getKey());\n        if (creatorProp != null) {\n            buffer.assignParameter(creatorProp, entry.getValue());\n        }\n    }\n\n    Object bean;\n    try {\n        bean = creator.build(ctxt, buffer);\n    } catch (Exception e) {\n        wrapAndThrow(e, _beanType.getRawClass(), null, ctxt);\n        return null; // never gets here\n    }\n\n    // Complete external type handling\n    return ext.complete(p, ctxt, bean);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}