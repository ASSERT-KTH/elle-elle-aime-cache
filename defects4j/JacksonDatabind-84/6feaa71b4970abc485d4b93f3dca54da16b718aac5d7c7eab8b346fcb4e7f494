{
    "generation": "public class CustomTypeFactory extends TypeFactory {\n\n    public CustomTypeFactory() {\n        super();\n    }\n\n    @Override\n    public JavaType constructType(Type t) {\n        JavaType type = super.constructType(t);\n        if (t instanceof Class<?>) {\n            Class<?> clazz = (Class<?>) t;\n            if (Sub.class.isAssignableFrom(clazz)) {\n                // Ensure that Sub includes the properties of Base\n                JavaType baseType = super.constructType(Base.class);\n                type = type.withContentType(baseType);\n            }\n        }\n        return type;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}