{
    "generation": "import com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.databind.type.TypeFactory;\nimport java.io.IOException;\nimport static org.junit.Assert.assertEquals;\n\npublic class TestTypeFactoryWithRecursiveTypes {\n\n    public void testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType() throws IOException {\n        TypeFactory tf = TypeFactory.defaultInstance();\n        tf.constructType(Base.class);\n        tf.constructType(Sub.class);\n        Sub sub = new Sub();\n        sub.setBase(1); // Ensure base property is set\n        sub.setSub(2);  // Ensure sub property is set\n        String serialized = objectMapper().writeValueAsString(sub);\n        assertEquals(\"{\\\"base\\\":1,\\\"sub\\\":2}\", serialized);\n    }\n\n    private ObjectMapper objectMapper() {\n        return new ObjectMapper();\n    }\n\n    static class Base {\n        private int base;\n\n        public int getBase() {\n            return base;\n        }\n\n        public void setBase(int base) {\n            this.base = base;\n        }\n    }\n\n    static class Sub extends Base {\n        private int sub;\n\n        public int getSub() {\n            return sub;\n        }\n\n        public void setSub(int sub) {\n            this.sub = sub;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}