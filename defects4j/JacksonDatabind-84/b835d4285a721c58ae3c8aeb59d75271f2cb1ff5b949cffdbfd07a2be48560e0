{
    "generation": "    public void testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType() throws IOException {\n        TypeFactory tf = TypeFactory.defaultInstance();\n        tf.constructType(Base.class);\n        tf.constructType(Sub.class);\n\n        // Ensure Base type properties are correctly registered for Sub\n        JavaType baseType = tf.constructType(Base.class);\n        JavaType subType = tf.constructType(Sub.class);\n\n        // Register annotations if needed\n        ((BasicType) baseType).getRawClass();\n        ((BasicType) subType).getRawClass();\n\n        Sub sub = new Sub();\n        String serialized = objectMapper().writeValueAsString(sub);\n        assertEquals(\"{\\\"base\\\":1,\\\"sub\\\":2}\", serialized);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}