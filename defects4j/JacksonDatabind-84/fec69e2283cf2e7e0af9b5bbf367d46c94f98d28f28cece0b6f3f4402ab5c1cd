{
    "generation": "public void testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType() throws IOException {\n    TypeFactory tf = TypeFactory.defaultInstance();\n    tf.constructType(Base.class);\n    tf.constructType(Sub.class);\n    Sub sub = new Sub();\n    ObjectMapper objectMapper = new ObjectMapper();\n    objectMapper.addMixIn(Base.class, BaseMixin.class);\n    objectMapper.addMixIn(Sub.class, SubMixin.class);\n    String serialized = objectMapper.writeValueAsString(sub);\n    assertEquals(\"{\\\"base\\\":1,\\\"sub\\\":2}\", serialized);\n}\n\nabstract class BaseMixin {\n    @JsonProperty(\"base\")\n    int base;\n}\n\nabstract class SubMixin extends BaseMixin {\n    @JsonProperty(\"sub\")\n    int sub;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}