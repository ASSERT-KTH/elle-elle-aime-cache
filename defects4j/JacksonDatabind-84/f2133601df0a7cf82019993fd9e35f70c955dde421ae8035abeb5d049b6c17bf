{
    "generation": "public void testBasePropertiesIncludedWhenSerializingSubWhenSubTypeLoadedAfterBaseType() throws IOException {\n    ObjectMapper objectMapper = new ObjectMapper();\n    SimpleModule module = new SimpleModule();\n    module.addDeserializer(Base.class, new JsonDeserializer<Base>() {\n        @Override\n        public Base deserialize(JsonParser p, DeserializationContext ctxt) throws IOException, JsonProcessingException {\n            return p.readValueAs(Base.class);\n        }\n    });\n    objectMapper.registerModule(module);\n\n    TypeFactory tf = TypeFactory.defaultInstance();\n    tf.constructType(Base.class);\n    tf.constructType(Sub.class);\n    Sub sub = new Sub();\n    String serialized = objectMapper.writeValueAsString(sub);\n    assertEquals(\"{\\\"base\\\":1,\\\"sub\\\":2}\", serialized);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}