{
    "generation": "private boolean isPrototypePropertyAssign(Node assign) {\n  Node n = assign.getFirstChild();\n  if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n      && n.getType() == Token.GETPROP) {\n    // We want to exclude the assignment itself from the usage list\n    Node child = n.getLastChild();\n\n    if (child.isString() && child.getString().equals(\"prototype\")) {\n      return true;\n    }\n\n    // Check for chained assignments\n    if (assign.getParent().isAssign()) {\n      Node parent = assign.getParent();\n      if (parent.getFirstChild().isGetProp()) {\n        Node parentProp = parent.getFirstChild().getLastChild();\n        if (parentProp.isString() && !parentProp.getString().equals(\"prototype\")) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}