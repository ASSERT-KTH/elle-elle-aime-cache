{
    "generation": "private boolean isPrototypePropertyAssign(Node assign) {\n  Node n = assign.getFirstChild();\n  if (n!= null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n      && n.getType() == Token.GETPROP\n     ) {\n    // We want to exclude the assignment itself from the usage list\n    boolean isPrototypeProperty = \n        (n.getFirstChild().getType() == Token.NAME && n.getFirstChild().getString().equals(\"prototype\")) ||\n        (n.getFirstChild().getType() == Token.GETPROP && \n         n.getFirstChild().getFirstChild().getNext().getType() == Token.STRING && \n         n.getFirstChild().getFirstChild().getNext().getString().equals(\"prototype\"));\n\n    return isPrototypeProperty;\n  }\n\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}