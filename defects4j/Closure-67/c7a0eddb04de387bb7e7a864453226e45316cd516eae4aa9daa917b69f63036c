{
    "generation": "private boolean isPrototypePropertyAssign(Node assign) {\n  Node n = assign.getFirstChild();\n  if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n      && n.getType() == Token.GETPROP) {\n    // We want to exclude the assignment itself from the usage list\n    Node target = n.getFirstChild();\n    Node propertyNameNode = n.getSecondChild();\n\n    // Check if the property name is 'prototype' or if it's a chained property\n    if (propertyNameNode.getType() == Token.STRING && propertyNameNode.getString().equals(\"prototype\")) {\n      return true;\n    } else if (target.getType() == Token.GETPROP) {\n      Node grandChild = target.getFirstChild().getNext();\n      if (grandChild.getType() == Token.STRING && grandChild.getString().equals(\"prototype\")) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}