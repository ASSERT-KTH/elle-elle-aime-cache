{
    "generation": "private boolean isPrototypePropertyAssign(Node assign) {\n    Node n = assign.getFirstChild();\n    if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n            && n.getType() == Token.GETPROP) {\n        // We want to exclude the assignment itself from the usage list\n        Node child = n.getLastChild();\n\n        if (child.getType() == Token.STRING &&\n                child.getString().equals(\"prototype\")) {\n            return true;\n        }\n\n        // Check for chained property assignments\n        Node parent = n.getFirstChild();\n        if (parent.getType() == Token.GETPROP) {\n            child = parent.getLastChild();\n            if (child.getType() == Token.STRING &&\n                    child.getString().equals(\"prototype\")) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}