{
    "generation": "    private boolean isPrototypePropertyAssign(Node assign) {\n      Node n = assign.getFirstChild();\n      if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n          && n.getType() == Token.GETPROP) {\n        // We want to exclude the assignment itself from the usage list\n        boolean isChainedProperty =\n            n.getFirstChild().getType() == Token.GETPROP;\n\n        if (isChainedProperty) {\n          // Check for chained GETPROP\n          Node firstChild = n.getFirstChild().getFirstChild().getNext();\n          Node secondChild = firstChild.getNext();\n\n          if (firstChild.getType() == Token.STRING &&\n              firstChild.getString().equals(\"prototype\") &&\n              secondChild != null &&\n              secondChild.getType() == Token.STRING) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}