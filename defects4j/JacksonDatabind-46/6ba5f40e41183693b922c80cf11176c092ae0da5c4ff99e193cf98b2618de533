{
    "generation": "@Override\npublic StringBuilder getGenericSignature(StringBuilder sb)\n{\n    _classSignature(_class, sb, false);\n    sb.append('<');\n\n    if (_referencedType instanceof ParameterizedType) {\n        ParameterizedType pType = (ParameterizedType) _referencedType;\n        Type[] actualTypeArguments = pType.getActualTypeArguments();\n        for (Type actualTypeArgument : actualTypeArguments) {\n            sb = TypeFactory.defaultInstance().constructType(actualTypeArgument).getGenericSignature(sb);\n        }\n    } else {\n        sb = _referencedType.getGenericSignature(sb);\n    }\n\n    sb.append(';');\n    return sb;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}