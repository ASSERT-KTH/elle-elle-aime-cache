{
    "generation": "/**\n * Checks if the given string is a valid JavaScript identifier.\n * \n * Note: This function is stricter than its Java counterpart, as it adheres to the \n *       ECMAScript 5.1 specification for identifier names, which does not allow \n *       Unicode characters in the range U+200C to U+200F (zero-width joiner, etc.) \n *       and U+2028 to U+202F (line and paragraph separators), and also restricts \n *       the use of certain other Unicode characters.\n */\npublic static boolean isJSIdentifier(String s) {\n  int length = s.length();\n\n  if (length == 0 ||\n     !Character.isJavaIdentifierStart(s.charAt(0)) ||\n      // Additional check for Unicode characters not allowed in JS identifiers\n      (s.charAt(0) >= '\\u200C' && s.charAt(0) <= '\\u200F') ||\n      (s.charAt(0) >= '\\u2028' && s.charAt(0) <= '\\u202F')) {\n    return false;\n  }\n\n  for (int i = 1; i < length; i++) {\n    char c = s.charAt(i);\n    if (\n       !Character.isJavaIdentifierPart(c) ||\n        // Additional checks for Unicode characters not allowed in JS identifiers\n        (c >= '\\u200C' && c <= '\\u200F') ||\n        (c >= '\\u2028' && c <= '\\u202F') ||\n        // Latin-1 supplement and Latin Extended Additional blocks, \n        // except for the letters in the Unicode range U+00C0 to U+00D6 and U+00D8 to U+00F6 and U+00F8 to U+02FF\n        (c >= '\\u0080' && (c < '\\u00C0' || (c > '\\u00D6' && c < '\\u00D8') || c > '\\u00F6' && (c < '\\u00F8' || c > '\\u02FF')))) {\n      return false;\n    }\n  }\n\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}