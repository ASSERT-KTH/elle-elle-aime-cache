{
    "generation": "/**\n Creates a new, clean document, from the original dirty document, containing only elements allowed by the whitelist.\n The original document is not modified. Only elements from the dirt document's <code>body</code> are used.\n @param dirtyDocument Untrusted base document to clean.\n @return cleaned document.\n */\npublic Document clean(Document dirtyDocument) {\n    Validate.notNull(dirtyDocument);\n\n    Document clean = Document.createShell(dirtyDocument.baseUri());\n    Element cleanBody = clean.body();\n\n    // Check if the dirty document has a body, otherwise use the root element (for framesets)\n    Element dirtyBody = dirtyDocument.body();\n    if (dirtyBody == null) {\n        dirtyBody = dirtyDocument.getElementsByTag(\"frameset\").first();\n        if (dirtyBody == null) {\n            dirtyBody = dirtyDocument;\n        }\n    }\n\n    copySafeNodes(dirtyBody, cleanBody);\n\n    return clean;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}