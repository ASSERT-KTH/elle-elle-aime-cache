{
    "generation": "import org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Node;\nimport org.jsoup.safety.Cleaner;\nimport org.jsoup.safety.Whitelist;\nimport org.jsoup.helper.Validate;\n\npublic class Cleaner {\n\n    /**\n     * Creates a new, clean document, from the original dirty document, containing only elements allowed by the whitelist.\n     * The original document is not modified. Only elements from the dirty document's <code>body</code> are used.\n     * @param dirtyDocument Untrusted base document to clean.\n     * @return cleaned document.\n     */\n    public Document clean(Document dirtyDocument) {\n        Validate.notNull(dirtyDocument);\n\n        Document clean = Document.createShell(dirtyDocument.baseUri());\n\n        // Copy safe nodes from the dirty document's body to the clean document's body\n        copySafeNodes(dirtyDocument.body(), clean.body(), Whitelist.basic());\n\n        return clean;\n    }\n\n    private void copySafeNodes(Node source, Node dest, Whitelist whitelist) {\n        for (Node node : source.childNodes()) {\n            if (whitelist.isSafeNode(node)) {\n                Node clonedNode = node.clone();\n                dest.appendChild(clonedNode);\n                copySafeNodes(node, clonedNode, whitelist);\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}