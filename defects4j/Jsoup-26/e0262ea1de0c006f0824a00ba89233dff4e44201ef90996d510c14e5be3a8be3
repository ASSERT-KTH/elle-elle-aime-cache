{
    "generation": "/**\n * Creates a new, clean document, from the original dirty document, containing only elements allowed by the whitelist.\n * The original document is not modified. Only elements from the dirty document's <code>body</code> are used.\n * @param dirtyDocument Untrusted base document to clean.\n * @return cleaned document.\n */\npublic Document clean(Document dirtyDocument) {\n    Validate.notNull(dirtyDocument);\n\n    Document clean = Document.createShell(dirtyDocument.baseUri());\n    if (clean.body()!= null) { // added null check\n        copySafeNodes(dirtyDocument.body(), clean.body());\n    }\n\n    // Ensure document structure is valid even if body is empty\n    if (clean.body() == null) {\n        clean.body(); // Ensure body is created\n    } else if (clean.body().childNodes().size() == 0 && dirtyDocument.hasText() == false) {\n        // If original document had no text and no allowed elements, return an empty document\n        clean = Document.createShell(dirtyDocument.baseUri());\n    }\n\n    return clean;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}