{
    "generation": "private void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment> entriesWithoutUTF8Flag)\n    throws IOException {\n    Map<ZipArchiveEntry, OffsetEntry> updatedEntries = new LinkedHashMap<>();\n    for (Map.Entry<ZipArchiveEntry, OffsetEntry> entry : entries.entrySet()) {\n        ZipArchiveEntry ze = entry.getKey();\n        OffsetEntry offsetEntry = entry.getValue();\n        long offset = offsetEntry.headerOffset;\n        archive.seek(offset + LFH_OFFSET_FOR_FILENAME_LENGTH);\n        byte[] b = new byte[SHORT];\n        archive.readFully(b);\n        int fileNameLen = ZipShort.getValue(b);\n        archive.readFully(b);\n        int extraFieldLen = ZipShort.getValue(b);\n\n        byte[] fileNameBytes = new byte[fileNameLen];\n        archive.readFully(fileNameBytes);\n        ze.setName(new String(fileNameBytes, StandardCharsets.UTF_8));  // Corrected to read filename in UTF-8\n\n        int lenToSkip = extraFieldLen;\n        while (lenToSkip > 0) {\n            int skipped = archive.skipBytes(lenToSkip);\n            if (skipped <= 0) {\n                throw new RuntimeException(\"failed to skip extra field in\"\n                                           + \" local file header\");\n            }\n            lenToSkip -= skipped;\n        }\n        byte[] localExtraData = new byte[extraFieldLen];\n        archive.readFully(localExtraData);\n        ze.setExtra(localExtraData);\n\n        offsetEntry.dataOffset = offset + LFH_OFFSET_FOR_FILENAME_LENGTH\n            + SHORT + SHORT + fileNameLen + extraFieldLen;\n\n        if (entriesWithoutUTF8Flag.containsKey(ze)) {\n            String orig = ze.getName();\n            NameAndComment nc = entriesWithoutUTF8Flag.get(ze);\n            ZipUtil.setNameAndCommentFromExtraFields(ze, nc.name, nc.comment);\n            if (!orig.equals(ze.getName())) {\n                nameMap.remove(orig);\n                nameMap.put(ze.getName(), ze);\n            }\n        }\n        updatedEntries.put(ze, offsetEntry);\n    }\n    entries = updatedEntries;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}