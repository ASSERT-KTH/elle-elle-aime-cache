{
    "generation": "/**\n * Walks through all recorded entries and adds the data available\n * from the local file header.\n *\n * <p>Also records the offsets for the data to read from the\n * entries.</p>\n */\nprivate void resolveLocalFileHeaderData(Map<ZipArchiveEntry, NameAndComment> entriesWithoutUTF8Flag)\n    throws IOException {\n    // Changing the name of a ZipArchiveEntry is going to change\n    // the hashcode - see COMPRESS-164\n    // Map needs to be reconstructed in order to keep central\n    // directory order\n    for (ZipArchiveEntry ze : entries.keySet()) {\n        OffsetEntry offsetEntry = entries.get(ze);\n        long offset = offsetEntry.headerOffset;\n        archive.seek(offset + ZipArchiveInputStream.LFH_OFFSET_FOR_FILENAME_LENGTH);\n        byte[] b = new byte[ZipShort.SIZE];\n        archive.readFully(b, 0, ZipShort.SIZE);\n        int fileNameLen = ZipShort.getValue(b);\n        archive.readFully(b, 0, ZipShort.SIZE);\n        int extraFieldLen = ZipShort.getValue(b);\n        int lenToSkip = fileNameLen + extraFieldLen;\n        while (lenToSkip > 0) {\n            int skipped = archive.skipBytes(lenToSkip);\n            if (skipped <= 0) {\n                throw new IOException(\"Failed to skip file name or extra field in local file header\");\n            }\n            lenToSkip -= skipped;\n        }\n        // Calculate data offset after filename and extra field\n        offsetEntry.dataOffset = offset + ZipArchiveInputStream.LFH_OFFSET_FOR_FILENAME_LENGTH\n            + ZipShort.SIZE * 2 + fileNameLen + extraFieldLen;\n\n        if (entriesWithoutUTF8Flag.containsKey(ze)) {\n            String orig = ze.getName();\n            NameAndComment nc = entriesWithoutUTF8Flag.get(ze);\n            ZipUtil.setNameAndCommentFromExtraFields(ze, nc.name, nc.comment);\n            if (!orig.equals(ze.getName())) {\n                nameMap.remove(orig);\n                nameMap.put(ze.getName(), ze);\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}