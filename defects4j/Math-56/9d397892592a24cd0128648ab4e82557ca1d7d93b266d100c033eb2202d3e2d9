{
    "generation": "public int[] getCounts(int index) {\n    if (index < 0 || index >= totalSize) {\n        throw new OutOfRangeException(index, 0, totalSize);\n    }\n\n    final int[] indices = new int[dimension];\n\n    int count = 0;\n    for (int i = 0; i < last; i++) {\n        int idx = 0;\n        final int offset = uniCounterOffset[i];\n        while (count <= index) {\n            count += offset;\n            ++idx;\n        }\n        --idx;\n        count -= offset;\n        indices[i] = idx;\n    }\n\n    // Instead of starting from 1, start from the current count\n    int idx = count;\n    int offset = uniCounterOffset[last];\n    while (count < index) {\n        count += offset;\n        ++idx;\n    }\n    --idx;\n    indices[last] = idx;\n\n    return indices;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}