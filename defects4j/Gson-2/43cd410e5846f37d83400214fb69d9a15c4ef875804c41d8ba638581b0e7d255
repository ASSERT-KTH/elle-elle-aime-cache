{
    "generation": "public static <T1> TypeAdapterFactory newTypeHierarchyFactory(\n    final Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {\n  return new TypeAdapterFactory() {\n    @SuppressWarnings(\"unchecked\")\n    public <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {\n      final Class<? super T2> requestedType = typeToken.getRawType();\n      if (!clazz.isAssignableFrom(requestedType)) {\n        return null;\n      }\n      // Ensure the type adapter is correctly cast to the requested type\n      return (TypeAdapter<T2>) typeAdapter.fromJsonTree(typeAdapter.toJsonTree(new JsonElement() {\n        @Override\n        public JsonElement deepCopy() {\n          return this;\n        }\n      }));\n    }\n    @Override public String toString() {\n      return \"Factory[typeHierarchy=\" + clazz.getName() + \",adapter=\" + typeAdapter + \"]\";\n    }\n  };\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}