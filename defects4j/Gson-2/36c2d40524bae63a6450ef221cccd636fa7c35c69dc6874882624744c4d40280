{
    "generation": "\npublic static <T1> TypeAdapterFactory newTypeHierarchyFactory(\n\nfinal Class<T1> clazz, final TypeAdapter<T1> typeAdapter) {\n\nreturn new TypeAdapterFactory() {\n\n@SuppressWarnings(\"unchecked\")\n\npublic <T2> TypeAdapter<T2> create(Gson gson, TypeToken<T2> typeToken) {\n\nfinal Class<? super T2> requestedType = typeToken.getRawType();\n\nif (!clazz.isAssignableFrom(requestedType)) {\n\nreturn null;\n\n}\n\nreturn (TypeAdapter<T2>) typeAdapter;\n\n}\n\n@Override\n\npublic String toString() {\n\nreturn \"Factory[typeHierarchy=\" + clazz.getName() + \",adapter=\" + typeAdapter + \"]\";\n\n}\n\n};\n\n}\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}