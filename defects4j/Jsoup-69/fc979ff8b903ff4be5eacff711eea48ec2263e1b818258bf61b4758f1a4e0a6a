{
    "generation": "package org.jsoup.nodes;\n\nimport org.jsoup.internal.StringUtil;\nimport java.net.MalformedURLException;\nimport java.net.URL;\nimport java.util.*;\n\npublic class FormElement extends Element {\n    private static final List<String> inputNames = Arrays.asList(\"button\", \"checkbox\", \"file\", \"hidden\", \"image\",\n            \"password\", \"radio\", \"reset\", \"submit\", \"text\");\n\n    protected void aggregateFormData(Element element, List<Connection.KeyVal> formData) {\n        String name = element.attr(\"name\");\n        if (name.length() > 0) {\n            if (name.contains(\"pass\")) {\n                return; // Skip the password field if its input name contains \"pass\"\n            }\n            if (element.tagName().equals(\"input\")) {\n                String type = element.attr(\"type\").toLowerCase().trim();\n                boolean isCheckbox = type.equals(\"checkbox\") || type.equals(\"radio\");\n                boolean isFileInput = type.equals(\"file\");\n\n                if (element.hasAttr(\"value\") && !isFileInput && (!isCheckbox || element.hasAttr(\"checked\"))) {\n                    String val = element.val();\n                    formData.add(Connection.KeyVal.create(name, val));\n                }\n            } else {\n                String val = element.attr(\"value\");\n                formData.add(Connection.KeyVal.create(name, val));\n            }\n        }\n        if (element.children().isEmpty()) {\n            return;\n        }\n        for (Element el : element.children()) {\n            aggregateFormData(el, formData);\n        }\n    }\n\n    // Other methods...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}