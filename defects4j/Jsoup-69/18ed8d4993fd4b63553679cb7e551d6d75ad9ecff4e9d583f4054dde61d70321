{
    "generation": "/**\n * Rebuilds the form data map after elements have been added or removed.\n * \n * @return the updated form data key-value pairs\n */\npublic List<Connection.KeyVal> formData() {\n    List<Connection.KeyVal> data = new ArrayList<>();\n    for (Element input : select(\"input, select, textarea\")) {\n        if (!input.tagName().equals(\"input\") ||!input.attr(\"type\").equals(\"reset\") &&!input.attr(\"type\").equals(\"button\")) {\n            String name = input.attr(\"name\");\n            if (!name.isEmpty()) {\n                String value = input.tagName().equals(\"input\")? \n                              (input.attr(\"type\").equals(\"checkbox\") || input.attr(\"type\").equals(\"radio\")? \n                               input.hasAttr(\"checked\")? input.attr(\"value\") : \"\" : \n                               input.attr(\"value\")) : \n                              input.tagName().equals(\"select\")? \n                               ((Element) input.selectFirst(\"option[selected]\")!= null? \n                                ((Element) input.selectFirst(\"option[selected]\")).attr(\"value\") : \n                                ((Element) input.selectFirst(\"option\")).attr(\"value\")) : \n                              input.text();\n                data.add(new Connection.KeyVal(name, value));\n            }\n        }\n    }\n    return data.stream() // Remove duplicates by key, preserving order\n        .collect(Collectors.collectingAndThen(\n             Collectors.toMap(Connection.KeyVal::key, Function.identity(), \n                              (existing, replacement) -> existing), \n             m -> new ArrayList<>(m.values())));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}