{
    "generation": "public class FormElement extends Element {\n    // Other existing code...\n\n    public List<Connection.KeyVal> formData() {\n        List<Connection.KeyVal> data = new ArrayList<>();\n        Elements controls = select(\"[name]\");\n        for (Element el : controls) {\n            if (el.nodeName().equals(\"input\")) {\n                String type = el.attr(\"type\");\n                if (\"checkbox\".equalsIgnoreCase(type) || \"radio\".equalsIgnoreCase(type)) {\n                    if (el.hasAttr(\"checked\")) {\n                        data.add(HttpConnection.KeyVal.create(el.attr(\"name\"), el.val()));\n                    }\n                } else if (!el.hasAttr(\"disabled\")) {\n                    data.add(HttpConnection.KeyVal.create(el.attr(\"name\"), el.val()));\n                }\n            } else if (el.nodeName().equals(\"textarea\")) {\n                data.add(HttpConnection.KeyVal.create(el.attr(\"name\"), el.text()));\n            } else if (el.nodeName().equals(\"select\")) {\n                Elements options = el.select(\"option[selected]\");\n                for (Element option : options) {\n                    data.add(HttpConnection.KeyVal.create(el.attr(\"name\"), option.val()));\n                }\n            } else if (!el.hasAttr(\"disabled\")) {\n                data.add(HttpConnection.KeyVal.create(el.attr(\"name\"), el.val()));\n            }\n        }\n        return data;\n    }\n\n    // Other existing code...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}