{
    "generation": "@Override\npublic List<Connection.KeyVal> formData() {\n    ArrayList<Connection.KeyVal> data = new ArrayList<>();\n    Elements inputs = this.select(\"input,textarea,select,button\");\n    for (Element el : inputs) {\n        if (!el.tag().isFormSubmittable()) continue; // ignore non-submittable elements\n        if (el.hasAttr(\"disabled\")) continue; // ignore disabled elements\n\n        String name = el.attr(\"name\");\n        if (name.length() == 0) continue;\n\n        String type = el.attr(\"type\").toLowerCase();\n        if (\"button\".equals(type) || \"submit\".equals(type)) {\n            if (!el.hasAttr(\"value\") || el.attr(\"value\").length() == 0) continue;\n        }\n\n        if (\"select\".equals(el.tagName())) {\n            Elements options = el.select(\"option[selected], option:checked\");\n            boolean set = false;\n            for (Element option : options) {\n                data.add(HttpConnection.KeyVal.create(name, option.val()));\n                set = true;\n            }\n            if (!set) {\n                Element option = el.selectFirst(\"option\");\n                if (option != null)\n                    data.add(HttpConnection.KeyVal.create(name, option.val()));\n            }\n        } else {\n            data.add(HttpConnection.KeyVal.create(name, el.val()));\n        }\n    }\n    return data;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}