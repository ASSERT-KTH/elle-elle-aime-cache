{
    "generation": "@Override\npublic void visit(NodeTraversal t, Node n, Node parent) {\n  if (t.inGlobalScope()) {\n    if (NodeUtil.isVarDeclaration(n)) {\n      NameInformation ns = createNameInformation(t, n, parent);\n      Preconditions.checkNotNull(ns);\n      recordSet(ns.name, n);\n    } else if (NodeUtil.isFunctionDeclaration(n)) {\n      Node nameNode = n.getFirstChild();\n      NameInformation ns = createNameInformation(t, nameNode, n);\n      if (ns != null) {\n        JsName nameInfo = getName(nameNode.getString(), true);\n        recordSet(nameInfo.name, nameNode);\n      }\n    } else if (NodeUtil.isName(n) && NodeUtil.isObjectLitKey(n, parent)) {\n      NameInformation ns = createNameInformation(t, n, parent);\n      if (ns != null) {\n        recordSet(ns.name, n);\n      }\n    } else if (NodeUtil.isFunction(n) && NodeUtil.isObjectLitKey(n, parent)) {\n      Node parentKey = NodeUtil.getObjectLitKey(n, parent);\n      NameInformation ns = createNameInformation(t, parentKey, parent);\n      if (ns != null) {\n        recordSet(ns.name, parentKey);\n      }\n    }\n  }\n  // The rest of the method remains unchanged\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}