{
    "generation": "    private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n      Node nameNode = n.getFirstChild();\n      Node parent = n.getParent();\n      NameInformation ns = createNameInformation(t, nameNode);\n      if (ns != null) {\n        if (parent.isFor() && !NodeUtil.isForIn(parent)) {\n          if (parent.getFirstChild().getNext() != n) {\n            recordDepScope(recordNode, ns);\n          } else {\n            recordDepScope(nameNode, ns);\n          }\n        } else if (!n.isCall() && !(n.getParent() != null && n.getParent().isCall())) {\n          // The rhs of the assignment is not the direct caller, so record its dependency scope\n          recordDepScope(recordNode, ns);\n        } else {\n          // The lhs should be associated with the function scope, handle other cases separately\n          recordDepScope(nameNode, ns);\n        }\n      }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}