{
    "generation": "private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      // Patch for assignments that appear in the init, \n      // condition or iteration part of a FOR loop.\n      recordDepScope(recordNode, ns); // Fix: Always record dependency scope with recordNode\n    } else if (parent.isCall() && parent.getFirstChild() == n) {\n      // Fix for assignment as a caller expression: \n      // don't associate the rhs with the context (i.e., don't record dependency scope)\n    } else {\n      recordDepScope(recordNode, ns);\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}