{
    "generation": "private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n    Node nameNode = n.getFirstChild();\n    Node parent = n.getParent();\n    NameInformation ns = createNameInformation(t, nameNode);\n    if (ns != null) {\n        if (parent.isFor() && !NodeUtil.isForIn(parent)) {\n            // Patch for assignments that appear in the init,\n            // condition or iteration part of a FOR loop.\n            if (parent.getFirstChild().getNext() != n) {\n                recordDepScope(recordNode, ns);\n            } else {\n                recordDepScope(nameNode, ns);\n            }\n        } else if (parent.isCall()) {\n            // Handle the specific case where the assignment is part of a call expression.\n            // Prevent the LHS of the assignment from being incorrectly associated with the call's context.\n            recordDepScope(nameNode, ns);\n        } else {\n            // Default behavior for other assignment cases.\n            recordDepScope(recordNode, ns);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}