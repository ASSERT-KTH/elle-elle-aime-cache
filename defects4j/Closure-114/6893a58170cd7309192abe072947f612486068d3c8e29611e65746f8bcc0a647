{
    "generation": "private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      // Patch for assignments that appear in the init, \n      // condition or iteration part of a FOR loop.\n      recordDepScope(recordNode, ns); // Fixed: always record dependency scope with recordNode\n    } else {\n      // Check if the assignment is the caller expression or nested within it\n      if (NodeUtil.isAssignmentWithCall(n)) {\n        recordDepScope(nameNode, ns); // Fixed: associate with nameNode when assignment is the caller\n      } else {\n        recordDepScope(recordNode, ns);\n      }\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}