{
    "generation": "private void recordAssignment(NodeTraversal t, Node n, Node recordNode) {\n  Node nameNode = n.getFirstChild();\n  Node parent = n.getParent();\n  NameInformation ns = createNameInformation(t, nameNode);\n  if (ns!= null) {\n    if (parent.isFor() &&!NodeUtil.isForIn(parent)) {\n      if (parent.getFirstChild().getNext()!= n) {\n        recordDepScope(recordNode, ns);\n      } else {\n        if (n.getNext()!= null && n.getNext().isCall()) {\n          recordDepScope(nameNode, ns);\n        } else {\n          recordDepScope(recordNode, ns);\n        }\n      }\n    } else {\n      if (n.getParent().isAssign() && n.getParent().getFirstChild().getNext() == n && n.getNext()!= null && n.getNext().isCall()) {\n        recordDepScope(nameNode, ns);\n      } else {\n        recordDepScope(recordNode, ns);\n      }\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}