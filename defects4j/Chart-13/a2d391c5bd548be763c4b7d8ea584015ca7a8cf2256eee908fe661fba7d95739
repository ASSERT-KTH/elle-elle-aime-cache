{
    "generation": "protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,\n                          RectangleConstraint constraint) {\n    double[] w = new double[5];\n    double[] h = new double[5];\n    w[0] = constraint.getWidth();\n    h[2] = constraint.getHeight(); // Initialize h[2] to the total height\n\n    if (this.topBlock != null) {\n        double availableHeight = Math.max(0, h[2]);\n        RectangleConstraint c1 = new RectangleConstraint(w[0], null,\n                LengthConstraintType.FIXED, 0.0,\n                new Range(0.0, availableHeight),\n                LengthConstraintType.RANGE);\n        Size2D size = this.topBlock.arrange(g2, c1);\n        h[0] = size.height;\n        h[2] -= h[0]; // Reduce available height for other blocks\n    }\n\n    w[1] = w[0];\n    if (this.bottomBlock != null) {\n        double availableHeight = Math.max(0, h[2]);\n        RectangleConstraint c2 = new RectangleConstraint(w[0], null,\n                LengthConstraintType.FIXED, 0.0, new Range(0.0, availableHeight),\n                LengthConstraintType.RANGE);\n        Size2D size = this.bottomBlock.arrange(g2, c2);\n        h[1] = size.height;\n        h[2] -= h[1]; // Reduce available height for the center block\n    }\n\n    if (this.leftBlock != null) {\n        double availableWidth = Math.max(0, w[0]);\n        RectangleConstraint c3 = new RectangleConstraint(0.0,\n                new Range(0.0, availableWidth),\n                LengthConstraintType.RANGE, h[2], null,\n                LengthConstraintType.FIXED);\n        Size2D size = this.leftBlock.arrange(g2, c3);\n        w[2] = size.width;\n        w[0] -= w[2]; // Reduce available width for other blocks\n    }\n\n    if (this.rightBlock != null) {\n        double availableWidth = Math.max(0, w[0]);\n        RectangleConstraint c4 = new RectangleConstraint(0.0,\n                new Range(0.0, availableWidth),\n                LengthConstraintType.RANGE, h[2], null,\n                LengthConstraintType.FIXED);\n        Size2D size = this.rightBlock.arrange(g2, c4);\n        w[3] = size.width;\n        w[0] -= w[3]; // Reduce available width for the center block\n    }\n\n    w[4] = w[0];\n    h[4] = h[2];\n    RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);\n    if (this.centerBlock != null) {\n        this.centerBlock.arrange(g2, c5);\n    }\n\n    if (this.topBlock != null) {\n        this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, w[1], h[0]));\n    }\n    if (this.bottomBlock != null) {\n        this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2], w[1], h[1]));\n    }\n    if (this.leftBlock != null) {\n        this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2], h[2]));\n    }\n    if (this.rightBlock != null) {\n        this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0], w[3], h[3]));\n    }\n    if (this.centerBlock != null) {\n        this.centerBlock.setBounds(new Rectangle2D.Double(w[2], h[0], w[4], h[4]));\n    }\n\n    return new Size2D(constraint.getWidth(), constraint.getHeight());\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}