{
    "generation": "private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n    // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.\n    // rels without a baseuri get removed\n    String value = el.absUrl(attr.getKey());\n    if (!preserveRelativeLinks)\n        attr.setValue(value);\n    \n    for (Protocol protocol : protocols) {\n        String prot = protocol.toString().toLowerCase() + \":\";\n        if (value.toLowerCase().startsWith(prot)) {\n            return true;\n        }\n    }\n    // added a lowercase conversion to the value, to make the comparison case-insensitive\n    // and added the possibility to return true if the attribute value starts with a protocol that is not http or https\n    return value.toLowerCase().startsWith(\"cid:\") || value.toLowerCase().startsWith(\"data:\");\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}