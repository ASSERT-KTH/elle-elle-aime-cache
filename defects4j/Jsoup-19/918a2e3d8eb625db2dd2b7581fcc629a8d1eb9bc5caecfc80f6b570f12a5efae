{
    "generation": "private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n    // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.\n    // rels without a baseuri get removed\n    String value = el.absUrl(attr.getKey());\n    if (!preserveRelativeLinks)\n        attr.setValue(value);\n\n    // Check if the value is a relative URL and if relative URLs are allowed\n    if (value == null) {\n        value = attr.getValue(); // Use the original value if it's relative\n    }\n\n    for (Protocol protocol : protocols) {\n        String prot = protocol.toString() + \":\";\n        if (value.toLowerCase().startsWith(prot)) {\n            return true;\n        }\n    }\n\n    // If the value is a relative URL and relative URLs are allowed, return true\n    if (value != null && !value.toLowerCase().startsWith(\"http:\") && !value.toLowerCase().startsWith(\"https:\")) {\n        return true;\n    }\n\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}