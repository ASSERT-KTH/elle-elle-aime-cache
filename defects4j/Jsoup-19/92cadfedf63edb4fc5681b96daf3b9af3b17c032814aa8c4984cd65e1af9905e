{
    "generation": "private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n    // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.\n    // rels without a baseuri get removed\n    String value = el.absUrl(attr.getKey());\n    if (!preserveRelativeLinks)\n        attr.setValue(value);\n\n    // Check for custom protocols before checking the standard protocols\n    if (value.startsWith(\":\")) {\n        // Remove the colon and check if it matches any custom protocols\n        String protocol = value.substring(1).toLowerCase();\n        for (Protocol customProtocol : protocols) {\n            if (customProtocol.toString().equals(protocol)) {\n                return true;\n            }\n        }\n    } else {\n        for (Protocol protocol : protocols) {\n            String prot = protocol.toString() + \":\";\n            if (value.toLowerCase().startsWith(prot)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}