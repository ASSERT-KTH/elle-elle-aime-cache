{
    "generation": "    private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.\n        // rels without a baseuri get removed\n        String value = attr.getValue();\n        if (preserveRelativeLinks) {\n            value = el.absUrl(attr.getKey());\n        } else {\n            attr.setValue(value = el.absUrl(attr.getKey()));\n        }\n\n        if (value.length() == 0) // provides a nice output for when absUrl fails, and prevents possible NPE in startsWith check via protocol validation\n            return false;\n        \n        for (Protocol protocol : protocols) {\n            String prot = protocol.toString() + \":\";\n            if (value.toLowerCase().startsWith(prot)) {\n                return true;\n            }\n        }\n        return false;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}