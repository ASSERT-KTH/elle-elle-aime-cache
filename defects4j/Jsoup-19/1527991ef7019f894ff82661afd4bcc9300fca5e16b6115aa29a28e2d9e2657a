{
    "generation": "    private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols) {\n        // try to resolve relative urls to abs, and optionally update the attribute so output html has abs.\n        // rels without a baseuri get removed\n        String value = el.attr(attr.getKey()); // Changed from absUrl to attr to get the raw value\n        if (!preserveRelativeLinks) {\n            String absoluteUrl = el.absUrl(attr.getKey());\n            if (!absoluteUrl.isEmpty()) {\n                attr.setValue(absoluteUrl);\n                value = absoluteUrl; // Update value to absolute URL if it was resolved\n            }\n        }\n\n        for (Protocol protocol : protocols) {\n            String prot = protocol.toString().toLowerCase() + \":\";\n            if (value.toLowerCase().startsWith(prot)) {\n                return true;\n            }\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}