{
    "generation": "private boolean testValidProtocol(Element el, Attribute attr, Set<Protocol> protocols, Set<String> customProtocols) {\n    // try to resolve relative urls to abs, and optionally update the attribute so output HTML has abs.\n    // rels without a baseURI get removed\n    String value = el.absUrl(attr.getKey());\n    if (!preserveRelativeLinks)\n        attr.setValue(value);\n\n    // Check if the protocol is in the custom protocols set\n    if (customProtocols != null && !customProtocols.isEmpty()) {\n        for (String customProtocol : customProtocols) {\n            if (value.toLowerCase().startsWith(customProtocol + \":\")) {\n                return true;\n            }\n        }\n    }\n\n    // If the protocol is not a custom protocol, check it against the default protocols set\n    for (Protocol protocol : protocols) {\n        String prot = protocol.toString() + \":\";\n        if (value.toLowerCase().startsWith(prot)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}