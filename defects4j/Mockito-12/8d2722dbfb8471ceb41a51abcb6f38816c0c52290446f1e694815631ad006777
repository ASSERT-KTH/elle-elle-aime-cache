{
    "generation": "/**\n * Finds the generic type (parametrized type) of the field. If the field is not generic it returns Object.class. \n * \n * @param field\n * @return\n */\npublic Class getGenericType(Field field) {        \n    Type generic = field.getGenericType();\n    if (generic instanceof ParameterizedType) {\n        ParameterizedType parameterizedType = (ParameterizedType) generic;\n        Type actual = parameterizedType.getActualTypeArguments()[0];\n        if (actual instanceof Class) {\n            return (Class) actual;\n        } else {\n            return Object.class; // handle nested generics by returning Object.class\n        }\n    } else {\n        return Object.class;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}