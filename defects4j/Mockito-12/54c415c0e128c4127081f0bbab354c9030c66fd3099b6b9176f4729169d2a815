{
    "generation": "import java.lang.reflect.ParameterizedType;\nimport java.lang.reflect.Type;\nimport java.util.Set;\n\npublic Class<?> getGenericType(Field field) {\n    Type generic = field.getGenericType();\n    if (generic instanceof ParameterizedType) {\n        Type actual = ((ParameterizedType) generic).getActualTypeArguments()[0];\n        if (actual instanceof ParameterizedType) {\n            //handle nested generics by returning the raw type\n            return (Class<?>) ((ParameterizedType) actual).getRawType();\n        }\n        return (Class<?>) actual;\n    }\n    return Object.class;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}