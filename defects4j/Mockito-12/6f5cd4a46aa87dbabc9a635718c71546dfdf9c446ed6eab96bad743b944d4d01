{
    "generation": "public Class<?> getGenericType(Field field) {\n    Type generic = field.getGenericType();\n    if (generic instanceof ParameterizedType) {\n        Type[] typeArguments = ((ParameterizedType) generic).getActualTypeArguments();\n        if (typeArguments.length > 0) {\n            Type actualType = typeArguments[0];\n            if (actualType instanceof Class) {\n                return (Class<?>) actualType;\n            } else if (actualType instanceof ParameterizedType) {\n                // Handle nested generics\n                return (Class<?>) ((ParameterizedType) actualType).getRawType();\n            }\n        }\n    }\n    return Object.class;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}