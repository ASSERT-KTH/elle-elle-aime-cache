{
    "generation": "public char[] getTextBuffer()\n{\n    // Are we just using shared input buffer?\n    if (_inputStart >= 0) {\n        if (_inputLen == 0) { // Check if the input buffer is effectively empty\n            return new char[0];\n        }\n        return _inputBuffer;\n    }\n    if (_resultArray != null) {\n        if (_resultArray.length == 0) { // Check if the result array is effectively empty\n            return new char[0];\n        }\n        return _resultArray;\n    }\n    if (_resultString != null) {\n        _resultArray = _resultString.toCharArray();\n        if (_resultArray.length == 0) { // Check if the converted array is effectively empty\n            return new char[0];\n        }\n        return _resultArray;\n    }\n    // Nope; but does it fit in just one segment?\n    if (!_hasSegments) {\n        if (_currentSegmentSize == 0) { // Check if the current segment is effectively empty\n            return new char[0];\n        }\n        return _currentSegment;\n    }\n    // Nope, need to have/create a non-segmented array and return it\n    char[] contents = contentsAsArray();\n    if (contents.length == 0) { // Check if the contents array is effectively empty\n        return new char[0];\n    }\n    return contents;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}