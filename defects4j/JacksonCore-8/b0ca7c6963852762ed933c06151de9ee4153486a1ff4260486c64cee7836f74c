{
    "generation": "/**\n * Returns a character array that contains the underlying data.\n * Note that this may create a new instance of char[] on each call, or return\n * a shared (but never modifiable) buffer; caller must **not** modify the\n * returned array.\n */\npublic char[] getTextBuffer()\n{\n    // Are we just using shared input buffer?\n    if (_inputStart >= 0) return _inputBuffer;\n    if (_resultArray!= null)  return _resultArray;\n    if (_resultString!= null) {\n        return (_resultArray = _resultString.toCharArray());\n    }\n    // Check for empty buffer case before checking segments\n    if (_currentSegmentLength == 0) {\n        return new char[0]; // Return an empty char array for empty buffer\n    }\n    // Nope; but does it fit in just one segment?\n    if (!_hasSegments)  return _currentSegment;\n    // Nope, need to have/create a non-segmented array and return it\n    return contentsAsArray();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}