{
    "generation": "@Override\npublic int read(final byte[] dest, final int offs, final int len)\n    throws IOException {\n    if (len < 0) {\n        throw new IndexOutOfBoundsException(\"len(\" + len + \") < 0.\");\n    }\n    if (offs < 0 || offs > dest.length || len > dest.length - offs) {\n        throw new IndexOutOfBoundsException(\"Invalid offset or length.\");\n    }\n    if (this.in == null) {\n        throw new IOException(\"stream closed\");\n    }\n\n    if (len == 0) {\n        return 0;\n    }\n\n    final int hi = offs + len;\n    int destOffs = offs;\n    int b;\n    while (destOffs < hi && ((b = read0()) >= 0)) {\n        dest[destOffs++] = (byte) b;\n        count(1);\n    }\n\n    int c = (destOffs == offs) ? -1 : (destOffs - offs);\n    return c;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}