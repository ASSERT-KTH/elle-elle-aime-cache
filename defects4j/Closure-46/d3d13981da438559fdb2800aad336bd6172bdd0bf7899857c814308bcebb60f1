{
    "generation": "@Override\npublic JSType getLeastSupertype(JSType that) {\n    if (!that.isRecordType()) {\n        return super.getLeastSupertype(that);\n    }\n\n    RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n    \n    // Add all properties from 'this' record type\n    for (String property : properties.keySet()) {\n        builder.addProperty(property, getPropertyType(property), getPropertyNode(property));\n    }\n    \n    // Add all properties from 'that' record type, ensuring no duplicates with different types\n    RecordType thatRecord = that.toMaybeRecordType();\n    for (String property : thatRecord.getProperties().keySet()) {\n        JSType thatType = thatRecord.getPropertyType(property);\n        if (!properties.containsKey(property) || !getPropertyType(property).isEquivalentTo(thatType)) {\n            builder.addProperty(property, thatType, thatRecord.getPropertyNode(property));\n        }\n    }\n    \n    return builder.build();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}