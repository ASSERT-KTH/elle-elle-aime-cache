{
    "generation": "  @Override\n  public JSType getLeastSupertype(JSType that) {\n    if (!that.isRecordType()) {\n      return super.getLeastSupertype(that);\n    }\n    RecordType thatRecord = that.toMaybeRecordType();\n    if (thatRecord == null) {\n      return super.getLeastSupertype(that);\n    }\n\n    RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n    for (String property : properties.keySet()) {\n      if (thatRecord.hasProperty(property)) {\n        builder.addProperty(property,\n            getPropertyType(property).getLeastSupertype(\n                thatRecord.getPropertyType(property)),\n            getPropertyNode(property));\n      }\n    }\n    for (String property : thatRecord.getProperties()) {\n      if (!hasProperty(property)) {\n        builder.addProperty(property, thatRecord.getPropertyType(property), null);\n      }\n    }\n    return builder.build().getLeastSupertype(this);\n  }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}