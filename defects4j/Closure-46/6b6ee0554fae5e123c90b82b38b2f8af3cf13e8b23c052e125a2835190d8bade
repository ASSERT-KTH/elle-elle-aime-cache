{
    "generation": "  @Override\n  public JSType getLeastSupertype(JSType that) {\n    if (!that.isRecordType()) {\n      return super.getLeastSupertype(that);\n    }\n    RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n    Set<String> commonProperties = new HashSet<>(properties.keySet());\n    commonProperties.retainAll(that.toMaybeRecordType().getPropertyNames());\n\n    for (String property : commonProperties) {\n      if (that.toMaybeRecordType().getPropertyType(property).isEquivalentTo(\n          getPropertyType(property))) {\n        builder.addProperty(property, getPropertyType(property),\n            getPropertyNode(property));\n      }\n    }\n    return registry.createUnionType(this, builder.build());\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}