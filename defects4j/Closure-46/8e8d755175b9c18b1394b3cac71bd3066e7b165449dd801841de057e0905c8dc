{
    "generation": "  @Override\n  public JSType getLeastSupertype(JSType that) {\n    if (!that.isRecordType()) {\n      return super.getLeastSupertype(that);\n    }\n    RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n    for (String property : properties.keySet()) {\n      if (that.toMaybeRecordType().hasProperty(property)) {\n        builder.addProperty(property,\n            getPropertyType(property).getLeastSupertype(\n                that.toMaybeRecordType().getPropertyType(property)),\n            getPropertyNode(property));\n      }\n    }\n    for (String property : that.toMaybeRecordType().getProperties()) {\n      if (!hasProperty(property)) {\n        builder.addProperty(property,\n            that.toMaybeRecordType().getPropertyType(property),\n            that.toMaybeRecordType().getPropertyNode(property));\n      }\n    }\n    return builder.build();\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}