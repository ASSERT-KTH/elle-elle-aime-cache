{
    "generation": "@Override\npublic JSType getLeastSupertype(JSType that) {\n    if (!that.isRecordType()) {\n        return super.getLeastSupertype(that);\n    }\n    RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n    for (String property : properties.keySet()) {\n        JSType propertyType = getPropertyType(property);\n        JSType thatPropertyType = that.toMaybeRecordType().getPropertyType(property);\n        if (that.toMaybeRecordType().hasProperty(property)) {\n            builder.addProperty(property, registry.createUnionType(propertyType, thatPropertyType),\n                getPropertyNode(property));\n        }\n    }\n    for (String property : that.toMaybeRecordType().getProperties()) {\n        if (!properties.containsKey(property)) {\n            builder.addProperty(property, that.toMaybeRecordType().getPropertyType(property), \n                that.toMaybeRecordType().getPropertyNode(property));\n        }\n    }\n    return builder.build();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}