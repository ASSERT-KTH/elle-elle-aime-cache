{
    "generation": "@Override\npublic JSType getLeastSupertype(JSType that) {\n  if (!that.isRecordType()) {\n    return super.getLeastSupertype(that);\n  }\n  RecordTypeBuilder builder = new RecordTypeBuilder(registry);\n  RecordType thatRecordType = that.toMaybeRecordType();\n  for (String property : properties.keySet()) {\n    if (thatRecordType.hasProperty(property)) {\n      JSType thisPropertyType = getPropertyType(property);\n      JSType thatPropertyType = thatRecordType.getPropertyType(property);\n      JSType leastSupertype = thisPropertyType.getLeastSupertype(thatPropertyType);\n      if (leastSupertype != null) {\n        builder.addProperty(property, leastSupertype, getPropertyNode(property));\n      }\n    }\n  }\n  return builder.build();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}