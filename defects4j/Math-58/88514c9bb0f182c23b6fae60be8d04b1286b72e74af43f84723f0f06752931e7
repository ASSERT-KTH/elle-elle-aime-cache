{
    "generation": "    /**\n     * Fits a Gaussian function to the observed points.\n     *\n     * @return the parameters of the Gaussian function that best fits the\n     * observed points (in the same order as above).\n     */\n    public double[] fit() {\n        final double[] guess = (new ParameterGuesser(getObservations())).guess();\n        double[] start = fit(new Gaussian.Parametric(), guess);\n        // If we get illegal parameters, try again with different starting values\n        if (Double.isNaN(start[0]) || Double.isNaN(start[1]) || Double.isNaN(start[2])) {\n            final int maxEval = 100 * (getObservations().length + 1);\n            return fit(new Gaussian.Parametric(), guess, maxEval);\n        } else {\n            return start;\n        }\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}