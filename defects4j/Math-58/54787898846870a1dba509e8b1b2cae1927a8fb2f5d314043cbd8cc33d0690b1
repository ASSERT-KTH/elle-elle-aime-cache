{
    "generation": "/**\n * Fits a Gaussian function to the observed points.\n *\n * @return the parameters of the Gaussian function that best fits the\n * observed points (in the same order as above).\n */\npublic double[] fit() {\n    final double[] guess = (new ParameterGuesser(getObservations())).guess();\n    final Gaussian.Parametric gaussian = new Gaussian.Parametric() {\n        @Override\n        public double value(double x, double... parameters) {\n            if (parameters[2] <= 0) {\n                return Double.NaN;\n            }\n            return super.value(x, parameters);\n        }\n\n        @Override\n        public double[] gradient(double x, double... parameters) {\n            if (parameters[2] <= 0) {\n                return new double[] { Double.NaN, Double.NaN, Double.NaN };\n            }\n            return super.gradient(x, parameters);\n        }\n    };\n    return fit(gaussian, guess);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}