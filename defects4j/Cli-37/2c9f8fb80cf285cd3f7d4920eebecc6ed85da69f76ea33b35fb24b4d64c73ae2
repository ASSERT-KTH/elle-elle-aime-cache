{
    "generation": "    /**\n     * Tells if the token looks like a short option.\n     * \n     * @param token\n     */\n    private boolean isShortOption(String token)\n    {\n        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n        if (token.startsWith(\"-\") && token.length() >= 2) {\n            String firstChar = token.substring(1, 2);\n            if (options.hasShortOption(firstChar)) {\n                // Check if the token is a single short option or a combination of short options\n                if (token.length() == 2 || token.charAt(2) == '=') {\n                    return true;\n                }\n                // Check if the remaining part is a valid combination of short options\n                for (int i = 2; i < token.length(); i++) {\n                    if (token.charAt(i) == '=') {\n                        break;\n                    }\n                    if (!options.hasShortOption(String.valueOf(token.charAt(i)))) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}