{
    "generation": "/**\n * Tells if the token looks like a short option.\n * \n * @param token\n */\nprivate boolean isShortOption(String token)\n{\n    // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n    if (token.startsWith(\"-\") && token.length() >= 2) {\n        String candidate = token.substring(1);\n        if (candidate.contains(\"=\")) {\n            candidate = candidate.split(\"=\")[0];\n        }\n        if (candidate.length() > 1) {\n            for (char ch : candidate.toCharArray()) {\n                if (!options.hasShortOption(String.valueOf(ch))) {\n                    return false;\n                }\n            }\n        } else {\n            return options.hasShortOption(candidate);\n        }\n        return true;\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}