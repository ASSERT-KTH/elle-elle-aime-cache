{
    "generation": "    /**\n     * Tells if the token looks like a short option.\n     * \n     * @param token\n     */\n    private boolean isShortOption(String token)\n    {\n        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n        if (!token.startsWith(\"-\") || token.length() < 2) {\n            return false;\n        }\n\n        // remove leading \"-\" and \"=value\"\n        String opt = token.substring(1);\n        if (opt.indexOf('=') != -1) {\n            opt = opt.substring(0, opt.indexOf('='));\n        }\n        for (int i = 0; i < opt.length(); i++) {\n            String shortOption = String.valueOf(opt.charAt(i));\n            if (!options.hasShortOption(shortOption)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}