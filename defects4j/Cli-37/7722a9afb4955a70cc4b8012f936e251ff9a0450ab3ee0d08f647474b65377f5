{
    "generation": "    /**\n     * Tells if the token looks like a short option.\n     * \n     * @param token\n     */\n    private boolean isShortOption(String token)\n    {\n        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n        if (!token.startsWith(\"-\") || token.length() < 2) {\n            return false;\n        }\n\n        // Check each character after the first \"-\"\n        for (int i = 1; i < token.length(); i++) {\n            char c = token.charAt(i);\n            if (c == '=') {\n                // If '=' is found, the preceding character must be a valid short option\n                if (i > 1 && options.hasShortOption(token.substring(i - 1, i))) {\n                    return true;\n                }\n                return false;\n            }\n            if (!options.hasShortOption(token.substring(i, i + 1))) {\n                return false;\n            }\n        }\n        return true;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}