{
    "generation": "/**\n * Tells if the token looks like a short option.\n * \n * @param token\n */\nprivate boolean isShortOption(String token)\n{\n    // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n    // If the token contains \"=\", consider only the part before \"=\"\n    String tokenBeforeEquals = token.contains(\"=\")? token.substring(0, token.indexOf(\"=\")) : token;\n    \n    return tokenBeforeEquals.startsWith(\"-\") && tokenBeforeEquals.length() >= 2 \n           && options.hasShortOption(tokenBeforeEquals.substring(1, 2));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}