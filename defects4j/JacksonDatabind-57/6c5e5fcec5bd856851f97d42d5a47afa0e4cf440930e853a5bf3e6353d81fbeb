{
    "generation": "    /**\n     * Overloaded version of {@link #readValue(InputStream)}.\n     */\n    public <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n        throws IOException, JsonProcessingException\n    {\n        if (_dataFormatReaders != null) {\n            try {\n                JsonFactory factory = _dataFormatReaders.findFormat(src, offset, length);\n                return _detectBindAndReadValues(factory, false);\n            } catch (IllegalArgumentException e) {\n                throw JsonMappingException.fromUnexpectedIOE(e);\n            }\n        }\n        return _bindAndReadValues(_considerFilter(_parserFactory.createParser(src),\n                true));\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}