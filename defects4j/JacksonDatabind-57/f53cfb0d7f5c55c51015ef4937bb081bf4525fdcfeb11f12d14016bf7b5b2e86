{
    "generation": "/**\n * Overloaded version of {@link #readValue(InputStream)}.\n */\npublic <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n    throws IOException, JsonProcessingException\n{\n    if (_dataFormatReaders != null) {\n        return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false);\n    }\n\n    InputFactory inputFactory = _parserFactory.getFactory();\n    Object codec = inputFactory.createParser(new ByteArrayInputStream(src, offset, length));\n    // Set the encoding to UTF-8\n    if (codec instanceof Utf8StreamJsonParser) {\n        ((Utf8StreamJsonParser) codec).setInputEncoding(\"UTF-8\");\n    }\n    return _bindAndReadValues(_considerFilter(codec,true));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}