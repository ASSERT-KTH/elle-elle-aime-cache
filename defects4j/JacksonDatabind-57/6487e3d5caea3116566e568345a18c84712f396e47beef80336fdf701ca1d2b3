{
    "generation": "/**\n * Overloaded version of {@link #readValue(InputStream)}.\n */\npublic <T> MappingIterator<T> readValues(byte[] src, int offset, int length)\n    throws IOException, JsonProcessingException\n{\n    if (_dataFormatReaders!= null) {\n        return _detectBindAndReadValues(_dataFormatReaders.findFormat(src, offset, length), false, _parserFactory.createParser(src, offset, length));\n    }\n    JsonParser p = _considerFilter(_parserFactory.createParser(src, offset, length), true);\n    if (!p.canUseSchema(JsonFormatSchema.class)) {\n        throw new JsonParseException(p, \"Can not read JSON with unadorned char array; encapsulate in JsonArray or other structure.\");\n    }\n    return _bindAndReadValues(p);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}