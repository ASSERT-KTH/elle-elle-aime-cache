{
    "generation": "public int getOffsetFromLocal(long instantLocal) {\n    // get the offset at instantLocal (first estimate)\n    int offsetLocal = getOffset(instantLocal);\n    // adjust instantLocal using the estimate and recalc the offset\n    long instantAdjusted = instantLocal - offsetLocal;\n    int offsetAdjusted = getOffset(instantAdjusted);\n    // if the offsets differ, we must be near a DST boundary\n    if (offsetLocal != offsetAdjusted) {\n        // we need to ensure that time is always after the DST gap\n        // this happens naturally for positive offsets, but not for negative\n        if (offsetLocal - offsetAdjusted < 0) {\n            long nextTransitionLocal = nextTransition(instantLocal);\n            long nextTransitionAdjusted = nextTransition(instantAdjusted);\n            if (nextTransitionLocal != nextTransitionAdjusted) {\n                // Check if nextTransition is a gap\n                if (getOffset((nextTransitionLocal + nextTransitionAdjusted) / 2) != offsetAdjusted) {\n                    return offsetLocal;\n                }\n            }\n        }\n    } else if (offsetLocal > 0) {\n        long prevTransition = previousTransition(instantAdjusted);\n        if (prevTransition < instantAdjusted) {\n            int offsetPrev = getOffset(prevTransition);\n            int diff = offsetPrev - offsetLocal;\n            if (instantAdjusted - prevTransition <= diff) {\n                return offsetPrev;\n            }\n        }\n    }\n    return offsetAdjusted;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}