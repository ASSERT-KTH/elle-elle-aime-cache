{
    "generation": "    public int getOffsetFromLocal(long instantLocal) {\n        // get the offset at instantLocal (first estimate)\n        final int offsetLocal = getOffset(instantLocal);\n        // adjust instantLocal using the estimate and recalc the offset\n        final long instantAdjusted = instantLocal - offsetLocal;\n        final int offsetAdjusted = getOffset(instantAdjusted);\n        // if the offsets differ, we must be near a DST boundary\n        if (offsetLocal != offsetAdjusted) {\n            // we need to ensure that time is always after the DST gap\n            // this happens naturally for positive offsets, but not for negative\n            if ((offsetLocal - offsetAdjusted) < 0) {\n                // check if the transition was a DST gap\n                final long nextAdjusted = nextTransition(instantAdjusted);\n                final long nextLocal = nextTransition(instantLocal - offsetLocal);\n                if (nextLocal != nextAdjusted && instantLocal - offsetAdjusted >= nextAdjusted && instantLocal - offsetLocal < nextLocal) {\n                    return offsetLocal;\n                }\n            } else {\n                // check if the transition was a DST overlap\n                final long prevAdjusted = previousTransition(instantAdjusted);\n                final long prevLocal = previousTransition(instantLocal - offsetLocal);\n                if (prevLocal != prevAdjusted && instantLocal - offsetAdjusted <= prevAdjusted && instantLocal - offsetLocal > prevLocal) {\n                    return offsetAdjusted;\n                }\n            }\n        }\n        return offsetAdjusted;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}