{
    "generation": "public double cumulativeProbability(double x) throws MathException {\n    final double dev = x - mean;\n    final double dn = standardDeviation * Math.sqrt(2.0);\n    final double t = dev / dn;\n    \n    // Check if x is more than 40 standard deviations from the mean\n    if (Math.abs(t) > 40.0) {\n        return t < 0 ? 0.0 : 1.0;\n    }\n    \n    try {\n        return 0.5 * (1.0 + Erf.erf(t));\n    } catch (MaxIterationsExceededException ex) {\n        // If the algorithm fails to converge, check if x is extreme\n        if (x < (mean - 40 * standardDeviation)) {\n            return 0.0;\n        } else if (x > (mean + 40 * standardDeviation)) {\n            return 1.0;\n        } else {\n            throw ex;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}