{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        case Character: {\n            // ...\n        }\n        // ...\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.name();\n            if (name.equals(\"html\")) {\n                // ...\n            } else if (StringUtil.in(name, Constants.InBodyStartToHead)) {\n                // ...\n            } else if (name.equals(\"body\")) {\n                // ...\n            } else if (name.equals(\"frameset\")) {\n                // ...\n            } else if (StringUtil.in(name, Constants.InBodyStartPClosers)) {\n                // ...\n            } else if (name.equals(\"image\")) {\n                if (tb.isInsideSvg()) {\n                    tb.insert(startTag); // keep as <image> if inside svg\n                } else {\n                    return tb.process(startTag.name(\"img\")); // change <image> to <img>\n                }\n                // the rest of the code...\n            } else {\n                // ...\n            }\n            break;\n        // ...\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}