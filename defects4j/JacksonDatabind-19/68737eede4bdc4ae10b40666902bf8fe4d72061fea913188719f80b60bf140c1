{
    "generation": "/**\n * Specialized version of {@link #_mapType} to handle `Properties` type.\n * \n * @since 2.6\n */\nprivate JavaType _mapType(Class<?> rawClass)\n{\n    if (rawClass == Properties.class) { // Special handling for Properties\n        return MapType.construct(rawClass, String.class, String.class);\n    }\n    \n    JavaType[] typeParams = findTypeParameters(rawClass, Map.class);\n    // ok to have no types (\"raw\")\n    if (typeParams == null) {\n        return MapType.construct(rawClass, _unknownType(), _unknownType());\n    }\n    // but exactly 2 types if any found\n    if (typeParams.length!= 2) {\n        throw new IllegalArgumentException(\"Strange Map type \"+rawClass.getName()+\": can not determine type parameters\");\n    }\n    return MapType.construct(rawClass, typeParams[0], typeParams[1]);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}