{
    "generation": "@Override\npublic void integrate(final ExpandableStatefulODE equations, final double t)\n        throws MathIllegalStateException, MathIllegalArgumentException {\n\n    //.... code before\n\n    // main integration loop\n    isLastStep = false;\n    do {\n\n        interpolator.shift();\n\n        // iterate over step size, ensuring local normalized error is smaller than 1\n        double error = 10;\n        while (error >= 1.0) {\n\n            //...code in while loop\n\n            if (firstTime) {\n                hNew = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);\n\n                // Cap the first step size within the allowed boundaries\n                hNew = MathUtils.max(minStep, MathUtils.min(maxStep, hNew));\n\n                firstTime = false;\n            }\n\n            // ...code after first time condition\n\n        }\n\n        // ...code after while loop\n\n    } while (!isLastStep);\n\n    // ...code after do-while loop\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}