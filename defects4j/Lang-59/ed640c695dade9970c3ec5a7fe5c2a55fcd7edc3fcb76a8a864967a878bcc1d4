{
    "generation": "/**\n * Appends an object to the builder padding on the right to a fixed length.\n * The <code>toString</code> of the object is used.\n * If the object is larger than the length, the right hand side is lost.\n * If the object is null, null text value is used.\n * \n * @param obj      the object to append, null uses null text\n * @param width    the fixed field width, zero or negative has no effect\n * @param padChar  the pad character to use\n * @return this, to enable chaining\n */\npublic StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) {\n    if (width > 0) {\n        // Calculate the length of the string to append\n        String str = (obj == null ? getNullText() : obj.toString());\n        int strLen = str.length();\n        \n        // Determine the number of characters to append (either the string or up to width)\n        int charsToAppend = Math.min(strLen, width);\n        \n        // Ensure the buffer has enough capacity\n        ensureCapacity(size + width);\n        \n        // Copy the string characters into the buffer\n        str.getChars(strLen - charsToAppend, strLen, buffer, size);\n        \n        // Calculate padding length\n        int padLen = width - charsToAppend;\n        \n        // Append padding characters\n        for (int i = 0; i < padLen; i++) {\n            buffer[size + charsToAppend + i] = padChar;\n        }\n        \n        // Update the size\n        size += width;\n    }\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}