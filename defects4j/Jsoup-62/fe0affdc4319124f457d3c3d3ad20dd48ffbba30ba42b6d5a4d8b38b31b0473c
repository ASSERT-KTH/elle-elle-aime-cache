{
    "generation": "/**\n * Fixed function to check for any other end tag, handling case sensitivity\n * \n * @param t Token to check\n * @param tb HtmlTreeBuilder instance\n * @return true if end tag is found and processed, false otherwise\n */\nboolean anyOtherEndTag(Token t, HtmlTreeBuilder tb) {\n    String name = t.asEndTag().normalName();\n    ArrayList<Element> stack = tb.getStack();\n    for (int pos = stack.size() - 1; pos >= 0; pos--) {\n        Element node = stack.get(pos);\n        // Fix: Check for case-insensitive match when preserveCase setting is false\n        if ((tb.getParser().settings().preserveCase && node.nodeName().equals(name)) \n            || (!tb.getParser().settings().preserveCase && node.nodeName().equalsIgnoreCase(name))) {\n            tb.generateImpliedEndTags(name);\n            if (!name.equals(tb.currentElement().nodeName()))\n                tb.error(this);\n            tb.popStackToClose(name);\n            break;\n        } else {\n            if (tb.isSpecial(node)) {\n                tb.error(this);\n                return false;\n            }\n        }\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}