{
    "generation": "/**\n * Get the current solution.\n * <p>\n * {@link #solve} should be called first for this to be the optimal solution.\n * </p>\n * @return current solution\n */\nprotected RealPointValuePair getSolution() {\n    double[] coefficients = new double[getOriginalNumDecisionVariables()];\n    double mostNegative = 0;\n    boolean[] isSet = new boolean[coefficients.length]; // Keep track of which coefficients are set\n\n    for (int i = 0; i < coefficients.length; i++) {\n        Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i);\n        if (basicRow != null) {\n            double value = getEntry(basicRow, getRhsOffset());\n            if (!isSet[i]) {\n                coefficients[i] = value - (restrictToNonNegative ? 0 : mostNegative);\n                isSet[i] = true;\n            }\n            // Check if any other variable can take this value\n            for (int j = 0; j < coefficients.length; j++) {\n                if (i != j && !isSet[j]) {\n                    Integer otherBasicRow = getBasicRow(getNumObjectiveFunctions() + j);\n                    if (otherBasicRow != null && tableau.getEntry(otherBasicRow, getNumObjectiveFunctions() + i) == 1) {\n                        coefficients[j] = 0;\n                        isSet[j] = true;\n                    }\n                }\n            }\n        } else if (!isSet[i]) {\n            coefficients[i] = restrictToNonNegative ? 0 : -mostNegative;\n            isSet[i] = true;\n        }\n    }\n\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}