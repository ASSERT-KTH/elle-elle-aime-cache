{
    "generation": "protected RealPointValuePair getSolution() {\n    double[] coefficients = new double[getOriginalNumDecisionVariables()];\n    Map<Integer, Integer> firstBasicRowIndices = new HashMap<>();\n    double mostNegative = Double.POSITIVE_INFINITY;\n    for (int i = 0; i < coefficients.length; i++) {\n        Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i);\n        if (basicRow != null) {\n            double value = getEntry(basicRow, getRhsOffset());\n            if (value < mostNegative) {\n                mostNegative = value;\n            }\n            if (!firstBasicRowIndices.containsKey(i)) {\n                firstBasicRowIndices.put(i, basicRow);\n            }\n            coefficients[i] = (value - (restrictToNonNegative ? 0 : mostNegative));\n            if (!basicRow.equals(firstBasicRowIndices.get(i))) {\n                coefficients[i] = 0;\n            }\n        }\n    }\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}