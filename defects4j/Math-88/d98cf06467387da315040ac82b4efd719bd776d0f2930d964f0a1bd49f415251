{
    "generation": "/**\n * Get the current solution.\n * <p>\n * {@link #solve} should be called first for this to be the optimal solution.\n * </p>\n * @return current solution\n */\nprotected RealPointValuePair getSolution() {\n    double[] coefficients = new double[getOriginalNumDecisionVariables()];\n    double mostNegative = 0;\n    \n    for (int i = 0; i < coefficients.length; i++) {\n        Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i);\n        if (basicRow != null) {\n            double value = getEntry(basicRow, getRhsOffset());\n            coefficients[i] = value;\n            if (value < mostNegative) {\n                mostNegative = value;\n            }\n        } else {\n            coefficients[i] = 0;\n        }\n    }\n    \n    if (!restrictToNonNegative) {\n        for (int i = 0; i < coefficients.length; i++) {\n            coefficients[i] -= mostNegative;\n        }\n    }\n    \n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}