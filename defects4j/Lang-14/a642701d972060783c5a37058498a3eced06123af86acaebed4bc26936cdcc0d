{
    "generation": "/**\n * Compares two CharSequences, returning {@code true} if they represent\n * equal sequences of characters.\n *\n * {@code null}s are handled without exceptions. Two {@code null}\n * references are considered to be equal. The comparison is case sensitive.\n *\n * @see java.lang.CharSequence#equals(Object)\n * @param cs1  the first CharSequence, may be {@code null}\n * @param cs2  the second CharSequence, may be {@code null}\n * @return {@code true} if the CharSequences are equal (case-sensitive), or both {@code null}\n */\npublic static boolean equals(CharSequence cs1, CharSequence cs2) {\n    if (cs1 == cs2) {\n        return true;\n    }\n    if (cs1 == null || cs2 == null) {\n        return false;\n    }\n    if (cs1.length() != cs2.length()) {\n        return false;\n    }\n    for (int i = 0; i < cs1.length(); i++) {\n        if (cs1.charAt(i) != cs2.charAt(i)) {\n            return false;\n        }\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}