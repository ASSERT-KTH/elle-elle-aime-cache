{
    "generation": "public static StdKeyDeserializer forType(Class<?> raw) {\n    if (raw == CharSequence.class) {\n        FromStringDeserializer<?> deser = FromStringDeserializer.findDeserializer(String.class);\n        return new StdKeyDeserializer(TYPE_STRING, raw, deser);\n    } else if (raw == String.class || raw == Object.class) {\n        return StringKD.forType(raw);\n    } else if (raw == UUID.class) {\n        return new StdKeyDeserializer(TYPE_UUID, raw);\n    } else if (raw == Integer.class) {\n        return new StdKeyDeserializer(TYPE_INT, raw);\n    } else if (raw == Long.class) {\n        return new StdKeyDeserializer(TYPE_LONG, raw);\n    } else if (raw == Date.class) {\n        return new StdKeyDeserializer(TYPE_DATE, raw);\n    } else if (raw == Calendar.class) {\n        return new StdKeyDeserializer(TYPE_CALENDAR, raw);\n    } else if (raw == Boolean.class) {\n        return new StdKeyDeserializer(TYPE_BOOLEAN, raw);\n    } else if (raw == Byte.class) {\n        return new StdKeyDeserializer(TYPE_BYTE, raw);\n    } else if (raw == Character.class) {\n        return new StdKeyDeserializer(TYPE_CHAR, raw);\n    } else if (raw == Short.class) {\n        return new StdKeyDeserializer(TYPE_SHORT, raw);\n    } else if (raw == Float.class) {\n        return new StdKeyDeserializer(TYPE_FLOAT, raw);\n    } else if (raw == Double.class) {\n        return new StdKeyDeserializer(TYPE_DOUBLE, raw);\n    } else if (raw == URI.class) {\n        return new StdKeyDeserializer(TYPE_URI, raw);\n    } else if (raw == URL.class) {\n        return new StdKeyDeserializer(TYPE_URL, raw);\n    } else if (raw == Class.class) {\n        return new StdKeyDeserializer(TYPE_CLASS, raw);\n    } else if (raw == Locale.class) {\n        FromStringDeserializer<?> deser = FromStringDeserializer.findDeserializer(Locale.class);\n        return new StdKeyDeserializer(TYPE_LOCALE, raw, deser);\n    } else if (raw == Currency.class) {\n        FromStringDeserializer<?> deser = FromStringDeserializer.findDeserializer(Currency.class);\n        return new StdKeyDeserializer(TYPE_CURRENCY, raw, deser);\n    } else {\n        return null;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}