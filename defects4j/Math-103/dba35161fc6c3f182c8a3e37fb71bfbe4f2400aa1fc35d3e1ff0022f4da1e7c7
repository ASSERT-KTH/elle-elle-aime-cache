{
    "generation": "/**\n * For this distribution, X, this method returns P(X < x).\n * @param x the value at which the CDF is evaluated.\n * @return the cumulative probability evaluated at x.\n * @throws MathException if the algorithm fails to converge and x is within 20 standard deviations from the mean.\n */\npublic double cumulativeProbability(double x) throws MathException {\n    double z = (x - mean) / standardDeviation;\n    if (Math.abs(z) > 20.0) {\n        return z < 0 ? 0.0 : 1.0;\n    } else {\n        try {\n            return 0.5 * (1.0 + Erf.erf(z / Math.sqrt(2.0)));\n        } catch (MathException e) {\n            // Catch the exception and return 0 or 1 based on z\n            if (z < 0) {\n                return 0.0;\n            } else {\n                return 1.0;\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}