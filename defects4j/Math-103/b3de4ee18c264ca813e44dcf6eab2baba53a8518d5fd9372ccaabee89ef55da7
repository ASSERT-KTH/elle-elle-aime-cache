{
    "generation": "/**\n * For this distribution, X, this method returns P(X &lt; <code>x</code>).\n * @param x the value at which the CDF is evaluated.\n * @return CDF evaluted at <code>x</code>. \n * @throws MathException if the algorithm fails to converge; unless\n * x is more than 20 standard deviations from the mean, in which case the\n * convergence exception is caught and 0 or 1 is returned.\n */\npublic double cumulativeProbability(double x) throws MathException {\n    double standardizedX = (x - mean) / (standardDeviation * Math.sqrt(2.0));\n    try {\n        return 0.5 * (1.0 + Erf.erf(standardizedX));\n    } catch (MaxIterationsExceededException e) {\n        // top-code extreme values (more than 20 standard deviations from mean)\n        if (Math.abs(standardizedX) > 20) {\n            return (standardizedX < 0)? 0.0 : 1.0;\n        } else {\n            throw e; // re-throw if not an extreme value\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}