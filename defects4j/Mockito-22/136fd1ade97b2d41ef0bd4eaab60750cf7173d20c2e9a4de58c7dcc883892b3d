{
    "generation": "public static boolean areEqual(Object o1, Object o2) {\n    if (o1 == null || o2 == null) {\n        return o1 == null && o2 == null;\n    } else if (isArray(o1) && isArray(o2)) {\n        return areArraysEqual(o1, o2);\n    } else {\n        return o1.equals(o2);\n    }\n}\n\nprivate static boolean isArray(Object obj) {\n    return obj != null && obj.getClass().isArray();\n}\n\nprivate static boolean areArraysEqual(Object a1, Object a2) {\n    if (a1 instanceof Object[] && a2 instanceof Object[]) {\n        return java.util.Arrays.deepEquals((Object[]) a1, (Object[]) a2);\n    } else if (a1 instanceof int[] && a2 instanceof int[]) {\n        return java.util.Arrays.equals((int[]) a1, (int[]) a2);\n    } else if (a1 instanceof double[] && a2 instanceof double[]) {\n        return java.util.Arrays.equals((double[]) a1, (double[]) a2);\n    } else if (a1 instanceof long[] && a2 instanceof long[]) {\n        return java.util.Arrays.equals((long[]) a1, (long[]) a2);\n    } else if (a1 instanceof float[] && a2 instanceof float[]) {\n        return java.util.Arrays.equals((float[]) a1, (float[]) a2);\n    } else if (a1 instanceof short[] && a2 instanceof short[]) {\n        return java.util.Arrays.equals((short[]) a1, (short[]) a2);\n    } else if (a1 instanceof char[] && a2 instanceof char[]) {\n        return java.util.Arrays.equals((char[]) a1, (char[]) a2);\n    } else if (a1 instanceof byte[] && a2 instanceof byte[]) {\n        return java.util.Arrays.equals((byte[]) a1, (byte[]) a2);\n    } else if (a1 instanceof boolean[] && a2 instanceof boolean[]) {\n        return java.util.Arrays.equals((boolean[]) a1, (boolean[]) a2);\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}