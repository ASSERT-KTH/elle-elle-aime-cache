{
    "generation": "    public static boolean areEqual(Object o1, Object o2) {\n        if (o1 == null || o2 == null) {\n            return o1 == null && o2 == null;\n        } else if (o1.getClass().isArray() && o2.getClass().isArray()) {\n            if (o1 instanceof int[] && o2 instanceof int[]) {\n                return areArraysEqual((int[]) o1, (int[]) o2);\n            } else if (o1 instanceof double[] && o2 instanceof double[]) {\n                return areArraysEqual((double[]) o1, (double[]) o2);\n            } else if (o1 instanceof Object[] && o2 instanceof Object[]) {\n                return areArraysEqual((Object[]) o1, (Object[]) o2);\n            } else {\n                return false;\n            }\n        } else {\n            return o1.equals(o2);\n        }\n    }\n\n    private static boolean areArraysEqual(int[] arr1, int[] arr2) {\n        if (arr1.length != arr2.length) {\n            return false;\n        }\n        for (int i = 0; i < arr1.length; i++) {\n            if (arr1[i] != arr2[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private static boolean areArraysEqual(double[] arr1, double[] arr2) {\n        if (arr1.length != arr2.length) {\n            return false;\n        }\n        for (int i = 0; i < arr1.length; i++) {\n            if (arr1[i] != arr2[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private static boolean areArraysEqual(Object[] arr1, Object[] arr2) {\n        if (arr1.length != arr2.length) {\n            return false;\n        }\n        for (int i = 0; i < arr1.length; i++) {\n            if (!Objects.equals(arr1[i], arr2[i])) {\n                return false;\n            }\n        }\n        return true;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}