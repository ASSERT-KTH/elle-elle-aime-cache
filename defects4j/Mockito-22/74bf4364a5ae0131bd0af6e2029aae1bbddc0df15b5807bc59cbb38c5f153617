{
    "generation": "public static boolean areEqual(Object o1, Object o2) {\n    if (o1 == null || o2 == null) {\n        return o1 == null && o2 == null;\n    } else if (isArray(o1)) {\n        if (!isArray(o2)) {\n            return false;\n        }\n        return areArraysEqual(o1, o2);\n    } else {\n        return o1.equals(o2);\n    }\n}\n\nprivate static boolean isArray(Object o) {\n    return o.getClass().isArray();\n}\n\nprivate static boolean areArraysEqual(Object o1, Object o2) {\n    if (o1.getClass()!= o2.getClass()) {\n        return areWrapperArraysEqual(o1, o2);\n    }\n    int length1 = Array.getLength(o1);\n    int length2 = Array.getLength(o2);\n    if (length1!= length2) {\n        return false;\n    }\n    for (int i = 0; i < length1; i++) {\n        if (!areEqual(Array.get(o1, i), Array.get(o2, i))) {\n            return false;\n        }\n    }\n    return true;\n}\n\nprivate static boolean areWrapperArraysEqual(Object o1, Object o2) {\n    int length1 = Array.getLength(o1);\n    int length2 = Array.getLength(o2);\n    if (length1!= length2) {\n        return false;\n    }\n    for (int i = 0; i < length1; i++) {\n        Object element1 = Array.get(o1, i);\n        Object element2 = Array.get(o2, i);\n        if (element1 instanceof Integer && element2 instanceof Double) {\n            return element1.equals(element2);\n        } else if (element1 instanceof Double && element2 instanceof Integer) {\n            return element1.equals(element2);\n        } else {\n            return areEqual(element1, element2);\n        }\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}