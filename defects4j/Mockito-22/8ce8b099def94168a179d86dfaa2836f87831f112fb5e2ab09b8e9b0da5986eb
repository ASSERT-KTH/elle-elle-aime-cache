{
    "generation": "import java.lang.reflect.Array;\nimport java.util.Arrays;\n\npublic static boolean areEqual(Object o1, Object o2) {\n    if (o1 == null || o2 == null) {\n        return o1 == null && o2 == null;\n    } else if (isArray(o1) && isArray(o2)) {\n        if (o1.getClass().getComponentType().isPrimitive() && o2.getClass().getComponentType().isPrimitive()) {\n            // Both objects are arrays of primitive types.\n            return Arrays.equals((Object[]) toObjectArray(o1), (Object[]) toObjectArray(o2));\n        } else {\n            // One or both objects are arrays of non-primitive types.\n            return Arrays.equals((Object[]) o1, (Object[]) o2);\n        }\n    } else {\n        return o1.equals(o2);\n    }\n}\n\nprivate static boolean isArray(Object obj) {\n    return obj.getClass().isArray();\n}\n\nprivate static Object toObjectArray(Object array) {\n    if (array.getClass().getComponentType().isPrimitive()) {\n        int length = Array.getLength(array);\n        Object[] result = new Object[length];\n        for (int i = 0; i < length; i++) {\n            result[i] = Array.get(array, i);\n        }\n        return result;\n    } else {\n        return array;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}