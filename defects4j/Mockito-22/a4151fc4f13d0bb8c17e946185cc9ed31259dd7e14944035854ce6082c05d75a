{
    "generation": "    public static boolean areEqual(Object o1, Object o2) {\n        if (o1 == null || o2 == null) {\n            return o1 == null && o2 == null;\n        } else if (o1.getClass().isArray() && o2.getClass().isArray()) {\n            Class<?> o1ComponentType = o1.getClass().getComponentType();\n            Class<?> o2ComponentType = o2.getClass().getComponentType();\n            if (o1ComponentType != o2ComponentType) {\n                return false;\n            }\n            if (!o1ComponentType.isPrimitive()) {\n                return Arrays.deepEquals((Object[]) o1, (Object[]) o2);\n            } else {\n                // Primitive types handling\n                if (o1ComponentType == int.class) {\n                    return Arrays.equals((int[]) o1, (int[]) o2);\n                } else if (o1ComponentType == double.class) {\n                    return Arrays.equals((double[]) o1, (double[]) o2);\n                } // Add more primitive type checks if necessary\n                return false;\n            }\n        } else {\n            return o1.equals(o2);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}