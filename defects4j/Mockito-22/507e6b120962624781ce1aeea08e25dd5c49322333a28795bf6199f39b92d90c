{
    "generation": "    public static boolean areEqual(Object o1, Object o2) {\n        if (o1 == null || o2 == null) {\n            return o1 == null && o2 == null;\n        } else if (isArray(o1)) {\n            if (!isArray(o2)) {\n                return false;\n            }\n            // Handle primitive arrays and object arrays separately\n            if (o1.getClass().getComponentType().isPrimitive() || o2.getClass().getComponentType().isPrimitive()) {\n                return arePrimitiveArraysEqual(o1, o2);\n            } else {\n                return areObjectArraysEqual(o1, o2);\n            }\n        } else {\n            return o1.equals(o2);\n        }\n    }\n\n    private static boolean arePrimitiveArraysEqual(Object array1, Object array2) {\n        if (array1 instanceof int[] && array2 instanceof int[]) {\n            return Arrays.equals((int[]) array1, (int[]) array2);\n        } else if (array1 instanceof long[] && array2 instanceof long[]) {\n            return Arrays.equals((long[]) array1, (long[]) array2);\n        } else if (array1 instanceof short[] && array2 instanceof short[]) {\n            return Arrays.equals((short[]) array1, (short[]) array2);\n        } else if (array1 instanceof byte[] && array2 instanceof byte[]) {\n            return Arrays.equals((byte[]) array1, (byte[]) array2);\n        } else if (array1 instanceof char[] && array2 instanceof char[]) {\n            return Arrays.equals((char[]) array1, (char[]) array2);\n        } else if (array1 instanceof float[] && array2 instanceof float[]) {\n            return Arrays.equals((float[]) array1, (float[]) array2);\n        } else if (array1 instanceof double[] && array2 instanceof double[]) {\n            return Arrays.equals((double[]) array1, (double[]) array2);\n        } else if (array1 instanceof boolean[] && array2 instanceof boolean[]) {\n            return Arrays.equals((boolean[]) array1, (boolean[]) array2);\n        }\n        return false;\n    }\n\n    private static boolean areObjectArraysEqual(Object array1, Object array2) {\n        return Arrays.deepEquals((Object[]) array1, (Object[]) array2);\n    }\n\n    private static boolean isArray(Object obj) {\n        return obj != null && obj.getClass().isArray();\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}