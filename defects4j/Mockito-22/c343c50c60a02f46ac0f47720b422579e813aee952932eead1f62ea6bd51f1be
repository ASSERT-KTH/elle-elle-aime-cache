{
    "generation": "    public static boolean areEqual(Object o1, Object o2) {\n        if (o1 == null || o2 == null) {\n            return o1 == null && o2 == null;\n        } else if (isPrimitiveArray(o1)) {\n            return isPrimitiveArray(o2) && arePrimitiveArraysEqual(o1, o2);\n        } else if (isArray(o1)) {\n            return isArray(o2) && areArraysEqual(o1, o2);\n        } else {\n            return o1.equals(o2);\n        }\n    }\n\n    private static boolean isArray(Object o) {\n        return o.getClass().isArray();\n    }\n\n    private static boolean isPrimitiveArray(Object o) {\n        return o.getClass().getComponentType().isPrimitive();\n    }\n\n    private static boolean arePrimitiveArraysEqual(Object arr1, Object arr2) {\n        if (arr1.getClass() != arr2.getClass()) {\n            return false;\n        }\n\n        int length1 = java.lang.reflect.Array.getLength(arr1);\n        int length2 = java.lang.reflect.Array.getLength(arr2);\n\n        if (length1 != length2) {\n            return false;\n        }\n\n        for (int i = 0; i < length1; i++) {\n            if (!java.lang.reflect.Array.get(arr1, i).equals(java.lang.reflect.Array.get(arr2, i))) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private static boolean areArraysEqual(Object arr1, Object arr2) {\n        if (arr1.getClass() != arr2.getClass()) {\n            return false;\n        }\n\n        Object[] arr1Obj = (Object[]) arr1;\n        Object[] arr2Obj = (Object[]) arr2;\n\n        if (arr1Obj.length != arr2Obj.length) {\n            return false;\n        }\n\n        for (int i = 0; i < arr1Obj.length; i++) {\n            if (!areEqual(arr1Obj[i], arr2Obj[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}