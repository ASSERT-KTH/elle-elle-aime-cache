{
    "generation": "/**\n * Creates a time period for the week in which the specified date/time\n * falls, calculated relative to the specified time zone and locale.\n *\n * @param time  the date/time (<code>null</code> not permitted).\n * @param zone  the time zone (<code>null</code> not permitted).\n * @param locale  the locale (<code>null</code> not permitted).\n *\n * @since 1.0.7\n */\npublic Week(Date time, TimeZone zone, Locale locale) {\n    if (time == null) {\n        throw new IllegalArgumentException(\"Null 'time' argument.\");\n    }\n    if (zone == null) {\n        throw new IllegalArgumentException(\"Null 'zone' argument.\");\n    }\n    if (locale == null) {\n        throw new IllegalArgumentException(\"Null 'locale' argument.\");\n    }\n\n    // Use the specified time zone and locale to get the first day of the week\n    GregorianCalendar cal = new GregorianCalendar(zone, locale);\n    cal.setTime(time);\n\n    // Set the first day of the week and minimal days in first week\n    cal.setFirstDayOfWeek(cal.getFirstDayOfWeek());\n    cal.setMinimalDaysInFirstWeek(cal.getMinimalDaysInFirstWeek());\n\n    // Set the time to the first day of the week\n    cal.set(Calendar.DAY_OF_WEEK, cal.getFirstDayOfWeek());\n    cal.set(Calendar.HOUR_OF_DAY, 0);\n    cal.set(Calendar.MINUTE, 0);\n    cal.set(Calendar.SECOND, 0);\n    cal.set(Calendar.MILLISECOND, 0);\n\n    // Calculate the week number\n    int week = cal.getWeekYear() * 100 + cal.get(Calendar.WEEK_OF_YEAR);\n\n    // Store the start and end times of the week\n    this.start = cal.getTime();\n    cal.add(Calendar.DAY_OF_YEAR, 7);\n    this.end = cal.getTime();\n    this.week = week;\n}\n\n/**\n * Creates a time period for the week in which the specified date/time\n * falls, calculated relative to the specified time zone.\n *\n * @param time  the date/time (<code>null</code> not permitted).\n * @param zone  the time zone (<code>null</code> not permitted).\n *\n * @deprecated As of 1.0.7, use {@link #Week(Date, TimeZone, Locale)}.\n */\npublic Week(Date time, TimeZone zone) {\n    this(time, zone, Locale.getDefault());\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}