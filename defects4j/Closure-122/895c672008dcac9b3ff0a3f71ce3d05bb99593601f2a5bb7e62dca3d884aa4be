{
    "generation": "  /**\n   * Check to see if the given block comment looks like it should be JSDoc.\n   */\n  private void handleBlockComment(Comment comment) {\n    String value = comment.getValue();\n    if (value.indexOf(\"@\") != -1) {\n      // Look for @[letter] and make sure it's not preceded by '/'.\n      int i = value.indexOf(\"@\");\n      while (i != -1) {\n        if (i + 1 < value.length() \n            && Character.isLetter(value.charAt(i + 1))\n            && (i == 0 || value.charAt(i - 1) != '/')) {\n          errorReporter.warning(\n              SUSPICIOUS_COMMENT_WARNING,\n              sourceName,\n              comment.getLineno(), \"\", 0);\n          break;\n        }\n        i = value.indexOf(\"@\", i + 1);\n      }\n    }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}