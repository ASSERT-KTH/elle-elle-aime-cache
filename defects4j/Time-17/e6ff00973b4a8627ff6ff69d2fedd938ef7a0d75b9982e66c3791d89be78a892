{
    "generation": "    public long adjustOffset(long instant, boolean earlierOrLater) {\n        // evaluate 3 hours before and after to work out if anything is happening\n        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);\n        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);\n        if (instantBefore == instantAfter) {\n            return instant;  // not an overlap (less than is a gap, equal is normal case)\n        }\n\n        // work out range of instants that have duplicate local times\n        long local = convertUTCToLocal(instant);\n        long localBefore = convertUTCToLocal(instant + (earlierOrLater ? -1 : 1));\n        long localAfter = convertUTCToLocal(instant + (earlierOrLater ? 1 : -1));\n\n        if (local == localBefore) {\n            return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);\n        }\n\n        if (local == localAfter) {\n            return convertLocalToUTC(local, false, earlierOrLater ? instantAfter : instantBefore);\n        }\n\n        // If no overlap detected, return the original instant\n        return instant;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}