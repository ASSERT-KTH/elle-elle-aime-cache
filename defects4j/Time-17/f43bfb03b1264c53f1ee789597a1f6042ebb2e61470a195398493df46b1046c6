{
    "generation": "/**\n * Adjusts the offset to be the earlier or later one during an overlap.\n *\n * @param instant the instant to adjust\n * @param earlierOrLater false for earlier, true for later\n * @return the adjusted instant millis\n */\npublic long adjustOffset(long instant, boolean earlierOrLater) {\n    // Calculate local times 3 hours before and after the given instant\n    long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    \n    // If local times before and after are the same, no overlap\n    if (instantBefore == instantAfter) {\n        return instant;\n    }\n    \n    // Determine the local time at the given instant\n    long local = convertUTCToLocal(instant);\n    \n    // Adjust the local time to UTC using the appropriate offset\n    // If earlierOrLater is true, use the offset after the instant\n    // If earlierOrLater is false, use the offset before the instant\n    long adjustedInstant = convertLocalToUTC(local, earlierOrLater);\n    \n    return adjustedInstant;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}