{
    "generation": "    /**\n     * Adjusts the offset to be the earlier or later one during an overlap.\n     * \n     * @param instant  the instant to adjust\n     * @param earlierOrLater  false for earlier, true for later\n     * @return the adjusted instant millis\n     */\n    public long adjustOffset(long instant, boolean earlierOrLater) {\n        // a bit messy, but will work in all non-pathological cases\n        \n        // evaluate 3 hours before and after to work out if anything is happening\n        long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);\n        long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);\n        if (instantBefore == instantAfter) {\n            return instant;  // not an overlap (less than is a gap, equal is normal case)\n        }\n        \n        // work out range of instants that have duplicate local times\n        long local = convertUTCToLocal(instant);\n        long overlapStart = findOverlapStart(instant);\n        long overlapEnd = findOverlapEnd(instant);\n        \n        if (instant >= overlapStart && instant <= overlapEnd) {\n            // We are in an overlap period\n            if (earlierOrLater) {\n                return overlapStart; // later offset\n            } else {\n                return overlapEnd; // earlier offset\n            }\n        }\n        \n        // If not in an overlap period, return the original instant\n        return instant;\n    }\n    \n    private long findOverlapStart(long instant) {\n        // Find the start of the overlap period\n        long start = instant;\n        while (convertUTCToLocal(start) == convertUTCToLocal(start + 1)) {\n            start--;\n        }\n        return start + 1;\n    }\n    \n    private long findOverlapEnd(long instant) {\n        // Find the end of the overlap period\n        long end = instant;\n        while (convertUTCToLocal(end) == convertUTCToLocal(end - 1)) {\n            end++;\n        }\n        return end - 1;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}