{
    "generation": "public long adjustOffset(long instant, boolean earlierOrLater) {\n    // a bit messy, but will work in all non-pathological cases\n    \n    // evaluate 3 hours before and after to work out if anything is happening\n    long instantBefore = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    long instantAfter = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);\n    if (instantBefore == instantAfter) {\n        return instant;  // not an overlap (less than is a gap, equal is normal case)\n    }\n\n    // work out range of instants that have duplicate local times\n    long local = convertUTCToLocal(instant);\n    long adjustEarlier = convertLocalToUTC(local, false, instantAfter);\n    long adjustLater = convertLocalToUTC(local, false, instantBefore);\n    \n    if (earlierOrLater) {\n        // if requesting later offset, pick the larger/more recent instant\n        return adjustLater > adjustEarlier ? adjustLater : adjustEarlier;\n    } else {\n        // if requesting earlier offset, pick the smaller/earlier instant\n        return adjustEarlier < adjustLater ? adjustEarlier : adjustLater;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}