{
    "generation": "/** Multiply this by a single digit x.\n * @param x multiplicand\n * @return product of this and x, handling overflow cases for large integer x\n */\npublic Dfp multiply(final int x) {\n    if (x == 0 || isZero()) {\n        return new Dfp(this.field, 0);\n    } else if (x == 1) {\n        return this;\n    } else if (x == -1) {\n        return this.negate();\n    } else if (Math.abs(x) > this.field.getRadix() - 1) { // potential overflow\n        Dfp result = multiplyFast(Math.abs(x));\n        return (x < 0) ^ this.isNegative()? result.negate() : result;\n    } else {\n        return multiplyFast(x);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}