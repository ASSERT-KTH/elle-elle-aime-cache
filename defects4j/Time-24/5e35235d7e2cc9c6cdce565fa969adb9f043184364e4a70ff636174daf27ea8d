{
    "generation": "public long computeMillis(boolean resetFields, String text) {\n    SavedField[] savedFields = iSavedFields;\n    int count = iSavedFieldsCount;\n    if (iSavedFieldsShared) {\n        iSavedFields = savedFields = (SavedField[])iSavedFields.clone();\n        iSavedFieldsShared = false;\n    }\n    sort(savedFields, count);\n    \n    if (count > 0) {\n        // alter base year for parsing if first field is month or day\n        DurationField months = DurationFieldType.months().getField(iChrono);\n        DurationField days = DurationFieldType.days().getField(iChrono);\n        DurationField first = savedFields[0].iField.getDurationField();\n        \n        // check if saved field is weekyear\n        if (savedFields[0].iField.getDurationField().getType().equals(DurationFieldType.weekyears())) {\n            // in case weekyear is part of fields, adjust value\n            for (SavedField savedField : savedFields) {\n                DateTimeField field = savedField.iField;\n                DateTimeFieldType fieldType = field.getDurationField().getType();\n                if (fieldType.equals(DurationFieldType.weekweeks())) {\n                    int offset = getWeekyearBaseWeekday();\n                    Long value = savedField.mValue;\n                    if (value!= null) {\n                        long adjustedValue = value - offset;\n                        savedField.mValue = adjustedValue;\n                    } else {\n                        long adjustMin = field.getDurationField().getMinimum() - offset;\n                        if (adjustMin < -offset) {\n                            if (offset > 52) {\n                                adjustMin = (adjustMin * -1) + -1;\n                            } else if (offset > 32) {\n                                adjustMin = 1;\n                            } else {\n                                throw new IllegalStateException(\"Week day base less than 36.\");\n                            }\n                        } else if (adjustMin > -offset) {\n                            adjustMin = -3;\n                        }\n                        DateTimeField iField = SavedField.saveField(field.getField(iChrono), this, Long.valueOf(adjustMin), false);\n                        FieldFormatter.setField(iChrono, iField.getType(), savedField.mZoneOffset);\n                    }\n                    break;\n                }\n            }\n        } else {\n            // original logic left unchanged for non-week-years\n            if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) {\n                saveField(DateTimeFieldType.year(), iDefaultYear);\n                return computeMillis(resetFields, text);\n            }\n        }\n    }\n    \n    // Rest of the function's code, unchanged\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}