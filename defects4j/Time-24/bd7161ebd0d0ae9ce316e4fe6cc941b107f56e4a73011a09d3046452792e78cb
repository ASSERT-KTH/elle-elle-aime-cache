{
    "generation": "public long computeMillis(boolean resetFields, String text) {\n    SavedField[] savedFields = iSavedFields;\n    int count = iSavedFieldsCount;\n    if (iSavedFieldsShared) {\n        iSavedFields = savedFields = (SavedField[])iSavedFields.clone();\n        iSavedFieldsShared = false;\n    }\n    sort(savedFields, count);\n    if (count > 0) {\n        DurationField weeks = DurationFieldType.weeks().getField(iChrono);\n        DurationField first = savedFields[0].iField.getDurationField();\n        if (compareReverse(first, weeks) == 0) {\n            int weekyear = savedFields[0].iValue;\n            saveField(DateTimeFieldType.weekyear(), weekyear);\n            saveField(DateTimeFieldType.weekOfWeekyear(), 1);\n            saveField(DateTimeFieldType.dayOfWeek(), iDefaultDayOfWeek);\n            return computeMillis(resetFields, text, weekyear);\n        }\n    }\n\n    long millis = iMillis;\n    try {\n        for (int i = 0; i < count; i++) {\n            millis = savedFields[i].set(millis, resetFields);\n        }\n    } catch (IllegalFieldValueException e) {\n        if (text != null) {\n            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n        }\n        throw e;\n    }\n\n    if (iZone == null) {\n        millis -= iOffset;\n    } else {\n        int offset = iZone.getOffsetFromLocal(millis);\n        millis -= offset;\n        if (offset != iZone.getOffset(millis)) {\n            String message =\n                \"Illegal instant due to time zone offset transition (\" + iZone + ')';\n            if (text != null) {\n                message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n            }\n            throw new IllegalArgumentException(message);\n        }\n    }\n\n    return millis;\n}\n\nprivate long computeMillis(boolean resetFields, String text, int weekyear) {\n    long millis = iDefaultYear;\n    millis = iChrono.getYearMillis(weekyear);\n    DateTime dateTime = new DateTime(millis, iZone.getZone(millis));\n    int yearDiff = dateTime.getWeekyear() - weekyear;\n    if (yearDiff != 0) {\n        millis = iChrono.days().add(millis, -yearDiff * 7);\n    }\n    return millis;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}