{
    "generation": "    public long computeMillis(boolean resetFields, String text) {\n        SavedField[] savedFields = iSavedFields;\n        int count = iSavedFieldsCount;\n        if (iSavedFieldsShared) {\n            iSavedFields = savedFields = (SavedField[])iSavedFields.clone();\n            iSavedFieldsShared = false;\n        }\n        sort(savedFields, count);\n        if (count > 0) {\n            // adjust base year for parsing if first field relates to week-based year\n            DateTimeField firstField = savedFields[0].iField;\n            if (firstField.getType() == DateTimeFieldType.weekyear()) {\n                saveField(DateTimeFieldType.weekyear(), iDefaultYear);\n                return computeMillis(resetFields, text);\n            }\n        }\n\n        long millis = iMillis;\n        try {\n            for (int i = 0; i < count; i++) {\n                millis = savedFields[i].set(millis, resetFields);\n            }\n        } catch (IllegalFieldValueException e) {\n            if (text != null) {\n                e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n            }\n            throw e;\n        }\n\n        if (iZone == null) {\n            millis -= iOffset;\n        } else {\n            int offset = iZone.getOffsetFromLocal(millis);\n            millis -= offset;\n            if (offset != iZone.getOffset(millis)) {\n                String message =\n                    \"Illegal instant due to time zone offset transition (\" + iZone + ')';\n                if (text != null) {\n                    message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n                }\n                throw new IllegalArgumentException(message);\n            }\n        }\n\n        // Handle weekyear edge cases by checking for invalid transitions\n        if (count > 0 && savedFields[0].iField.getType() == DateTimeFieldType.weekyear()) {\n            Chronology chrono = iChrono;\n            int calculatedWeekYear = savedFields[0].iValue;\n            int week = chrono.weekOfWeekyear().get(millis);\n            if (week == 1 && calculatedWeekYear != chrono.weekyear().get(millis)) {\n                millis = chrono.weekyears().add(millis, calculatedWeekYear - chrono.weekyear().get(millis));\n            }\n        }\n\n        return millis;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}