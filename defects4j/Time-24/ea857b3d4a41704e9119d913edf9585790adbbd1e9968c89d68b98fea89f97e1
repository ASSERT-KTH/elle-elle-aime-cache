{
    "generation": "public long computeMillis(boolean resetFields, String text) {\n    SavedField[] savedFields = iSavedFields;\n    int count = iSavedFieldsCount;\n    if (iSavedFieldsShared) {\n        iSavedFields = savedFields = (SavedField[]) iSavedFields.clone();\n        iSavedFieldsShared = false;\n    }\n    sort(savedFields, count);\n    if (count > 0) {\n        // alter base year for parsing if first field is month or day\n        DurationField months = DurationFieldType.months().getField(iChrono);\n        DurationField days = DurationFieldType.days().getField(iChrono);\n        DurationField first = savedFields[0].iField.getDurationField();\n        if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) {\n            saveField(DateTimeFieldType.year(), iDefaultYear);\n            return computeMillis(resetFields, text);\n        }\n    }\n\n    long millis = iMillis;\n    try {\n        // Handle the special case of setting the week of the year after the year and month\n        boolean hasYear = false;\n        boolean hasMonth = false;\n        boolean hasWeekOfWeekyear = false;\n        int yearIndex = -1;\n        int monthIndex = -1;\n        int weekOfWeekyearIndex = -1;\n\n        for (int i = 0; i < count; i++) {\n            DateTimeFieldType fieldType = savedFields[i].iField.getType();\n            if (fieldType == DateTimeFieldType.year() || fieldType == DateTimeFieldType.weekyear()) {\n                hasYear = true;\n                yearIndex = i;\n            } else if (fieldType == DateTimeFieldType.monthOfYear()) {\n                hasMonth = true;\n                monthIndex = i;\n            } else if (fieldType == DateTimeFieldType.weekOfWeekyear()) {\n                hasWeekOfWeekyear = true;\n                weekOfWeekyearIndex = i;\n            }\n        }\n\n        if (hasYear && hasMonth && hasWeekOfWeekyear) {\n            // Set the year and month first\n            millis = savedFields[yearIndex].set(millis, resetFields);\n            millis = savedFields[monthIndex].set(millis, resetFields);\n            // Then set the week of the year\n            millis = savedFields[weekOfWeekyearIndex].set(millis, resetFields);\n        } else {\n            // Otherwise, set fields in order\n            for (int i = 0; i < count; i++) {\n                millis = savedFields[i].set(millis, resetFields);\n            }\n        }\n    } catch (IllegalFieldValueException e) {\n        if (text != null) {\n            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n        }\n        throw e;\n    }\n    \n    if (iZone == null) {\n        millis -= iOffset;\n    } else {\n        int offset = iZone.getOffsetFromLocal(millis);\n        millis -= offset;\n        if (offset != iZone.getOffset(millis)) {\n            String message =\n                \"Illegal instant due to time zone offset transition (\" + iZone + ')';\n            if (text != null) {\n                message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n            }\n            throw new IllegalArgumentException(message);\n        }\n    }\n    \n    return millis;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}