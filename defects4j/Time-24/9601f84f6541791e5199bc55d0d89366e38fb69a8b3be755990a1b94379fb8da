{
    "generation": "public long computeMillis(boolean resetFields, String text) {\n    SavedField[] savedFields = iSavedFields;\n    int count = iSavedFieldsCount;\n    if (iSavedFieldsShared) {\n        iSavedFields = savedFields = (SavedField[])iSavedFields.clone();\n        iSavedFieldsShared = false;\n    }\n    sort(savedFields, count);\n    if (count > 0) {\n        // alter base year for parsing if first field is month or day or week of weekyear\n        DurationField months = DurationFieldType.months().getField(iChrono);\n        DurationField days = DurationFieldType.days().getField(iChrono);\n        DurationField weeks = DurationFieldType.weeks().getField(iChrono);\n        DurationField first = savedFields[0].iField.getDurationField();\n        if (compareReverse(first, months) >= 0 && compareReverse(first, weeks) <= 0 && compareReverse(first, days) <= 0) {\n            int weekOfWeekyear = savedFields[0].iValue;\n            int defaultYear = iDefaultYear;\n            if (weekOfWeekyear >= 52 && JavaDateTime.weeksInWidthOptimalMaximum(defaultYear) == 53) {\n                defaultYear++;\n            } else if (weekOfWeekyear <= 1 && JavaDateTime.weeksInWidthOptimalMaximum(defaultYear - 1) == 53) {\n                defaultYear--;\n            }\n            saveField(DateTimeFieldType.year(), defaultYear);\n            return computeMillis(resetFields, text);\n        }\n    }\n    // rest of the code\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}