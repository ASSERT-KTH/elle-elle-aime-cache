{
    "generation": "public long computeMillis(boolean resetFields, String text) {\n    SavedField[] savedFields = iSavedFields;\n    int count = iSavedFieldsCount;\n    if (iSavedFieldsShared) {\n        iSavedFields = savedFields = (SavedField[])iSavedFields.clone();\n        iSavedFieldsShared = false;\n    }\n    long millis = iMillis;\n    try {\n        int year = -1, month = -1, week = -1;\n        for (int i = 0; i < count; i++) {\n            SavedField savedField = savedFields[i];\n            DateTimeField field = savedField.iField;\n            if (field.getType() == DateTimeFieldType.year()) {\n                year = savedField.iValue;\n            } else if (field.getType() == DateTimeFieldType.monthOfYear()) {\n                month = savedField.iValue;\n            } else if (field.getType() == DateTimeFieldType.weekOfWeekyear()) {\n                week = savedField.iValue;\n            }\n        }\n        if (year != -1 && month != -1 && week != -1) {\n            DateTime date = new DateTime(year, 1, 1, 0, 0, 0, 0, iChrono);\n            millis = date.plusWeeks(week - 1).plusMonths(month - 1).getMillis();\n        } else {\n            for (int i = 0; i < count; i++) {\n                millis = savedFields[i].set(millis, resetFields);\n            }\n        }\n    } catch (IllegalFieldValueException e) {\n        if (text != null) {\n            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n        }\n        throw e;\n    }\n\n    // Rest of the function remains the same\n    ...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}