{
    "generation": "public long computeMillis(boolean resetFields, String text) {\n    SavedField[] savedFields = iSavedFields;\n    int count = iSavedFieldsCount;\n    if (iSavedFieldsShared) {\n        iSavedFields = savedFields = (SavedField[])iSavedFields.clone();\n        iSavedFieldsShared = false;\n    }\n    sort(savedFields, count);\n    if (count > 0) {\n        // alter base year for parsing if first field is month or day\n        DurationField months = DurationFieldType.months().getField(iChrono);\n        DurationField days = DurationFieldType.days().getField(iChrono);\n        DurationField first = savedFields[0].iField.getDurationField();\n        if (compareReverse(first, months) >= 0 && compareReverse(first, days) <= 0) {\n            saveField(DateTimeFieldType.year(), iDefaultYear);\n            return computeMillis(resetFields, text);\n        }\n\n        // Handle week-based year\n        boolean hasWeekyear = false;\n        boolean hasMonthOfYear = false;\n        boolean hasWeekOfWeekyear = false;\n        for (int i = 0; i < count; i++) {\n            DateTimeFieldType type = savedFields[i].iField.getType();\n            if (type == DateTimeFieldType.weekyear()) {\n                hasWeekyear = true;\n            } else if (type == DateTimeFieldType.monthOfYear()) {\n                hasMonthOfYear = true;\n            } else if (type == DateTimeFieldType.weekOfWeekyear()) {\n                hasWeekOfWeekyear = true;\n            }\n        }\n\n        if (hasWeekyear && hasMonthOfYear && hasWeekOfWeekyear) {\n            // Calculate the correct year based on weekyear, month, and week\n            int weekyear = getSavedField(DateTimeFieldType.weekyear()).getValue();\n            int monthOfYear = getSavedField(DateTimeFieldType.monthOfYear()).getValue();\n            int weekOfWeekyear = getSavedField(DateTimeFieldType.weekOfWeekyear()).getValue();\n\n            // Adjust year if necessary\n            if (monthOfYear == 1 && weekOfWeekyear >= 52) {\n                weekyear--;\n            } else if (monthOfYear == 12 && weekOfWeekyear == 1) {\n                weekyear++;\n            }\n\n            // Clear existing year and set weekyear\n            clearSavedField(DateTimeFieldType.year());\n            saveField(DateTimeFieldType.year(), weekyear);\n\n            // Recalculate millis with adjusted year\n            return computeMillis(resetFields, text);\n        }\n    }\n\n    long millis = iMillis;\n    try {\n        for (int i = 0; i < count; i++) {\n            millis = savedFields[i].set(millis, resetFields);\n        }\n    } catch (IllegalFieldValueException e) {\n        if (text != null) {\n            e.prependMessage(\"Cannot parse \\\"\" + text + '\"');\n        }\n        throw e;\n    }\n    \n    if (iZone == null) {\n        millis -= iOffset;\n    } else {\n        int offset = iZone.getOffsetFromLocal(millis);\n        millis -= offset;\n        if (offset != iZone.getOffset(millis)) {\n            String message =\n                \"Illegal instant due to time zone offset transition (\" + iZone + ')';\n            if (text != null) {\n                message = \"Cannot parse \\\"\" + text + \"\\\": \" + message;\n            }\n            throw new IllegalArgumentException(message);\n        }\n    }\n    \n    return millis;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}