{
    "generation": "  public void visit(NodeTraversal t, Node n, Node parent) {\n    //...\n\n    case Token.AND:\n    case Token.HOOK:\n    case Token.OBJECTLIT:\n    case Token.OR:\n      if (n.getJSType()!= null) { \n        ensureTyped(t, n);\n      } else {\n        if ((n.getType() == Token.OBJECTLIT)\n            && (parent.getJSType() instanceof EnumType)) {\n          ensureTyped(t, n, parent.getJSType());\n        } else if (parent.getJSType()!= null \n            && (n.getType() == Token.OBJECTLIT)) {\n          ensureTyped(t, n, parent.getJSType());\n        } else {\n          ensureTyped(t, n);\n        }\n      }\n      if (n.getType() == Token.OBJECTLIT) {\n        for (Node key : n.children()) {\n          visitObjLitKey(t, key, n);\n        }\n      }\n      break;\n\n    //...\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}