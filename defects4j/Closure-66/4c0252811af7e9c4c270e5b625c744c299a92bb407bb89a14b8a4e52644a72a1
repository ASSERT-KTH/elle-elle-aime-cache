{
    "generation": "  case Token.OBJECTLIT:\n    if (n.getParent().getJSType() instanceof EnumType) {\n      ensureTyped(t, n, n.getParent().getJSType());\n    } else {\n      ensureTyped(t, n);\n    }\n    for (Node key : n.children()) {\n      visitObjLitKey(t, key, n);\n    }\n    if (isEnumKeyConstant(n)) {\n      // enums should always be typed; if their children are enums,\n      // it cascades here\n      // we want to mark that those types came from this cascading type\n      t.getInput().getCompiler(). CascadeTypeOnEnumLiteralOnAllNodes();\n      typeable = true;\n      break;\n    }\n  //...",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}