{
    "generation": "private void removeUnreferencedFunctionArgs(Scope fnScope) {\n    Node function = fnScope.getRootNode();\n    Preconditions.checkState(function.isFunction());\n\n    if (NodeUtil.isGetOrSetKey(function.getParent())) {\n        return;\n    }\n\n    if (removeGlobal) {\n        Node argList = getFunctionArgList(function);\n        boolean modifyCallers = modifyCallSites\n                && callSiteOptimizer.canModifyCallers(function);\n\n        if (!modifyCallers) {\n            Node current = argList.getFirstChild();\n            while (current != null) {\n                Node next = current.getNext();\n                Var var = fnScope.getVar(current.getString());\n                if (!referenced.contains(var)) {\n                    argList.removeChild(current);\n                    compiler.reportCodeChange();\n                }\n                current = next;\n            }\n        } else {\n            callSiteOptimizer.optimize(fnScope, referenced);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}