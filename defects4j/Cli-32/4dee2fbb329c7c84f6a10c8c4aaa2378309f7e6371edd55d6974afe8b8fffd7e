{
    "generation": "    /**\n     * Finds the next text wrap position after <code>startPos</code> for the\n     * text in <code>text</code> with the column width <code>width</code>.\n     * The wrap point is the last position before startPos+width having a \n     * whitespace character (space, \\n, \\r). If there is no whitespace character\n     * before startPos+width, it will return startPos+width.\n     *\n     * @param text The text being searched for the wrap position\n     * @param width width of the wrapped text\n     * @param startPos position from which to start the lookup whitespace\n     * character\n     * @return postion on which the text must be wrapped or -1 if the wrap\n     * position is at the end of the text\n     */\n    protected int findWrapPos(String text, int width, int startPos)\n    {\n        int pos;\n\n        if (startPos + width >= text.length())\n        {\n            return -1;\n        }\n\n        // the line ends before the max wrap pos or a new line char found\n        pos = startPos + width;\n        if (pos >= text.length()) {\n            return -1;\n        }\n\n        int spacePos = text.lastIndexOf(' ', pos);\n        int tabPos = text.lastIndexOf('\\t', pos);\n        int newLinePos = text.lastIndexOf('\\n', pos);\n        int returnPos = text.lastIndexOf('\\r', pos);\n\n\n        if (spacePos > startPos) {\n            pos = spacePos;\n        }\n        if (tabPos > startPos && tabPos > pos) {\n            pos = tabPos;\n        }\n        if (newLinePos > startPos && newLinePos > pos) {\n            pos = newLinePos;\n        }\n        if (returnPos > startPos && returnPos > pos) {\n            pos = returnPos;\n        }\n\n\n        if (pos > startPos)\n        {\n            return pos + 1;\n        }\n\n        pos = startPos + width;\n        \n        return pos;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}