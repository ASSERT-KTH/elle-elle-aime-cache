{
    "generation": "/**\n * Finds the next text wrap position after <code>startPos</code> for the\n * text in <code>text</code> with the column width <code>width</code>.\n * The wrap point is the last position before startPos+width having a \n * whitespace character (space, \\n, \\r). If there is no whitespace character\n * before startPos+width, it will return the position right after the last whole word.\n *\n * @param text The text being searched for the wrap position\n * @param width width of the wrapped text\n * @param startPos position from which to start the lookup whitespace\n * character\n * @return postion on which the text must be wrapped or -1 if the wrap\n * position is at the end of the text\n */\nprotected int findWrapPos(String text, int width, int startPos)\n{\n    int pos;\n    \n    // the line ends before the max wrap pos or a new line char found\n    if (((pos = text.indexOf('\\n', startPos))!= -1 && pos <= startPos + width)\n            || ((pos = text.indexOf('\\t', startPos))!= -1 && pos <= startPos + width))\n    {\n        return pos;\n    }\n    else if (startPos + width >= text.length())\n    {\n        return -1;\n    }\n\n    // look for the last whitespace character before startPos+width\n    pos = startPos + width;\n\n    char c;\n\n    // Check if we are in the middle of a word at startPos+width\n    if ((c = text.charAt(pos))!= ' ' && c!= '\\n' && c!= '\\r' && c!= '\\t') {\n        // Move backwards to find the last whole word\n        while ((pos > startPos) && ((c = text.charAt(pos - 1))!= ' ' \n               && c!= '\\n' && c!= '\\r' && c!= '\\t')) {\n            --pos;\n        }\n        // If we found a whitespace, return it, otherwise return the width\n        return (pos > startPos)? pos : startPos + width;\n    } else {\n        // If we are at a whitespace at startPos+width, move backwards to find the last non-whitespace\n        while ((pos > startPos) && ((c = text.charAt(pos - 1)) == ' ' \n               || c == '\\n' || c == '\\r' || c == '\\t')) {\n            --pos;\n        }\n        return pos;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}