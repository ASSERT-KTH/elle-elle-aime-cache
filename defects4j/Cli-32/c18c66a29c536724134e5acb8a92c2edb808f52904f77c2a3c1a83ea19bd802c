{
    "generation": "protected int findWrapPos(String text, int width, int startPos) {\n    int pos;\n\n    // Check for newline or tab characters within the width\n    int newlinePos = text.indexOf('\\n', startPos);\n    int tabPos = text.indexOf('\\t', startPos);\n\n    // Determine the position of the first newline or tab within the width\n    if ((newlinePos != -1 && newlinePos <= startPos + width) ||\n        (tabPos != -1 && tabPos <= startPos + width)) {\n        // Return the position after the newline or tab\n        return Math.min(\n            newlinePos != -1 && newlinePos <= startPos + width ? newlinePos + 1 : Integer.MAX_VALUE,\n            tabPos != -1 && tabPos <= startPos + width ? tabPos + 1 : Integer.MAX_VALUE\n        );\n    } else if (startPos + width >= text.length()) {\n        // If the end of the text is reached, return -1\n        return -1;\n    }\n\n    // Look for the last whitespace character before startPos + width\n    pos = Math.min(startPos + width, text.length() - 1);\n\n    while (pos >= startPos) {\n        char c = text.charAt(pos);\n        if (c == ' ' || c == '\\n' || c == '\\r') {\n            // If a whitespace is found, return the position\n            return pos;\n        }\n        pos--;\n    }\n\n    // If no whitespace is found, wrap at startPos + width\n    pos = startPos + width;\n    if (pos >= text.length()) {\n        return -1;\n    }\n\n    // Skip over non-whitespace characters after startPos + width\n    while (pos < text.length()) {\n        char c = text.charAt(pos);\n        if (c == ' ' || c == '\\n' || c == '\\r') {\n            break;\n        }\n        pos++;\n    }\n\n    return pos == text.length() ? -1 : pos;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}