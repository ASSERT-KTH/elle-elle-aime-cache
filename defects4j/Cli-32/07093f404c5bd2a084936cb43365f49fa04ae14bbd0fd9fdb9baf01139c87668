{
    "generation": "/**\n * Finds the next text wrap position after <code>startPos</code> for the\n * text in <code>text</code> with the column width <code>width</code>.\n * The wrap point is the last position before startPos+width having a \n * whitespace character (space, \\n, \\r). If there is no whitespace character\n * before startPos+width, it will return startPos+width.\n *\n * @param text The text being searched for the wrap position\n * @param width width of the wrapped text\n * @param startPos position from which to start the lookup whitespace\n * character\n * @return position on which the text must be wrapped or -1 if the wrap\n * position is at the end of the text\n */\nprotected int findWrapPos(String text, int width, int startPos)\n{\n    int endPos = startPos + width;\n    \n    // Check if we're at or past the end of the text\n    if (endPos >= text.length()) {\n        return -1;\n    }\n\n    // Look for newline or tab characters\n    int pos;\n    if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= endPos)\n            || ((pos = text.indexOf('\\t', startPos)) != -1 && pos <= endPos)) {\n        return pos + 1;\n    }\n\n    // Look for the last whitespace character before startPos+width\n    pos = endPos;\n    while (pos > startPos && !Character.isWhitespace(text.charAt(pos - 1))) {\n        pos--;\n    }\n\n    // If we found a whitespace character, return the position after it\n    if (pos > startPos) {\n        return pos;\n    }\n\n    // If no whitespace found, return the end position\n    return endPos;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}