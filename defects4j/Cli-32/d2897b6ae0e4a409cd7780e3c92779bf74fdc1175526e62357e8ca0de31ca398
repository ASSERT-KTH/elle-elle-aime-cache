{
    "generation": "    /**\n     * Finds the next text wrap position after <code>startPos</code> for the\n     * text in <code>text</code> with the column width <code>width</code>.\n     * The wrap point is the last position before startPos+width having a \n     * whitespace character (space, \\n, \\r). If there is no whitespace character\n     * before startPos+width, it will return startPos+width.\n     *\n     * @param text The text being searched for the wrap position\n     * @param width width of the wrapped text\n     * @param startPos position from which to start the lookup whitespace\n     * character\n     * @return postion on which the text must be wrapped or -1 if the wrap\n     * position is at the end of the text\n     */\n    protected int findWrapPos(String text, int width, int startPos)\n    {\n        int maxPos = startPos + width;\n\n        // the line ends before the max wrap pos or a new line char found\n        int pos = text.indexOf('\\n', startPos);\n        if (pos >= 0 && pos < maxPos)\n        {\n            return pos + 1;\n        }\n        pos = text.indexOf('\\t', startPos);\n        if (pos >= 0 && pos < maxPos)\n        {\n            return pos + 1;\n        }\n        else if (maxPos >= text.length())\n        {\n            return -1;\n        }\n\n\n        // look for the last whitespace character before startPos+width\n        pos = maxPos;\n\n        // if we didn't start at the beginning of text, then we must use the\n        // beginning of text as our base\n        if (maxPos > text.length() - 1)\n            pos = text.length();\n        while ((pos >= startPos) && ((c = text.charAt(pos-1))!= ' ') && (c!= '\\n') && (c!= '\\r'))\n            --pos;\n\n        return pos;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}