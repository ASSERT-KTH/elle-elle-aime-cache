{
    "generation": "protected int findWrapPos(String text, int width, int startPos)\n{\n    int pos;\n\n    // the line ends before the max wrap pos or a new line char found\n    if (((pos = text.indexOf('\\n', startPos)) != -1 && pos <= startPos + width)\n            || ((pos = text.indexOf('\\r', startPos)) != -1 && pos <= startPos + width))\n    {\n        return pos + 1;\n    }\n    else if (startPos + width >= text.length())\n    {\n        return -1;\n    }\n\n    // look for the last whitespace character before startPos+width\n    pos = startPos + width;\n\n    char c;\n\n    // This should be `>= startPos` to find the last possible whitespace within bounds\n    while ((pos >= startPos) && ((c = text.charAt(pos)) != ' ')\n            && (c != '\\n') && (c != '\\r'))\n    {\n        --pos;\n    }\n\n    // if we found it - just return\n    if (pos >= startPos)\n    {\n        return pos;\n    }\n\n    // if we didn't find one, simply chop at startPos+width\n    // Fixed edge case for longer words\n    pos = startPos + width;\n    \n    return pos == text.length() ? -1 : pos;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}