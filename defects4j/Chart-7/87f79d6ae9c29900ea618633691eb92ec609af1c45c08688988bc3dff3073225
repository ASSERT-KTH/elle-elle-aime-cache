{
    "generation": "private void updateBounds(TimePeriod period, int index) {\n\n    long start = period.getStart().getTime();\n    long end = period.getEnd().getTime();\n    long middle = start + ((end - start) / 2);\n\n    if (this.minStartIndex >= 0) {\n        long minStart = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();\n        if (start <= minStart) {  // Here '=' is added to manage the case where start time is equal to minStart.\n            this.minStartIndex = index;\n        }\n    } else {\n        this.minStartIndex = index;\n    }\n\n    if (this.maxStartIndex >= 0) {\n        long maxStart = getDataItem(this.maxStartIndex).getPeriod()\n        .getStart().getTime();\n        if (start >= maxStart) {  // Here '=' is added to manage the case where start time is equal to maxStart.\n            this.maxStartIndex = index;\n        }\n    } else {\n        this.maxStartIndex = index;\n    }\n\n    if (this.minMiddleIndex >= 0) {\n        long minMiddle = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime()\n                        + ((getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime()\n                            - getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime()) / 2);\n        if (middle <= minMiddle) {  // Here '=' is added to manage the case where middle time is equal to minMiddle.\n            this.minMiddleIndex = index;\n        }\n    } else {\n        this.minMiddleIndex = index;\n    }\n\n    if (this.maxMiddleIndex >= 0) {\n        long maxMiddle = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime()\n                         + ((getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime()\n                             - getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime()) / 2);\n        if (middle >= maxMiddle) {  // Here '=' is added to manage the case where middle time is equal to maxMiddle.\n            this.maxMiddleIndex = index;\n        }\n    } else {\n        this.maxMiddleIndex = index;\n    }\n\n    if (this.minEndIndex >= 0) {\n        long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();\n        if (end <= minEnd) {  // Here '=' is added to manage the case where end time is equal to minEnd.\n            this.minEndIndex = index;\n        }\n    } else {\n        this.minEndIndex = index;\n    }\n\n    if (this.maxEndIndex >= 0) {\n        long maxEnd = getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();\n        if (end >= maxEnd) {  // Here '=' is added to manage the case where end time is equal to maxEnd.\n            this.maxEndIndex = index;\n        }\n    } else {\n        this.maxEndIndex = index;\n    }\n\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}