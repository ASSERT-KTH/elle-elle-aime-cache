{
    "generation": "    /**\n     * Update the index values for the maximum and minimum bounds.\n     *\n     * @param period  the time period.\n     * @param index  the index of the time period.\n     */\n    private void updateBounds(TimePeriod period, int index) {\n\n        long start = period.getStart().getTime();\n        long end = period.getEnd().getTime();\n        long middle = start + ((end - start) / 2);\n\n        // Rest of the start and end updates remain the same\n\n        // Correct indices for min and max middle\n        if (this.minMiddleIndex >= 0) {\n            long s = getDataItem(this.minMiddleIndex).getPeriod().getStart()\n                .getTime();\n            long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()\n                .getTime();\n            long minMiddle = s + (e - s) / 2;\n            if (middle < minMiddle) {\n                this.minMiddleIndex = index;\n            }\n        }\n        else {\n            this.minMiddleIndex = index;\n        }\n\n        if (this.maxMiddleIndex >= 0) {\n            long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart()\n                .getTime();\n            long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd()\n                .getTime();\n            long maxMiddle = s + (e - s) / 2;\n            if (middle > maxMiddle) {\n                this.maxMiddleIndex = index;\n            }\n        }\n        else {\n            this.maxMiddleIndex = index;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}