{
    "generation": "/**\n * <p>Gets the greatest common divisor of the absolute value of\n * two numbers, using the \"binary gcd\" method which avoids\n * division and modulo operations.  See Knuth 4.5.2 algorithm B.\n * This algorithm is due to Josef Stein (1961).</p>\n *\n * @param u  a non-zero number\n * @param v  a non-zero number\n * @return the greatest common divisor, never zero\n */\nprivate static int greatestCommonDivisor(int u, int v) {\n    if (u == Integer.MIN_VALUE || v == Integer.MIN_VALUE) {\n        if (u == Integer.MIN_VALUE && v == Integer.MIN_VALUE) {\n            return 1 << 31; // gcd of Integer.MIN_VALUE with itself\n        } else if (u == Integer.MIN_VALUE) {\n            return greatestCommonDivisor((1 << 31) - 1, Math.abs(v));\n        } else {\n            return greatestCommonDivisor((1 << 31) - 1, Math.abs(u));\n        }\n    }\n\n    // Absolute values are taken to ensure positivity\n    u = Math.abs(u);\n    v = Math.abs(v);\n\n    if (u == 0) {\n        return v;\n    } else if (v == 0) {\n        return u;\n    }\n\n    // B1. [Find power of 2]\n    int k = 0;\n    while (((u & 1) == 0) && ((v & 1) == 0) && k < 31) { // while u and v are both even...\n        u >>= 1; // Divide u by 2\n        v >>= 1; // Divide v by 2\n        k++; // Increase power of 2\n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n\n    // B2. Initialize: u and v have been divided by 2^k and at least\n    // one is odd.\n    while ((u & 1) == 0) {\n        u >>= 1; // Keep dividing u by 2 until it becomes odd\n    }\n\n    // B3. Process the remaining part of the algorithm\n    do {\n        while ((v & 1) == 0) { // Remove all factors of 2 in v\n            v >>= 1;\n        }\n\n        if (u > v) { // Swap u and v\n            int temp = u;\n            u = v;\n            v = temp;\n        }\n\n        v = v - u; // Here v is guaranteed to be even\n    } while (v != 0);\n\n    return u << k; // gcd is u * 2^k\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}