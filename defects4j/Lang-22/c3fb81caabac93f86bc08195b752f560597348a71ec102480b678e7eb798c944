{
    "generation": "private static int greatestCommonDivisor(int u, int v) {\n    if (u == 0) return v;\n    if (v == 0) return u;\n    if (u == Integer.MIN_VALUE || v == Integer.MIN_VALUE) {\n        return greatestCommonDivisor(u >> 1, v >> 1) << 1;\n    }\n    if (u < 0) u = -u;\n    if (v < 0) v = -v;\n\n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0) {\n        u >>= 1;\n        v >>= 1;\n        k++;\n    }\n\n    while ((u & 1) == 0) {\n        u >>= 1;\n    }\n\n    do {\n        while ((v & 1) == 0) {\n            v >>= 1;\n        }\n\n        if (u > v) {\n            int temp = v;\n            v = u;\n            u = temp;\n        }\n\n        v = v - u;\n    } while (v != 0);\n\n    return u << k;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}