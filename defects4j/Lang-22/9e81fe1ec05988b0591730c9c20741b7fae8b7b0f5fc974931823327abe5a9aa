{
    "generation": "private static int greatestCommonDivisor(int u, int v) {\n    u = Math.abs(u);\n    v = Math.abs(v);\n    if (u == 0) {\n        return v;\n    }\n    if (v == 0) {\n        return u;\n    }\n\n    int shift = 0;\n    while (((u | v) & 1) == 0) {\n        shift++;\n        u >>= 1;\n        v >>= 1;\n    }\n    while ((u & 1) == 0) {\n        u >>= 1;\n    }\n    do {\n        while ((v & 1) == 0) {\n            v >>= 1;\n        }\n        if (u < v) {\n            v -= u;\n        } else {\n            int diff = u - v;\n            u = v;\n            v = diff;\n        }\n        v >>= Integer.numberOfTrailingZeros(v);\n    } while (v != 0);\n\n    return u << shift;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}