{
    "generation": "/**\n * Adds 1 to the frequency count for v.\n * <p>\n * If other objects have already been added to this Frequency, v must\n * be comparable to those that have already been added.\n * </p>\n * \n * @param v the value to add.\n * @throws IllegalArgumentException if <code>v</code> is not Comparable, \n *         or is not comparable with previous entries\n * @deprecated use {@link #addValue(Comparable)} instead\n */\n@Deprecated\npublic void addValue(Object v) {\n    if (!(v instanceof Comparable)) {\n        throw new IllegalArgumentException(\"Value is not Comparable\");\n    }\n    \n    @SuppressWarnings(\"unchecked\")\n    Comparable<?> cv = (Comparable<?>) v;\n    \n    // Check if Frequency already has entries and if cv is comparable to them\n    if (!isEmpty()) {\n        for (Object existing : keys()) {\n            if (!(cv.compareTo(existing) != 0)) {\n                throw new IllegalArgumentException(\"Value is not comparable with existing entries\");\n            }\n        }\n    }\n    \n    addValue(cv);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}