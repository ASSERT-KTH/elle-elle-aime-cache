{
    "generation": "private Integer getPivotRow(SimplexTableau tableau, final int col) {\n    List<Integer> minRatioPositions = new ArrayList<>();\n    double minRatio = Double.POSITIVE_INFINITY;\n    for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {\n        final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);\n        final double entry = tableau.getEntry(i, col);\n\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            final double ratio = rhs / entry;\n            final int cmp = Double.compare(ratio, minRatio);\n            if (cmp <= 0) { // Use lesser than or equals to\n                if (cmp < 0) {\n                    minRatio = ratio;\n                    minRatioPositions.clear();\n                }\n                minRatioPositions.add(i);\n            }\n        }\n    }\n\n    if (minRatioPositions.isEmpty()) {\n        return null;\n    } else if (minRatioPositions.size() > 1) {\n        Integer minRow = null;\n        int minIndex = tableau.getWidth();\n        for (Integer row : minRatioPositions) {\n            for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getWidth() - 1; i++) {\n                if (row == tableau.getBasicRow(i)) {\n                    if (i < minIndex) {\n                        minIndex = i;\n                        minRow = row;\n                    }\n                }\n            }\n        }\n        return minRow;\n    } else {\n        return minRatioPositions.get(0);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}