{
    "generation": "/**\n * <p>Render the specified text and return the rendered Options\n * in a StringBuffer.</p>\n *\n * @param sb The StringBuffer to place the rendered text into.\n * @param width The number of characters to display per line\n * @param nextLineTabStop The position on the next line for the first tab.\n * @param text The text to be rendered.\n *\n * @return the StringBuffer with the rendered Options contents.\n */\nprotected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                         int nextLineTabStop, String text)\n{\n    // Split multi-line text into individual lines for proper rendering\n    String[] lines = text.split(\"\\\\r?\\\\n\");\n\n    for (String line : lines) {\n        int pos = findWrapPos(line, width, 0);\n\n        if (pos == -1)\n        {\n            sb.append(rtrim(line)).append(defaultNewLine);\n        }\n        else\n        {\n            sb.append(rtrim(line.substring(0, pos))).append(defaultNewLine);\n\n            // all following lines must be padded with nextLineTabStop space \n            // characters\n            final String padding = createPadding(nextLineTabStop);\n\n            while (true)\n            {\n                String remainingText = line.substring(pos).trim();\n                if (remainingText.isEmpty()) {\n                    break; // prevent infinite loop on empty remaining text\n                }\n                pos = findWrapPos(remainingText, width, nextLineTabStop);\n\n                if (pos == -1)\n                {\n                    sb.append(padding).append(remainingText).append(defaultNewLine);\n                    break;\n                }\n\n                sb.append(padding).append(rtrim(remainingText.substring(0, pos))).append(defaultNewLine);\n                line = remainingText.substring(pos).trim();\n            }\n        }\n    }\n\n    // Remove the last appended newline if not already done\n    if (sb.length() > 0 && sb.charAt(sb.length() - 1) == defaultNewLine.charAt(0)) {\n        sb.setLength(sb.length() - defaultNewLine.length());\n    }\n\n    return sb;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}