{
    "generation": "protected StringBuffer renderWrappedText(StringBuffer sb, int width,\n                                         int nextLineTabStop, String text)\n{\n    // Split the input text into lines using the system default line separator\n    String[] lines = text.split(defaultNewLine);\n\n    final String padding = createPadding(nextLineTabStop);\n\n    for (int i = 0; i < lines.length; i++) {\n        String currentLine = lines[i];\n        boolean needsPadding = i > 0; // Add padding only for lines after the first\n\n        while (currentLine.length() > 0) {\n            int pos = findWrapPos(currentLine, width, needsPadding ? nextLineTabStop : 0);\n\n            if (pos == -1) {\n                // No need to wrap, append the remaining text\n                if (needsPadding) {\n                    sb.append(padding);\n                }\n                sb.append(currentLine);\n                currentLine = \"\";\n            } else {\n                // Wrap at the calculated position\n                if (needsPadding) {\n                    sb.append(padding);\n                }\n                sb.append(rtrim(currentLine.substring(0, pos))).append(defaultNewLine);\n                currentLine = currentLine.substring(pos).trim();\n            }\n\n            // Subsequent lines will need padding\n            needsPadding = true;\n        }\n\n        // Add a newline only if this is not the last input line\n        if (i < lines.length - 1) {\n            sb.append(defaultNewLine);\n        }\n    }\n\n    return sb;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}