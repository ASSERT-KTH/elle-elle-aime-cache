{
    "generation": "    public int read(byte b[], int offset, int len) throws IOException {\n        if (b == null) {\n            throw new NullPointerException();\n        } else if (offset < 0 || len < 0) {\n            throw new IndexOutOfBoundsException();\n        } else if (offset > b.length || offset + len > b.length) {\n            throw new IndexOutOfBoundsException();\n        } else if (len == 0) {\n            return 0;\n        } else {\n            int bytesReadTotal = 0;\n            while (bytesReadTotal == 0) { // Ensure that the method does not return 0 as per the InputStream contract\n                if (!base64.hasData()) {\n                    byte[] buf = new byte[doEncode ? 4096 : 8192];\n                    int c = in.read(buf);\n                    if (c == -1) { // EOF reached\n                        break;\n                    }\n                    if (c > 0) {\n                        // A little optimization to avoid System.arraycopy() when possible.\n                        if (b.length == len) {\n                            base64.setInitialBuffer(b, offset, len);\n                        }\n                        if (doEncode) {\n                            base64.encode(buf, 0, c);\n                        } else {\n                            base64.decode(buf, 0, c);\n                        }\n                    }\n                }\n                bytesReadTotal = base64.readResults(b, offset, len);\n            }\n            return bytesReadTotal > 0 ? bytesReadTotal : -1; // Return -1 if EOF reached and no data read\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}