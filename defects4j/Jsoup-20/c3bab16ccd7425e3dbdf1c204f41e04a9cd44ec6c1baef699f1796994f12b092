{
    "generation": "static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser) {\n    String docData;\n    Document doc = null;\n    if (charsetName == null) {\n        charsetName = defaultCharset;\n    }\n\n    docData = Charset.forName(charsetName).decode(byteData).toString();\n\n    // Handling any spurious byte-order-mark\n    if (docData.startsWith(StringUtil.BOM)) {\n        docData = docData.substring(1);\n    }\n\n    doc = parser.parseInput(docData, baseUri);\n    doc.outputSettings().charset(charsetName);\n\n    if (charsetName.equals(defaultCharset)) {\n        Element meta = doc.select(\"meta[http-equiv=content-type], meta[charset]\").first();\n        if (meta != null) {\n            String foundCharset = meta.hasAttr(\"http-equiv\") ? getCharsetFromContentType(meta.attr(\"content\")) : meta.attr(\"charset\");\n            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(charsetName)) {\n                charsetName = foundCharset;\n                byteData.rewind();\n                docData = Charset.forName(charsetName).decode(byteData).toString();\n\n                //Handling any spurious byte-order-mark after charset change\n                if (docData.startsWith(StringUtil.BOM)) {\n                    docData = docData.substring(1);\n                }\n\n                doc = parser.parseInput(docData, baseUri);\n                doc.outputSettings().charset(charsetName);\n            }\n        }\n    }\n    return doc;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}