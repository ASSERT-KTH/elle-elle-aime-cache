{
    "generation": "static boolean isSimpleNumber(String s) {\n    // Check for numeric literals in different bases (decimal, octal, hexadecimal)\n    if (s.startsWith(\"0x\") || s.startsWith(\"0X\")) { // hexadecimal\n        return s.length() > 2 && isHexadecimal(s.substring(2));\n    } else if (s.startsWith(\"0\") && s.length() > 1) { // octal (assuming no leading zero for decimal)\n        return isOctal(s.substring(1));\n    } else { // decimal\n        int len = s.length();\n        for (int index = 0; index < len; index++) {\n            char c = s.charAt(index);\n            if (c < '0' || c > '9') {\n                return false;\n            }\n        }\n        return len > 0;\n    }\n}\n\n// Helper methods for hexadecimal and octal checks\nstatic boolean isHexadecimal(String s) {\n    int len = s.length();\n    for (int index = 0; index < len; index++) {\n        char c = s.charAt(index);\n        if (!((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F'))) {\n            return false;\n        }\n    }\n    return len > 0;\n}\n\nstatic boolean isOctal(String s) {\n    int len = s.length();\n    for (int index = 0; index < len; index++) {\n        char c = s.charAt(index);\n        if (c < '0' || c > '7') {\n            return false;\n        }\n    }\n    return len > 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}