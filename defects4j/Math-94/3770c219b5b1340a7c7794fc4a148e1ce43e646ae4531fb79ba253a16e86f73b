{
    "generation": "    /**\n     * <p>\n     * Gets the greatest common divisor of the absolute value of two numbers,\n     * using the \"binary gcd\" method which avoids division and modulo\n     * operations. See Knuth 4.5.2 algorithm B. This algorithm is due to Josef\n     * Stein (1961).\n     * </p>\n     * \n     * @param u a number\n     * @param v a number\n     * @return the greatest common divisor, never negative\n     * @since 1.1\n     */\n    public static int gcd(int u, int v) {\n        // GCD(0, 0) should return 0, as there is no greatest common divisor of zero and zero.\n        if (u == 0 && v == 0) {\n            return 0;\n        }\n        // keep u and v negative, as negative integers range down to\n        // -2^31, while positive numbers can only be as large as 2^31-1\n        // (i.e. we can't necessarily negate a negative number without\n        // overflow)\n        u = Math.abs(u);\n        v = Math.abs(v);\n        // B1. [Find power of 2]\n        int k = 0;\n        while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are\n                                                            // both even...\n            u >>= 1;\n            v >>= 1;\n            k++; // cast out twos.\n        }\n        if (k == 31) {\n            throw new ArithmeticException(\"overflow: gcd is 2^31\");\n        }\n        // B2. Initialize: u and v have been divided by 2^k and at least\n        // one is odd.\n        while (u != v) {\n            // B3. [Reduce u]\n            if ((u & 1) == 0) {\n                u >>= 1;\n            } else {\n                // B4. [Reduce v]\n                if ((v & 1) == 0) {\n                    v >>= 1;\n                } else {\n                    // B5 [Reset max(u,v)]\n                    if (u > v) {\n                        u = (u - v) >> 1;\n                    } else {\n                        v = (v - u) >> 1;\n                    }\n                }\n            }\n        }\n        return u << k; // gcd is u*2^k\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}