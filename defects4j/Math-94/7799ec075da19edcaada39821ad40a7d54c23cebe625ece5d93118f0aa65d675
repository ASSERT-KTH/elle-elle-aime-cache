{
    "generation": "public static int gcd(int u, int v) {\n    if (u == 0) return Math.abs(v);\n    if (v == 0) return Math.abs(u);\n\n    // Make both numbers positive\n    u = Math.abs(u);\n    v = Math.abs(v);\n\n    // Find the greatest power of 2 that divides both u and v\n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) {\n        u /= 2;\n        v /= 2;\n        k++;\n    }\n\n    int t;\n    while (v != 0) {\n        // Remove factors of 2 from v\n        while ((v & 1) == 0) {\n            v /= 2;\n        }\n\n        // Now u and v are both odd. Swap if necessary so u <= v\n        if (u > v) {\n            t = u;\n            u = v;\n            v = t;\n        }\n\n        // Set v = v - u\n        v -= u;\n\n        // Remove factors of 2 from v\n        while ((v & 1) == 0) {\n            v /= 2;\n        }\n    }\n\n    // Restore the factors of 2\n    return u << k;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}