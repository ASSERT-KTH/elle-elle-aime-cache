{
    "generation": "public static int gcd(int u, int v) {\n    if (u * v == 0) {\n        return Math.abs(u) + Math.abs(v);\n    }\n\n    u = Math.abs(u);\n    v = Math.abs(v);\n\n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are both even...\n        u /= 2;\n        v /= 2;\n        k++; // cast out twos.\n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n\n    int t = ((u & 1) == 1) ? v : -(u / 2);\n\n    do {\n        while ((t & 1) == 0) { // while t is even...\n            t /= 2; // cast out twos\n        }\n\n        if (t > 0) {\n            u = -t;\n        } else {\n            v = t;\n        }\n\n        t = (v - u) / 2;\n\n    } while (t != 0);\n\n    return -u * (1 << k); // gcd is u*2^k\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}