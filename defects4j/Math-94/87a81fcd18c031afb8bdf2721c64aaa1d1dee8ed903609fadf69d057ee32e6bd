{
    "generation": "public static int gcd(int u, int v) {\n    if (u * v == 0) {\n        return Math.abs(u) + Math.abs(v);\n    }\n    // Make both u and v negative.\n    u = Math.abs(u); // ensure u is positive\n    v = Math.abs(v); // ensure v is positive\n    int k = 0;\n    while ((u & 1) == 0 && (v & 1) == 0 && k < 31) {\n        u /= 2;\n        v /= 2;\n        k++;\n    }\n    if (k == 31) {\n        throw new ArithmeticException(\"overflow: gcd is 2^31\");\n    }\n    // Make both u and v negative to follow Stein's algorithm correctly.\n    u = -u;\n    v = -v;\n    // Rest of the function remains the same...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}