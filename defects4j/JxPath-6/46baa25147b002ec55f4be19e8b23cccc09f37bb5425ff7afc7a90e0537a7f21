{
    "generation": "protected boolean equal(\n    EvalContext context,\n    Expression left,\n    Expression right) \n{\n    Object l = left.compute(context);\n    Object r = right.compute(context);\n\n    if (l instanceof InitialContext || l instanceof SelfContext) {\n        l = ((EvalContext) l).getSingleNodePointer();\n    }\n\n    if (r instanceof InitialContext || r instanceof SelfContext) {\n        r = ((EvalContext) r).getSingleNodePointer();\n    }\n\n    if (l instanceof Collection) {\n        l = ((Collection) l).iterator();\n    }\n\n    if (r instanceof Collection) {\n        r = ((Collection) r).iterator();\n    }\n\n    if (l instanceof Iterator && !(r instanceof Iterator)) {\n        return contains((Iterator) l, r);\n    }\n    if (!(l instanceof Iterator) && r instanceof Iterator) {\n        return contains((Iterator) r, l);\n    }\n    if (l instanceof Iterator && r instanceof Iterator) {\n        return findMatch((Iterator) l, (Iterator) r);\n    }\n    return equalObjects(l, r);\n}\n\nprivate boolean contains(Iterator iterator, Object value) {\n    while (iterator.hasNext()) {\n        Object item = iterator.next();\n        if (equalObjects(item, value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nprivate boolean findMatch(Iterator left, Iterator right) {\n    while (left.hasNext() && right.hasNext()) {\n        if (equalObjects(left.next(), right.next())) {\n            return true;\n        }\n    }\n    return false;\n}\n\nprivate boolean equalObjects(Object l, Object r) {\n    if (l == null) {\n        return r == null;\n    }\n    return l.equals(r);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}