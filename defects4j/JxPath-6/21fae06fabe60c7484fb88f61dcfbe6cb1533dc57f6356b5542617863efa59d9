{
    "generation": "protected boolean equal(\n    EvalContext context,\n    Expression left,\n    Expression right) \n{\n    Object l = left.compute(context);\n    Object r = right.compute(context);\n\n    if (l instanceof InitialContext || l instanceof SelfContext) {\n        l = ((EvalContext) l).getSingleNodePointer();\n    }\n\n    if (r instanceof InitialContext || r instanceof SelfContext) {\n        r = ((EvalContext) r).getSingleNodePointer();\n    }\n\n    if (l instanceof Collection) {\n        l = ((Collection) l).iterator();\n    }\n\n    if (r instanceof Collection) {\n        r = ((Collection) r).iterator();\n    }\n\n    if ((l instanceof Iterator) && !(r instanceof Iterator)) {\n        return contains((Iterator) l, r);\n    }\n    if (!(l instanceof Iterator) && (r instanceof Iterator)) {\n        return contains((Iterator) r, l);\n    }\n    if (l instanceof Iterator && r instanceof Iterator) {\n        return findMatch((Iterator) l, (Iterator) r);\n    }\n    return l == null ? r == null : l.equals(r);\n}\n\nprivate boolean contains(Iterator iter, Object value) {\n    while (iter.hasNext()) {\n        if (value == null ? iter.next() == null : value.equals(iter.next())) {\n            return true;\n        }\n    }\n    return false;\n}\n\nprivate boolean findMatch(Iterator iter1, Iterator iter2) {\n    while (iter1.hasNext()) {\n        Object o1 = iter1.next();\n        while (iter2.hasNext()) {\n            Object o2 = iter2.next();\n            if (o1 == null ? o2 == null : o1.equals(o2)) {\n                return true;\n            }\n        }\n        iter2 = ((Collection) r).iterator(); // Reset the iterator for the second collection\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}