{
    "generation": "    /**\n     * Compares two values\n     */\n    protected boolean equal(\n        EvalContext context,\n        Expression left,\n        Expression right)\n    {\n        Object l = left.compute(context);\n        Object r = right.compute(context);\n\n//        System.err.println(\"COMPARING: \" +\n//            (l == null ? \"null\" : l.getClass().getName()) + \" \" +\n//            (r == null ? \"null\" : r.getClass().getName()));\n\n        if (l instanceof InitialContext || l instanceof SelfContext) {\n            l = ((EvalContext) l).getSingleNodePointer();\n        }\n\n        if (r instanceof InitialContext || r instanceof SelfContext) {\n            r = ((EvalContext) r).getSingleNodePointer();\n        }\n\n        if (l instanceof Collection) {\n            l = ((Collection<?>) l).iterator();\n        }\n\n        if (r instanceof Collection) {\n            r = ((Collection<?>) r).iterator();\n        }\n\n        if ((l instanceof Iterator) && !(r instanceof Iterator)) {\n            return contains((Iterator<?>) l, r);\n        }\n        if (!(l instanceof Iterator) && (r instanceof Iterator)) {\n            return contains((Iterator<?>) r, l);\n        }\n        if (l instanceof Iterator && r instanceof Iterator) {\n            return findMatch((Iterator<?>) l, (Iterator<?>) r);\n        }\n        return equal(l, r);\n    }\n\n    private boolean contains(Iterator<?> iterator, Object obj) {\n        while (iterator.hasNext()) {\n            if (equal(iterator.next(), obj)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private boolean findMatch(Iterator<?> l, Iterator<?> r) {\n        while (r.hasNext()) {\n            Object rObj = r.next();\n            while (l.hasNext()) {\n                if (equal(l.next(), rObj)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    private boolean equal(Object a, Object b) {\n        if (a == null && b == null) {\n            return true;\n        }\n        if (a == null || b == null) {\n            return false;\n        }\n        return a.equals(b);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}