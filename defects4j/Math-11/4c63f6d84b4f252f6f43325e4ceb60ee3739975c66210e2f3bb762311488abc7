{
    "generation": "    /** {@inheritDoc} */\n    public double density(final double[] vals) throws DimensionMismatchException {\n        final int dim = getDimension();\n        if (vals.length != dim) {\n            throw new DimensionMismatchException(vals.length, dim);\n        }\n\n        double[] dev = new double[dim];\n        for (int i = 0; i < dim; i++) {\n            dev[i] = vals[i] - means[i];\n        }\n\n        final RealMatrix sigmaMatrix = getCovarianceMatrix();\n        final RealMatrix xMatrix = new Array2DRowRealMatrix(dev, false);\n        final RealMatrix resultMatrix = xMatrix.transpose().multiply(new LUDecomposition(sigmaMatrix).getSolver().getInverse()).multiply(xMatrix);\n\n        final double exponent = -0.5 * resultMatrix.getTrace();\n        final double coefficient = FastMath.pow(2 * FastMath.PI, -dim / 2.0) *\n                                   FastMath.pow(new LUDecomposition(sigmaMatrix).getDeterminant(), -0.5);\n\n        return coefficient * FastMath.exp(exponent);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}