{
    "generation": "/** {@inheritDoc} */\npublic double density(final double[] vals) throws DimensionMismatchException {\n    final int dim = getDimension();\n    if (vals.length != dim) {\n        throw new DimensionMismatchException(vals.length, dim);\n    }\n\n    if (dim == 1) {\n        // Special case for univariate normal distribution\n        final double x = vals[0];\n        final double mu = getMeans()[0];\n        final double sigma = getCovariances()[0][0];\n        final double denominator = FastMath.sqrt(2 * FastMath.PI * sigma);\n        final double exponent = -0.5 * FastMath.pow((x - mu) / FastMath.sqrt(sigma), 2);\n        return FastMath.exp(exponent) / denominator;\n    } else {\n        // Multivariate case\n        return FastMath.pow(2 * FastMath.PI, -dim / 2) *\n            FastMath.pow(covarianceMatrixDeterminant, -0.5) *\n            getExponentTerm(vals);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}