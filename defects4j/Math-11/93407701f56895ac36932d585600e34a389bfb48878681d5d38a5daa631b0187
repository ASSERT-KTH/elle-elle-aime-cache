{
    "generation": "/** {@inheritDoc} */\npublic double density(final double[] vals) throws DimensionMismatchException {\n    final int dim = getDimension();\n    if (vals.length != dim) {\n        throw new DimensionMismatchException(vals.length, dim);\n    }\n\n    // Calculate the Mahalanobis distance\n    double[] diff = new double[dim];\n    for (int i = 0; i < dim; i++) {\n        diff[i] = vals[i] - getMeans()[i];\n    }\n    double[] mahalanobis = getCovarianceMatrix().preMultiply(diff);\n    double mahalanobisDistance = 0;\n    for (int i = 0; i < dim; i++) {\n        mahalanobisDistance += diff[i] * mahalanobis[i];\n    }\n\n    return FastMath.pow(2 * FastMath.PI, -dim / 2) *\n           FastMath.pow(covarianceMatrixDeterminant, -0.5) *\n           FastMath.exp(-0.5 * mahalanobisDistance);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}