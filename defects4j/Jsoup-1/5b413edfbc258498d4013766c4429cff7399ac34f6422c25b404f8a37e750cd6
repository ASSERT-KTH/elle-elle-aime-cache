{
    "generation": "private void normalise(Element element) {\n    List<Node> toMove = new ArrayList<Node>();\n    Node firstChild = element.childNodeSize() > 0 ? element.childNode(0) : null;\n\n    for (Node node : element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn = (TextNode) node;\n            if (!tn.isBlank()) {\n                toMove.add(tn);\n            }\n        } else if (node instanceof Element) {\n            normalise((Element) node); // Recurse into nested elements\n        }\n    }\n\n    if (toMove.size() > 0) {\n        for (Node node : toMove) {\n            element.removeChild(node);\n        }\n        if (firstChild != null && firstChild instanceof Element) {\n            ((Element) firstChild).prependChild(new TextNode(\" \", \"\"));\n            for (Node node : toMove) {\n                ((Element) firstChild).prependChild(node);\n            }\n        } else {\n            for (Node node : toMove) {\n                element.prependChild(node);\n            }\n            element.prependChild(new TextNode(\" \", \"\"));\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}