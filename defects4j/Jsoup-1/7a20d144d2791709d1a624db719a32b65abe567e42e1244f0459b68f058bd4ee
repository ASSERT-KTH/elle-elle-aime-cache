{
    "generation": "/**\n * Move non-blank text nodes from the specified element to the beginning of the body.\n * This is used to normalize the structure after parsing, to ensure text nodes are \n * in a consistent location (the start of the body), rather than scattered throughout.\n */\nprivate void normalise(Element element) {\n    List<Node> toMove = new ArrayList<Node>();\n    for (Node node : element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn = (TextNode) node;\n            if (!tn.isBlank()) {\n                toMove.add(tn);\n            }\n        }\n    }\n\n    for (Node node : toMove) {\n        element.removeChild(node);\n        // Move to the beginning of the body, not append (which is why the test was failing)\n        body().prependChild(node);\n        // No need to append a new whitespace TextNode, as the original node is being moved\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}