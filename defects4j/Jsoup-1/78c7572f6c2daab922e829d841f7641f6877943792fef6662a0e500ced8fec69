{
    "generation": "    private void normalise(Element element) {\n        List<Node> toMove = new ArrayList<Node>();\n        for (Node node : element.childNodes()) {\n            if (node instanceof TextNode) {\n                TextNode tn = (TextNode) node;\n                if (!tn.isBlank())\n                    toMove.add(tn);\n            }\n        }\n\n        List<Node> children = new ArrayList<>(element.childNodes());\n        for (Node node : toMove) {\n            element.removeChild(node);\n        }\n        for (Node node : children) {\n            if (node instanceof TextNode) {\n                element.removeChild(node);\n            }\n        }\n        for (Node node : toMove) {\n            element.appendChild(new TextNode(\" \"));\n            element.appendChild(node);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}