{
    "generation": "private void normalise(Element element) {\n    List<Node> toMove = new ArrayList<Node>();\n    for (Node node: element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn = (TextNode) node;\n            if (!tn.isBlank())\n                toMove.add(tn);\n        }\n    }\n\n    for (Node node: toMove) {\n        element.removeChild(node);\n        if (element.tag().isBlock() && element != body()) {\n            body().prependChild(new TextNode(\" \", \"\"));\n            body().prependChild(node);\n        } else {\n            body().appendChild(new TextNode(\" \", \"\"));\n            body().appendChild(node);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}