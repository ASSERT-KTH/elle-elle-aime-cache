{
    "generation": "private void normalise(Document document) {\n    List<Node> toMove = new ArrayList<Node>();\n    // Check direct children of `element`\n    for (Node node: document.body().childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn = (TextNode) node;\n            if (!tn.isBlank())\n                toMove.add(tn);\n        }\n    }\n\n    // Check direct children of document root\n    for (Node node: document.childNodes()) {\n        if (node instanceof Element && !node.equals(document.body())) {\n            normalise((Element) node);\n        } else if (node instanceof TextNode) {\n            TextNode tn = (TextNode) node;\n            if (!tn.isBlank())\n                toMove.add(tn);\n        }\n    }\n\n    for (Node node: toMove) {\n        document.body().removeChild(node);\n        document.body().prependChild(new TextNode(\" \", \"\"));\n        document.body().prependChild(node);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}