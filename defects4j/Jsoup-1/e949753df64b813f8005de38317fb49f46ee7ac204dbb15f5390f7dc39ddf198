{
    "generation": "/**\n * Normalises the given element by moving non-blank text nodes to the beginning of the body.\n */\nprivate void normalise(Element element) {\n    List<Node> toMove = new ArrayList<Node>();\n    for (Node node: element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn = (TextNode) node;\n            if (!tn.isBlank() && element == body()) { // only consider text nodes within the body\n                toMove.add(tn);\n            }\n        }\n    }\n\n    // Move text nodes to the beginning of the body, not after each removal\n    for (Node node: toMove) {\n        element.removeChild(node);\n        body().prependChild(node); // prepend to maintain original order\n        body().prependChild(new TextNode(\" \", \"\")); // add space after moved text node\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}