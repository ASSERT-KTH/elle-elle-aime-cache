{
    "generation": "/**\n * Normalises the given element by moving non-blank TextNodes to the beginning of the body.\n */\nprivate void normalise(Element element) {\n    List<Node> toMove = new ArrayList<Node>();\n    for (Node node: element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn = (TextNode) node;\n            if (!tn.isBlank()) {\n                toMove.add(tn);\n                // also move preceding blank text nodes to maintain original text order\n                while (node.nextSibling instanceof TextNode && ((TextNode) node.nextSibling).isBlank()) {\n                    toMove.add(node.nextSibling);\n                    node = node.nextSibling;\n                }\n            }\n        }\n    }\n\n    for (Node node: toMove) {\n        element.removeChild(node);\n    }\n    // append moved nodes at the beginning of the body, in their original order\n    for (Node node: toMove) {\n        body().prependChild(node);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}