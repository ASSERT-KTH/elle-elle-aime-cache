{
    "generation": "// does not recurse.\nprivate void normalise(Element element) {\n    List<Node> toMove = new ArrayList<Node>();\n    for (Node node: element.childNodes) {\n        if (node instanceof TextNode) {\n            TextNode tn = (TextNode) node;\n            if (!tn.isBlank())\n                toMove.add(tn);\n        }\n    }\n\n    // Reverse the order of text nodes to maintain original order\n    Collections.reverse(toMove);\n\n    for (Node node: toMove) {\n        element.removeChild(node);\n        body().appendChild(node);\n        body().appendChild(new TextNode(\" \", \"\"));\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}