{
    "generation": "protected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    List<Integer> columnsToDrop = new ArrayList<>();\n    columnsToDrop.add(0); // Assuming 0 is the index of the phase 1 objective function\n\n    // positive cost non-artificial variables\n    for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n        final double entry = tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            columnsToDrop.add(i);\n        }\n    }\n\n    // non-basic artificial variables\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        int col = i + getArtificialVariableOffset();\n        if (getBasicRow(col) == null) {\n            columnsToDrop.add(col);\n        }\n    }\n\n    // Sort the columns to drop in descending order to avoid index shifting\n    columnsToDrop.sort(Collections.reverseOrder());\n\n    // Create a new tableau matrix without the dropped columns\n    int newNumCols = getWidth() - columnsToDrop.size();\n    double[][] newMatrix = new double[getHeight()][newNumCols];\n    int newColIndex = 0;\n    for (int j = 0; j < getWidth(); j++) {\n        if (!columnsToDrop.contains(j)) {\n            for (int i = 0; i < getHeight(); i++) {\n                newMatrix[i][newColIndex] = tableau.getEntry(i, j);\n            }\n            newColIndex++;\n        }\n    }\n\n    // Remove the dropped columns from columnLabels\n    for (int col : columnsToDrop) {\n        columnLabels.remove((Integer) col);\n    }\n\n    // Update the tableau with the new matrix\n    this.tableau = new Array2DRowRealMatrix(newMatrix);\n\n    // Update the number of artificial variables if necessary\n    // Assuming all artificial variables are dropped\n    this.numArtificialVariables = 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}