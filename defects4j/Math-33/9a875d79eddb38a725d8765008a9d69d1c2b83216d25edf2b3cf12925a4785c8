{
    "generation": "/**\n * Removes the phase 1 objective function, positive cost non-artificial variables,\n * and the non-basic artificial variables from this tableau.\n */\nprotected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    List<Integer> columnsToDrop = new ArrayList<Integer>();\n    columnsToDrop.add(0);\n\n    // positive cost non-artificial variables\n    for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n        final double entry = tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            columnsToDrop.add(i);\n        }\n    }\n\n    // non-basic artificial variables\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n        int col = i + getArtificialVariableOffset();\n        if (getBasicRow(col) == null) {\n            columnsToDrop.add(col);\n        }\n    }\n\n    Collections.sort(columnsToDrop);\n    double[][] matrix = new double[getHeight() - 1][getWidth() - columnsToDrop.size()];\n    int matrixCol = 0;\n    for (int i = 1; i < getHeight(); i++) {\n        int col = 0;\n        int k = 0;\n        while (col < getWidth()) {\n            while (k < columnsToDrop.size() && col == columnsToDrop.get(k)) {\n                ++col;\n                ++k;\n            }\n            matrix[i - 1][matrixCol++] = tableau.getEntry(i, col);\n            ++col;\n            if (matrixCol >= matrix[0].length) {\n                matrixCol = 0;\n                break;\n            }\n        }\n    }\n\n    for (int i = columnsToDrop.size() - 1; i >= 0; i--) {\n        columnLabels.remove((int) columnsToDrop.get(i));\n    }\n\n    this.tableau = new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables = 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}