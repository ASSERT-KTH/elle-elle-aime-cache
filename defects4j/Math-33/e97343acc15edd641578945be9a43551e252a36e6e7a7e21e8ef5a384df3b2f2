{
    "generation": "/**\n * Removes the phase 1 objective function, positive cost non-artificial variables,\n * and the non-basic artificial variables from this tableau.\n */\nprotected void dropPhase1Objective() {\n    if (getNumObjectiveFunctions() == 1) {\n        return;\n    }\n\n    List<Integer> columnsToDrop = new ArrayList<Integer>();\n    columnsToDrop.add(0); // phase 1 objective function\n\n    // positive cost non-artificial variables\n    for (int i = getNumObjectiveFunctions(); i < getArtificialVariableOffset(); i++) {\n        final double entry = tableau.getEntry(0, i);\n        if (Precision.compareTo(entry, 0d, maxUlps) > 0) {\n            columnsToDrop.add(i);\n        }\n    }\n\n    // non-basic artificial variables\n    for (int i = 0; i < getNumArtificialVariables(); i++) {\n      int col = i + getArtificialVariableOffset();\n      if (getBasicRow(col) == null) {\n        columnsToDrop.add(col);\n      }\n    }\n\n    // Fix: Correctly update matrix dimensions and column indexing\n    int newHeight = getHeight() - (columnsToDrop.contains(0)? 1 : 0); // subtract 1 if objective function is dropped\n    int newWidth = getWidth() - columnsToDrop.size();\n    double[][] matrix = new double[newHeight][newWidth];\n\n    int rowOffset = columnsToDrop.contains(0)? 1 : 0; // adjust row offset if objective function is dropped\n    for (int i = rowOffset; i < getHeight(); i++) {\n      int col = 0;\n      for (int j = 0; j < getWidth(); j++) {\n        if (!columnsToDrop.contains(j)) {\n          matrix[i - rowOffset][col++] = tableau.getEntry(i, j);\n        }\n      }\n    }\n\n    // Fix: Use iterator to safely remove elements from columnLabels\n    Iterator<Integer> iterator = columnLabels.iterator();\n    while (iterator.hasNext()) {\n      int col = iterator.next();\n      if (columnsToDrop.contains(col)) {\n        iterator.remove();\n      }\n    }\n\n    this.tableau = new Array2DRowRealMatrix(matrix);\n    this.numArtificialVariables = 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}