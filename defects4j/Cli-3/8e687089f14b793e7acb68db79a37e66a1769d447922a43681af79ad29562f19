{
    "generation": "/**\n * <p>Create a number from a String. If a. is present, it creates a \n *    Double, otherwise a Long. </p>\n *\n * @param str the value\n * @return the number represented by <code>str</code>, if <code>str</code>\n * is not a number, null is returned.\n */\npublic static Number createNumber(String str)\n{\n    try\n    {\n        // Use trim() to remove leading/trailing whitespace\n        str = str.trim();\n        \n        // Check if the string represents an integer\n        if (str.matches(\"\\\\d+\")) {\n            return Long.parseLong(str);\n        } \n        // Check if the string represents a double\n        else if (str.matches(\"\\\\d+(\\\\.\\\\d+)?\")) {\n            return Double.parseDouble(str);\n        } \n        // If none of the above, rethrow the exception\n        else {\n            throw new NumberFormatException(\"Invalid number format: \" + str);\n        }\n    }\n    catch (NumberFormatException nfe)\n    {\n        System.err.println(nfe.getMessage());\n    }\n\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}