{
    "generation": "/**\n * Checks if a given Node represents a reducable function expression.\n * A function expression is considered reducable if it's not a constructor\n * or a getter/setter, and it's not being called immediately.\n *\n * @param n the Node to check\n * @return true if the Node is a reducable function expression, false otherwise\n */\nprivate static boolean isReduceableFunctionExpression(Node n) {\n  return NodeUtil.isFunctionExpression(n) \n      &&!NodeUtil.isConstructor(n) \n      &&!NodeUtil.isGetterOrSetter(n)\n      && n.getParent() == null ||!n.getParent().isCall();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}