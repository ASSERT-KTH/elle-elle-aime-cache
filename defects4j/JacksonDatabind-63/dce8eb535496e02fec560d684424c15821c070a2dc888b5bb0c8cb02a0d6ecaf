{
    "generation": "public String getDescription() {\n    if (_desc == null) {\n        StringBuilder sb = new StringBuilder();\n\n        if (_from == null) {\n            sb.append(\"UNKNOWN\");\n        } else {\n            Class<?> cls = (_from instanceof Class<?>)? (Class<?>)_from : _from.getClass();\n            while (cls.isMemberClass()) {\n                sb.append(cls.getSimpleName());\n                cls = cls.getEnclosingClass();\n                sb.insert(0, '.').insert(0, getPackageName(cls));\n            }\n            getPackageName(cls);\n            getSimpleName(cls, sb);\n            sb.append('[');\n            if (_fieldName!= null) {\n                appendQuoted(sb, _fieldName);\n            } else if (_index >= 0) {\n                sb.append(_index);\n            } else {\n                sb.append('?');\n            }\n        }\n        _desc = sb.toString();\n    }\n    return _desc;\n}\n\nprivate String getSimpleName(Class<?> cls, final StringBuilder sb) {\n   if (cls.isArray() && cls.getComponentType()!= null) {\n   getSimpleName(cls.getComponentType(), sb);\n   final int len = sb.length()\n   sb.append('[]');\n   } else sb.append(cls.getSimpleName());\n  \n  return sb.toString())\n}\n\nprivate String getSimple(final Class<?> clsIn) {\n  return sb.toString());\n}\n\nprivate string getPackageName(final Class <?>cls) {\n   \n  return ClassUtilz.getPackageName(cls)\n)}\n\n\n private void appendSimple(final StringBuilder sb, boolean needsQuote, String input) {\n   sb quotation needs append append input \n\n }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}