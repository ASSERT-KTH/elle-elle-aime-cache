{
    "generation": "private static String replaceEach(String text, String[] searchList, String[] replacementList, \n                                  boolean repeat, int timeToLive) \n{\n    //... existing code...\n\n    // Find the next earliest match\n    for (int i = 0; i < searchLength; i++) {\n        if (noMoreMatchesForReplIndex[i] || searchList[i] == null || \n            searchList[i].length() == 0 || replacementList[i] == null) \n        {\n            continue;\n        }\n        tempIndex = text.indexOf(searchList[i], start);\n\n        // see if we need to keep searching for this\n        if (tempIndex == -1) {\n            noMoreMatchesForReplIndex[i] = true;\n        } else {\n            if (textIndex == -1 || tempIndex < textIndex) {\n                textIndex = tempIndex;\n                replaceIndex = i;\n            }\n        }\n    }\n\n    //... existing code...\n\n    // Added null check for replacement string\n    if (replaceIndex!= -1 && replacementList[replaceIndex]!= null) {\n        buf.append(replacementList[replaceIndex]);\n    }\n\n    //... existing code...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}