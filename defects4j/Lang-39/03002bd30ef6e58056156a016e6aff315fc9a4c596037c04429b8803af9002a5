{
    "generation": "private static String replaceEach(String text, String[] searchList, String[] replacementList) {\n    if (text == null || searchList == null || replacementList == null) {\n        return text;\n    }\n\n    int searchLength = searchList.length;\n    int replacementLength = replacementList.length;\n\n    if (searchLength != replacementLength) {\n        throw new IllegalArgumentException(\"Search and replacement lists must be the same length.\");\n    }\n\n    StringBuilder result = new StringBuilder();\n    int startIndex = 0;\n\n    while (startIndex < text.length()) {\n        int index = -1;\n        int smallestIndex = Integer.MAX_VALUE;\n\n        for (int i = 0; i < searchLength; i++) {\n            // Skip null or empty search strings.\n            if (searchList[i] == null || searchList[i].isEmpty()) {\n                continue;\n            }\n\n            // Find occurrence of search string.\n            int currentIndex = text.indexOf(searchList[i], startIndex);\n\n            // Record index if occurrence is found and occurs earlier than any other search string.\n            if (currentIndex >= 0 && currentIndex < smallestIndex) {\n                smallestIndex = currentIndex;\n                index = i;\n            }\n        }\n\n        if (index == -1) {\n            // No occurrence of search strings found, copy rest of input to output.\n            result.append(text.substring(startIndex));\n            break;\n        }\n\n        // Copy chars in input up to the start index into output.\n        result.append(text.substring(startIndex, smallestIndex));\n\n        // Copy the replacement string for the search string found.\n        if (replacementList[index] != null) {\n            result.append(replacementList[index]);\n        }\n\n        // Advance start index to immediately after the search string found.\n        startIndex = smallestIndex + searchList[index].length();\n    }\n\n    return result.toString();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}