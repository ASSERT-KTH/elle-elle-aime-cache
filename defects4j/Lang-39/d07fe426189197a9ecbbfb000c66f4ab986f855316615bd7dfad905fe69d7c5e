{
    "generation": "/**\n * Replaces all occurrences of Strings within another String.\n * \n * @param text\n *            text to search and replace in, no-op if null\n * @param searchList\n *            the Strings to search for, no-op if null\n * @param replacementList\n *            the Strings to replace them with, no-op if null\n * @param repeat if true, then replace repeatedly \n *       until there are no more possible replacements or timeToLive < 0\n * @param timeToLive\n *            if less than 0 then there is a circular reference and endless\n *            loop\n * @return the text with any replacements processed, <code>null</code> if\n *         null String input\n * @throws IllegalArgumentException\n *             if the search is repeating and there is an endless loop due\n *             to outputs of one being inputs to another\n * @throws IndexOutOfBoundsException\n *             if the lengths of the arrays are not the same (null is ok,\n *             and/or size 0)\n * @since 2.4\n */\nprivate static String replaceEach(String text, String[] searchList, String[] replacementList, \n                                  boolean repeat, int timeToLive) \n{\n    //...\n\n    while (textIndex!= -1) {\n        //...\n\n        start = textIndex + searchList[replaceIndex].length();\n\n        textIndex = -1;\n        replaceIndex = -1;\n        tempIndex = -1;\n        // find the next earliest match\n        for (int i = 0; i < searchLength; i++) {\n            if (noMoreMatchesForReplIndex[i] || searchList[i] == null || \n                searchList[i].length() == 0) {\n                continue;\n            }\n            // Check if replacement is null to avoid NullPointerException\n            if (replacementList[i] == null) {\n                noMoreMatchesForReplIndex[i] = true;\n                continue;\n            }\n            tempIndex = text.indexOf(searchList[i], start);\n\n            // see if we need to keep searching for this\n            if (tempIndex == -1) {\n                noMoreMatchesForReplIndex[i] = true;\n            } else {\n                if (textIndex == -1 || tempIndex < textIndex) {\n                    textIndex = tempIndex;\n                    replaceIndex = i;\n                }\n            }\n        }\n    }\n    //...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}