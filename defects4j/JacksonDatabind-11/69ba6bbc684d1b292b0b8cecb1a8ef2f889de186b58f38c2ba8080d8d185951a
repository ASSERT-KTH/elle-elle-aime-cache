{
    "generation": "protected JavaType _fromVariable(TypeVariable<?> type, TypeBindings context)\n{\n    final String name = type.getName();\n    // 19-Mar-2015: Without context, all we can check are bounds.\n    if (context == null) {\n        // And to prevent infinite loops, now need this:\n        return _unknownType();\n    } else {\n        // Attempt to resolve using context.\n        JavaType actualType = context.findType(name);\n        if (actualType != null) {\n            return actualType;\n        }\n    }\n\n    // Add a placeholder to avoid infinite loops on recursive types\n    context._addPlaceholder(name);\n\n    Type[] bounds = type.getBounds();\n    if (bounds == null || bounds.length == 0) {\n        // If no bounds are specified, default to Object\n        return _constructType(Object.class, context);\n    } else if (bounds.length == 1) {\n        // Single bound, use it directly\n        return _constructType(bounds[0], context);\n    } else {\n        // Multiple bounds: use the first bound\n        // (in most type systems, this is the primary bound)\n        return _constructType(bounds[0], context);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}