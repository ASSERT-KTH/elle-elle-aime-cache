{
    "generation": "protected JavaType _fromVariable(TypeVariable<?> type, TypeBindings context)\n{\n    final String name = type.getName();\n    if (context == null) {\n        return _unknownType();\n    } else {\n        JavaType actualType = context.findType(name);\n        if (actualType != null) {\n            return actualType;\n        }\n    }\n\n    Type[] bounds = type.getBounds();\n\n    // If there are no bounds, return unknown type\n    if (bounds.length == 0) {\n        return _unknownType();\n    }\n\n    // Add placeholder to prevent infinite recursion\n    context._addPlaceholder(name);\n\n    // Attempt to construct type from the first bound\n    JavaType resolvedType = _constructType(bounds[0], context);\n\n    // If resolved type is still a TypeVariable, return unknown type\n    if (resolvedType.getRawClass() == TypeVariable.class) {\n        return _unknownType();\n    }\n\n    return resolvedType;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}