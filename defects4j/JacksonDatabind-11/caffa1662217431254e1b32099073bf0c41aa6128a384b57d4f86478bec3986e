{
    "generation": "    protected JavaType _fromVariable(TypeVariable<?> type, TypeBindings context)\n    {\n        final String name = type.getName();\n        // 19-Mar-2015: Without context, all we can check are bounds.\n        if (context == null) {\n            // And to prevent infinite loops, now need this:\n            return _unknownType();\n        } else {\n            // Check if the context can resolve the type variable\n            JavaType actualType = context.findType(name);\n            if (actualType != null) {\n                return actualType;\n            }\n        }\n\n        Type[] bounds = type.getBounds();\n        // Handle edge case: If bounds are empty, default to Object type\n        if (bounds == null || bounds.length == 0) {\n            return _constructType(Object.class, context);\n        }\n\n        // Prevent recursive types from causing issues by adding placeholders\n        context._addPlaceholder(name);\n\n        // Use the first bound to construct the type\n        return _constructType(bounds[0], context);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}