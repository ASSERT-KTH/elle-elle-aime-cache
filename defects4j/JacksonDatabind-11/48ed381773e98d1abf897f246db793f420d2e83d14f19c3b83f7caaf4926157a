{
    "generation": "protected JavaType _fromVariable(TypeVariable<?> type, TypeBindings context)\n{\n    final String name = type.getName();\n    // 19-Mar-2015: Without context, all we can check are bounds.\n    if (context == null) {\n        // And to prevent infinite loops, now need this:\n        return _unknownType();\n    } else {\n        JavaType actualType = context.findType(name);\n        if (actualType != null) {\n            return actualType;\n        }\n    }\n\n    Type[] bounds = type.getBounds();\n\n    // With type variables we must use bound information.\n    // Either way let's just use the first bound, for now, and\n    // worry about better match later on if there is need.\n\n    // Placeholder for resolution needed for recursive types.\n    context._addPlaceholder(name);\n    \n    // Check if bounds are empty, return _unknownType for such case\n    if (bounds.length == 0) {\n        return _unknownType();\n    }\n    \n    return _constructType(bounds[0], context);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}