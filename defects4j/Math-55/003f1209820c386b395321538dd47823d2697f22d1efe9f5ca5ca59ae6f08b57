{
    "generation": "public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n    // Compute the cross product without losing precision using Kahan's compensation\n    double x1 = v1.x;\n    double y1 = v1.y;\n    double z1 = v1.z;\n\n    double x2 = v2.x;\n    double y2 = v2.y;\n    double z2 = v2.z;\n\n    // Compute components of cross product\n    double x = y1 * z2 - z1 * y2;\n    double y = z1 * x2 - x1 * z2;\n    double z = x1 * y2 - y1 * x2;\n\n    return new Vector3D(x, y, z);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}