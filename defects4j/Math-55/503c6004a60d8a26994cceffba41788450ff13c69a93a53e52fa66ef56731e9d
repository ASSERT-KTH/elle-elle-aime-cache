{
    "generation": "/** Compute the cross-product of two vectors.\n * @param v1 first vector\n * @param v2 second vector\n * @return the cross product v1 ^ v2 as a new Vector\n */\npublic static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n\n    // Compute v1.v2 and v2.v2\n    double dotProductV1V2 = v1.dotProduct(v2);\n    double dotProductV2V2 = v2.dotProduct(v2);\n\n    // Rescale both vectors without losing precision to ensure their norms are the same order of magnitude\n    double rho = dotProductV1V2 / dotProductV2V2;\n    Vector3D v3 = v1.subtract(v2.scalarMultiply(rho));\n\n    // Compute cross product from v3 and v2 instead of v1 and v2\n    return new Vector3D(v3.getY() * v2.getZ() - v3.getZ() * v2.getY(), \n                        v3.getZ() * v2.getX() - v3.getX() * v2.getZ(), \n                        v3.getX() * v2.getY() - v3.getY() * v2.getX());\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}