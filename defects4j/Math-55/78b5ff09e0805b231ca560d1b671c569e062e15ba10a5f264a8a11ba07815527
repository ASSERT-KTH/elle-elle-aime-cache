{
    "generation": "public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n    Vector3D v3 = v1.scalarMultiply(1.0); // Make a copy of v1\n    if (v1.getNorm() < v2.getNorm()) {\n        // Ensure that v1 has larger or equal norm compared to v2\n        Vector3D temp = v1;\n        v1 = v2;\n        v2 = temp;\n    }\n\n    double rho = v1.dot(v2) / v2.dot(v2);\n    v3 = v3.subtract(v2.scalarMultiply(rho));\n\n    // Compute cross product from v3 and v2 instead of v1 and v2\n    return new Vector3D(v3.y * v2.z - v3.z * v2.y, v3.z * v2.x - v3.x * v2.z, v3.x * v2.y - v3.y * v2.x);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}