{
    "generation": "/** Compute the cross-product of two vectors.\n * @param v1 first vector\n * @param v2 second vector\n * @return the cross product v1 ^ v2 as a new Vector\n */\npublic static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n    // compute a value for rho as described in Kahan lecture notes\n    // http://www.cs.berkeley.edu/~wkahan/MathH110/Cross.pdf\n    double normv1 = v1.norm();\n    double normv2 = v2.norm();\n    if (normv1 < 0.1 * normv2) {\n        double alpha = 0.5 * v1.dotProduct(v2);\n        Vector3D u2  = new Vector3D(alpha / normv2, v2);\n        Vector3D u3  = new Vector3D(v1, u2);\n        return u3.crossProduct(v2);\n    } else {\n        return new Vector3D(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}