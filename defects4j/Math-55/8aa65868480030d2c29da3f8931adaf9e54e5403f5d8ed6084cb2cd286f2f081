{
    "generation": "public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n    final double x1 = v1.x;\n    final double y1 = v1.y;\n    final double z1 = v1.z;\n    final double x2 = v2.x;\n    final double y2 = v2.y;\n    final double z2 = v2.z;\n\n    // compute rho as an 8 bits approximation of v1.v2 / v2.v2\n    final double dot = v1.dotProduct(v2);\n    final double rho = dot / v2.normSq();\n\n    // compute v3\n    final double v3x = x1 - rho * x2;\n    final double v3y = y1 - rho * y2;\n    final double v3z = z1 - rho * z2;\n\n    // compute cross product from v3 and v2 instead of v1 and v2\n    return new Vector3D(v3y * z2 - v3z * y2, v3z * x2 - v3x * z2, v3x * y2 - v3y * x2);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}