{
    "generation": "  public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n\n      // compute rho as an 8 bits approximation of v1.v2 / v2.v2\n      double dotProductV1V2 = v1.dotProduct(v2);\n      double dotProductV2V2 = v2.dotProduct(v2);\n      double rho = Math.round(dotProductV1V2 / dotProductV2V2 * 256.0) / 256.0;\n      \n      // replace v1 by v3 = v1 - rho * v2\n      Vector3D v3 = new Vector3D(1.0, v1, -rho, v2);\n      \n      // compute cross product from v3 and v2\n      return new Vector3D(v3.y * v2.z - v3.z * v2.y, v3.z * v2.x - v3.x * v2.z, v3.x * v2.y - v3.y * v2.x);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}