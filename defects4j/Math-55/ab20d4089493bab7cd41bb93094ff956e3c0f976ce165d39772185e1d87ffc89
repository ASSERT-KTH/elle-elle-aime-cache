{
    "generation": "  public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n      // Compute the cross product with cancellation error handling\n      double rescale = v1.getNorm() / v2.getNorm();\n      double rho = v1.dotProduct(v2) / v2.dotProduct(v2);\n\n      // Precondition v1 to minimize cancellation errors\n      double x1 = v1.getX() - rho * v2.getX();\n      double y1 = v1.getY() - rho * v2.getY();\n      double z1 = v1.getZ() - rho * v2.getZ();\n\n      // Compute the cross product using v1' instead of v1\n      return new Vector3D(\n          y1 * v2.getZ() - z1 * v2.getY(),\n          z1 * v2.getX() - x1 * v2.getZ(),\n          x1 * v2.getY() - y1 * v2.getX()\n      );\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}