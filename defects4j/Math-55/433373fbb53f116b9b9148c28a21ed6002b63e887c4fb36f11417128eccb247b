{
    "generation": "/** Compute the cross-product of two vectors.\n * @param v1 first vector\n * @param v2 second vector\n * @return the cross product v1 ^ v2 as a new Vector\n */\npublic static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n    // Compute rho as an 8 bits approximation of v1.v2 / v2.v2\n    double v1v2 = v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\n    double v2v2 = v2.x * v2.x + v2.y * v2.y + v2.z * v2.z;\n    double rho = FastMath.rint(v1v2 / v2v2 * 256) / 256;\n\n    // Compute v3 = v1 - rho * v2\n    double v3x = v1.x - rho * v2.x;\n    double v3y = v1.y - rho * v2.y;\n    double v3z = v1.z - rho * v2.z;\n\n    // Compute cross product from v3 and v2\n    return new Vector3D(v3y * v2.z - v3z * v2.y, v3z * v2.x - v3x * v2.z, v3x * v2.y - v3y * v2.x);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}