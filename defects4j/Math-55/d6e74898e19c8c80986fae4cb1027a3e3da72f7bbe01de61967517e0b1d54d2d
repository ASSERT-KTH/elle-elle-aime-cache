{
    "generation": "  /** Compute the cross-product of two vectors.\n   * @param v1 first vector\n   * @param v2 second vector\n   * @return the cross product v1 ^ v2 as a new Vector\n   */\n  public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n      // compute rho as an 8 bit approximation of v1.v2 / v2.v2\n      double rho = Math.rint(v1.dotProduct(v2) / v2.dotProduct(v2) * 256) / 256;\n\n      // compute new v3 vector to reduce precision errors\n      double v3x = v1.x - rho * v2.x;\n      double v3y = v1.y - rho * v2.y;\n      double v3z = v1.z - rho * v2.z;\n\n      // compute cross product from v3 and v2\n      return new Vector3D(\n          v3y * v2.z - v3z * v2.y,\n          v3z * v2.x - v3x * v2.z,\n          v3x * v2.y - v3y * v2.x\n      );\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}