{
    "generation": "public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\n    // Compute the cross product\n    double x = v1.y * v2.z - v1.z * v2.y;\n    double y = v1.z * v2.x - v1.x * v2.z;\n    double z = v1.x * v2.y - v1.y * v2.x;\n\n    // Find the maximum absolute value among x, y, and z\n    double max = Math.max(Math.abs(x), Math.max(Math.abs(y), Math.abs(z)));\n\n    if (max > 0) {\n        // Scale up the result to avoid underflow, then scale back down\n        double scale = Math.pow(2, 100);\n        x = x / max * scale;\n        y = y / max * scale;\n        z = z / max * scale;\n        return new Vector3D(x, y, z).normalize();\n    } else {\n        // If all components are zero, return a zero vector\n        return new Vector3D(0, 0, 0);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}