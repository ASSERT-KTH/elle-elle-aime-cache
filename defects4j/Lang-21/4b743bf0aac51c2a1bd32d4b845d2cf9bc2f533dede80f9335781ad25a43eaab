{
    "generation": "    /**\n     * <p>Checks if two calendar objects represent the same local time.</p>\n     *\n     * <p>This method compares the values of the fields of the two objects.\n     * In addition, both calendars must be of the same type.</p>\n     * \n     * @param cal1  the first calendar, not altered, not null\n     * @param cal2  the second calendar, not altered, not null\n     * @return true if they represent the same local time\n     * @throws IllegalArgumentException if either date is <code>null</code>\n     * @since 2.1\n     */\n    public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {\n        if (cal1 == null || cal2 == null) {\n            throw new IllegalArgumentException(\"The date must not be null\");\n        }\n        \n        // Normalize the TimeZones to the same reference, keeping the local time values the same\n        TimeZone tz1 = cal1.getTimeZone();\n        TimeZone tz2 = cal2.getTimeZone();\n        Calendar normalizedCal1 = Calendar.getInstance(tz1);\n        Calendar normalizedCal2 = Calendar.getInstance(tz1);\n        normalizedCal1.setTimeInMillis(cal1.getTimeInMillis());\n        normalizedCal2.setTimeInMillis(cal2.getTimeInMillis());\n        \n        return (normalizedCal1.get(Calendar.MILLISECOND) == normalizedCal2.get(Calendar.MILLISECOND) &&\n                normalizedCal1.get(Calendar.SECOND) == normalizedCal2.get(Calendar.SECOND) &&\n                normalizedCal1.get(Calendar.MINUTE) == normalizedCal2.get(Calendar.MINUTE) &&\n                normalizedCal1.get(Calendar.HOUR_OF_DAY) == normalizedCal2.get(Calendar.HOUR_OF_DAY) &&\n                normalizedCal1.get(Calendar.DAY_OF_YEAR) == normalizedCal2.get(Calendar.DAY_OF_YEAR) &&\n                normalizedCal1.get(Calendar.YEAR) == normalizedCal2.get(Calendar.YEAR) &&\n                normalizedCal1.get(Calendar.ERA) == normalizedCal2.get(Calendar.ERA) &&\n                cal1.getClass() == cal2.getClass());\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}