{
    "generation": "/**\n * <p>Checks if two calendar objects represent the same local time.</p>\n *\n * <p>This method compares the values of the fields of the two objects.\n * In addition, both calendars must be the same of the same type.</p>\n * \n * @param cal1  the first calendar, not altered, not null\n * @param cal2  the second calendar, not altered, not null\n * @return true if they represent the same millisecond instant\n * @throws IllegalArgumentException if either date is <code>null</code>\n * @since 2.1\n */\npublic static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {\n    if (cal1 == null || cal2 == null) {\n        throw new IllegalArgumentException(\"The date must not be null\");\n    }\n    // Ensure both calendars are set to the same time zone for a fair comparison\n    Calendar cal1Clone = (Calendar) cal1.clone();\n    Calendar cal2Clone = (Calendar) cal2.clone();\n    cal1Clone.setTimeZone(cal2Clone.getTimeZone());\n    \n    return cal1Clone.getTimeInMillis() == cal2Clone.getTimeInMillis();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}