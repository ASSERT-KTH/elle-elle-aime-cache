{
    "generation": "class PatriciaTrie<K, V> implements Trie<K, V> {\n    \n    // ... other existing code ...\n\n    @Override\n    public SortedMap<K, V> prefixMap(K prefix) {\n        final PatriciaTrie<K, V> prefixMap = new PatriciaTrie<>();\n        SortedMap<K, V> result = prefixMap;\n        for (Entry<K, V> entry : entrySet()) {\n            if (startsWith(entry.getKey(), prefix)) {\n                prefixMap.put(entry.getKey(), entry.getValue());\n            }\n        }\n        return new AbstractMap<K, V>() {\n            @Override\n            public Set<Entry<K, V>> entrySet() {\n                return prefixMap.entrySet();\n            }\n\n            @Override\n            public void clear() {\n                for (K key : prefixMap.keySet()) {\n                    PatriciaTrie.this.remove(key);\n                }\n                prefixMap.clear();\n            }\n\n            // ... other overridden methods ...\n        };\n    }\n\n    // ... other existing code ...\n\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}