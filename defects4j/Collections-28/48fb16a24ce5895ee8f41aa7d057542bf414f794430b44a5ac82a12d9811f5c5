{
    "generation": "public SortedMap<K, V> prefixMap(final K key) {\n    return new PrefixTree<K, V>(this, key);\n}\n\nprivate class PrefixTree<K, V> extends AbstractMap<K, V> implements SortedMap<K, V> {\n    private final PatriciaTrie<K, V> trie;\n    private final K prefix;\n\n    public PrefixTree(final PatriciaTrie<K, V> trie, final K prefix) {\n        this.trie = trie;\n        this.prefix = prefix;\n    }\n\n    @Override\n    public void clear() {\n        Iterator<Map.Entry<K, V>> iterator = entrySet().iterator();\n        while (iterator.hasNext()) {\n            iterator.next();\n            iterator.remove();\n        }\n    }\n\n    // ... other methods remain unchanged\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}