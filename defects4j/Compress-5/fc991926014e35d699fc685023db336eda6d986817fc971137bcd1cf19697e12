{
    "generation": "public int read(byte[] buffer, int start, int length) throws IOException {\n    if (closed) {\n        throw new IOException(\"The stream is closed\");\n    }\n    if (inf.finished() || current == null) {\n        return -1;\n    }\n\n    // Validate buffer parameters\n    if (start < 0 || length < 0 || start + length > buffer.length || start + length < 0) {\n        throw new IndexOutOfBoundsException();\n    }\n\n    if (current.getMethod() == ZipArchiveOutputStream.STORED) {\n        int csize = (int) current.getSize();\n        if (readBytesOfEntry >= csize) {\n            return -1;\n        }\n\n        if (offsetInBuffer >= lengthOfLastRead) {\n            offsetInBuffer = 0;\n            lengthOfLastRead = in.read(buf);\n            if (lengthOfLastRead == -1) {\n                return -1;\n            }\n            count(lengthOfLastRead);\n            bytesReadFromStream += lengthOfLastRead;\n        }\n\n        int toRead = Math.min(length, lengthOfLastRead - offsetInBuffer);\n        toRead = Math.min(toRead, csize - readBytesOfEntry);\n\n        if (toRead <= 0) {\n            throw new IOException(\"Truncated ZIP file\");\n        }\n\n        System.arraycopy(buf, offsetInBuffer, buffer, start, toRead);\n        offsetInBuffer += toRead;\n        readBytesOfEntry += toRead;\n        crc.update(buffer, start, toRead);\n        return toRead;\n    } else {\n        if (inf.needsInput()) {\n            fill();\n            if (lengthOfLastRead > 0) {\n                bytesReadFromStream += lengthOfLastRead;\n            }\n        }\n        int read = 0;\n        try {\n            read = inf.inflate(buffer, start, length);\n        } catch (DataFormatException e) {\n            throw new ZipException(e.getMessage());\n        }\n        if (read == 0 && inf.finished()) {\n            return -1;\n        }\n        if (read < 0) {\n            throw new IOException(\"Truncated ZIP file\");\n        }\n        crc.update(buffer, start, read);\n        readBytesOfEntry += read;\n        return read;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}