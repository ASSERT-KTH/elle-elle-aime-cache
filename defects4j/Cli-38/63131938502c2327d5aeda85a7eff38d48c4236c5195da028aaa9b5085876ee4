{
    "generation": "/**\n * Tells if the token looks like a short option.\n * \n * @param token\n */\nprivate boolean isShortOption(String token)\n{\n    // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n    if (!token.startsWith(\"-\") || token.length() < 2)\n    {\n        return false;\n    }\n\n    // remove leading \"-\"\n    String optNames = token.substring(1);\n    \n    // check for several concatenated short options\n    for (int i = 0; i < optNames.length(); i++) {\n        String optName = optNames.substring(0, i + 1);\n        int pos = optName.indexOf(\"=\");\n        if (pos!= -1) {\n            optName = optName.substring(0, pos);\n        }\n        if (!options.hasShortOption(optName)) {\n            return false;\n        }\n        if (i < optNames.length() - 1 && optNames.charAt(i + 1) == '=') {\n            break; // value assignment, stop checking further chars\n        }\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}