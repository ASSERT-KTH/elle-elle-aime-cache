{
    "generation": "    /**\n     * Tells if the token looks like a short option.\n     *\n     * @param token\n     */\n    private boolean isShortOption(String token)\n    {\n        // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n        if (!token.startsWith(\"-\") || token.length() == 1)\n        {\n            return false;\n        }\n\n        // check for several concatenated short options\n        token = token.substring(1);\n        while (token.length() > 0) {\n            int pos = token.indexOf(\"=\");\n            String optName;\n\n            if (pos == -1) {\n                optName = token.substring(0, 1);\n                token = token.substring(1);\n            } else {\n                optName = token.substring(0, pos);\n                token = token.substring(pos+1);\n                break;\n            }\n\n            if (!options.hasShortOption(optName)) {\n                return false;\n            }\n        }\n        return !token.isEmpty();  // Return true only if token processing leaves nothing\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}