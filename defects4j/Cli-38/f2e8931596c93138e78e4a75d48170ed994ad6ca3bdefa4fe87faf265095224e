{
    "generation": "/**\n * Tells if the token looks like a short option.\n * \n * @param token\n */\nprivate boolean isShortOption(String token) {\n    // short options (-S, -SV, -S=V, -SV1=V2, -S1S2)\n    if (!token.startsWith(\"-\") || token.length() < 2) {\n        return false;\n    }\n\n    // remove leading \"-\" \n    String optName = token.substring(1);\n\n    // check if token contains concatenated short options\n    for (char c : optName.toCharArray()) {\n        if (c == '=') {\n            break; // stop checking if '=' is found (short opt with value)\n        }\n        String shortOpt = String.valueOf(c);\n        if (!options.hasShortOption(shortOpt)) {\n            return false; // token contains a non-existent short option\n        }\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}