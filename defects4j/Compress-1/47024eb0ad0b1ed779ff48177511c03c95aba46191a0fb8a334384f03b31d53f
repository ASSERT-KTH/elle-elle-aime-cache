{
    "generation": "/**\n * Closes the CPIO output stream as well as the stream being filtered.\n * \n * @throws IOException\n *             if an I/O error has occurred or if a CPIO file error has\n *             occurred\n */\npublic void close() throws IOException {\n    if (!this.closed) {\n        this.closed = true;\n        try {\n            super.close();\n        } finally {\n            // Ensure the underlying stream is closed, even if an exception is thrown.\n            // However, the following line was added because the original code does not \n            // handle the case when the underlying stream does not have a close method\n            if (this.out instanceof Closeable) {\n                ((Closeable) this.out).close();\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}