{
    "generation": "/**\n * Closes the CPIO output stream as well as the stream being filtered.\n * \n * @throws IOException\n *             if an I/O error has occurred or if a CPIO file error has\n *             occurred\n */\npublic void close() throws IOException {\n    if (!this.closed) {\n        this.closed = true; // set closed flag before closing streams\n        try {\n            super.close(); // close superclass stream\n        } finally {\n            // ensure underlying stream is closed, even if super.close() throws\n            if (out!= null) { // assuming 'out' is the underlying stream\n                out.close();\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}