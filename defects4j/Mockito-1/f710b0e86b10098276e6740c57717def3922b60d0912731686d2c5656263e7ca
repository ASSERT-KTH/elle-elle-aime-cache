{
    "generation": "public void captureArgumentsFrom(Invocation invocation) {\n    if (invocation.getMethod().isVarArgs()) {\n        int indexOfVararg = invocation.getMethod().getParameterTypes().length - 1;\n        Object varargArray = invocation.getArgumentAt(indexOfVararg, Object.class);\n\n        if (matchers.size() > indexOfVararg) {\n            Matcher m = matchers.get(indexOfVararg);\n            if (m instanceof CapturesArguments) {\n                if (varargArray!= null) {\n                    int length = Array.getLength(varargArray);\n                    for (int i = 0; i < length; i++) {\n                        ((CapturesArguments) m).captureFrom(Array.get(varargArray, i));\n                    }\n                } else {\n                    ((CapturesArguments) m).captureFrom(null);\n                }\n            }\n        }\n\n        for (int position = 0; position < indexOfVararg; position++) {\n            Matcher m = matchers.get(position);\n            if (m instanceof CapturesArguments) {\n                ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n            }\n        }\n\n    } else {\n        for (int position = 0; position < matchers.size(); position++) {\n            Matcher m = matchers.get(position);\n            if (m instanceof CapturesArguments) {\n                ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}