{
    "generation": "public void captureArgumentsFrom(Invocation invocation) {\n    if (invocation.getMethod().isVarArgs() && invocation.getArguments().length > 0) {\n        int indexOfVararg = invocation.getRawArguments().length - 1;\n        Object varargArray = invocation.getRawArguments()[indexOfVararg];\n\n        for (int i = 0; i < Array.getLength(varargArray); i++) {\n            Object arg = Array.get(varargArray, i);\n            for (Matcher m : matchers) {\n                if (m instanceof CapturesArguments) {\n                    ((CapturesArguments) m).captureFrom(arg);\n                }\n            }\n        }\n    } else {\n        for (int position = 0; position < invocation.getArguments().length; position++) {\n            Object arg = invocation.getArgumentAt(position, Object.class);\n            for (Matcher m : matchers) {\n                if (m instanceof CapturesArguments) {\n                    ((CapturesArguments) m).captureFrom(arg);\n                }\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}