{
    "generation": "    public void captureArgumentsFrom(Invocation invocation) {\n        Object[] arguments = invocation.getRawArguments();\n        boolean wasVarargsCaptured = false;\n        if (invocation.getMethod().isVarArgs()) {\n            int indexOfVararg = arguments.length - 1;\n            for (int position = 0; position < matchers.size(); position++) {\n                Matcher m = matchers.get(position);\n                if (m instanceof CapturesArguments && position == indexOfVararg && isVarargMatcher(m)) {\n                    Object array = arguments[position];\n                    for (int i = 0; i < Array.getLength(array); i++) {\n                        ((CapturesArguments) m).captureFrom(Array.get(array, i));\n                    }\n                    wasVarargsCaptured = true;\n                    break;\n                }\n            }\n            if (!wasVarargsCaptured) {\n                throw new UnsupportedOperationException();\n            }\n        } else {\n            for (int position = 0; position < matchers.size(); position++) {\n                Matcher m = matchers.get(position);\n                if (m instanceof CapturesArguments) {\n                    ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n                }\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}