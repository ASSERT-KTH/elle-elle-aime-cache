{
    "generation": "public void captureArgumentsFrom(Invocation invocation) {\n    if (invocation.getMethod().isVarArgs()) {\n        int indexOfVararg = invocation.getRawArguments().length - 1;\n        Object varargsArray = invocation.getRawArguments()[indexOfVararg];\n\n        for (int position = 0; position < matchers.size(); position++) {\n            Matcher m = matchers.get(position);\n            if (m instanceof CapturesArguments) {\n                if (position == indexOfVararg) {\n                    if (isVarargMatcher(m) && varargsArray != null && varargsArray.getClass().isArray()) {\n                        int arrayLength = Array.getLength(varargsArray);\n                        for (int varargIndex = 0; varargIndex < arrayLength; varargIndex++) {\n                            Object eachVararg = Array.get(varargsArray, varargIndex);\n                            ((CapturesArguments) m).captureFrom(eachVararg);\n                        }\n                    }\n                } else {\n                    ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n                }\n            }\n        }\n    } else {\n        for (int position = 0; position < matchers.size(); position++) {\n            Matcher m = matchers.get(position);\n            if (m instanceof CapturesArguments) {\n                ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}