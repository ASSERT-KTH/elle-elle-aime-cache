{
    "generation": "    public void captureArgumentsFrom(Invocation invocation) {\n        for (int position = 0; position < matchers.size(); position++) {\n            Matcher m = matchers.get(position);\n            if (m instanceof CapturesArguments) {\n                if (invocation.getMethod().isVarArgs()) {\n                    Object[] rawArguments = invocation.getRawArguments();\n                    int varArgsStart = rawArguments.length - 1; // assuming the vararg is the last argument\n                    if (varArgsStart > 0) { // if there are varargs starting at the last position\n                        Object varArgsArray = rawArguments[varArgsStart];\n                        if (varArgsArray != null) {\n                            int varArgsLength = Array.getLength(varArgsArray);\n                            for (int i = 0; i < varArgsLength; i++) {\n                                ((CapturesArguments) m).captureFrom(Array.get(varArgsArray, i));\n                            }\n                        } else {\n                            ((CapturesArguments) m).captureFrom(null);\n                        }\n                    } else {\n                        ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n                    }\n                } else {\n                    ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n                }\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}