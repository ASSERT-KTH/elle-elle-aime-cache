{
    "generation": "    public void captureArgumentsFrom(Invocation invocation) {\n        if (invocation.getMethod().isVarArgs()) {\n            int indexOfVararg = invocation.getRawArguments().length - 1;\n            Matcher varargMatcher = matchers.get(indexOfVararg);\n\n            // Check if the matcher is of type CapturesArguments\n            if (varargMatcher instanceof CapturesArguments) {\n                Object[] args = invocation.getRawArguments();\n                Object varargArray = args[indexOfVararg];\n\n                // Capture each element of the vararg array\n                for (int i = 0; i < Array.getLength(varargArray); i++) {\n                    ((CapturesArguments) varargMatcher).captureFrom(Array.get(varargArray, i));\n                }\n                return; // Since we've captured all varargs, there's no need to process other matchers\n            }\n        } else {\n            for (int position = 0; position < matchers.size(); position++) {\n                Matcher m = matchers.get(position);\n                if (m instanceof CapturesArguments) {\n                    ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n                }\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}