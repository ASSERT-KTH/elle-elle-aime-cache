{
    "generation": "public void captureArgumentsFrom(Invocation invocation) {\n    if (invocation.getMethod().isVarArgs()) {\n        int indexOfVararg = invocation.getRawArguments().length - 1;\n        Object array = invocation.getRawArguments()[indexOfVararg];\n        int varargLength = Array.getLength(array);\n        \n        for (int position = 0; position < matchers.size(); position++) {\n            Matcher m = matchers.get(position);\n            if (m instanceof CapturesArguments) {\n                if (position == indexOfVararg) {\n                    // Handle varargs\n                    for (int i = 0; i < varargLength; i++) {\n                        ((CapturesArguments) m).captureFrom(Array.get(array, i));\n                    }\n                } else if (position < invocation.getRawArguments().length) {\n                    // Handle regular arguments\n                    ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);\n                }\n            }\n        }\n    } else {\n        for (int position = 0; position < matchers.size(); position++) {\n            Matcher m = matchers.get(position);\n            if (m instanceof CapturesArguments && position < invocation.getRawArguments().length) {\n                ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}