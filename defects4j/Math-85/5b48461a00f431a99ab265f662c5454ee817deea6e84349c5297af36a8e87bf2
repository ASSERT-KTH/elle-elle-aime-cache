{
    "generation": "public static double[] bracket(UnivariateRealFunction function,\n        double initial, double lowerBound, double upperBound, \n        int maximumIterations) throws ConvergenceException, \n        FunctionEvaluationException {\n    \n    if (function == null) {\n        throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n    }\n    if (maximumIterations <= 0)  {\n        throw MathRuntimeException.createIllegalArgumentException(\n              \"bad value for maximum iterations number: {0}\", maximumIterations);\n    }\n    if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n        throw MathRuntimeException.createIllegalArgumentException(\n              \"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n              lowerBound, initial, upperBound);\n    }\n    double a = initial;\n    double b = initial;\n    double fa;\n    double fb;\n    int numIterations = 0 ;\n\n    do {\n        // Adjust a to the left\n        a = Math.max(a - 1.0, lowerBound);\n        fa = function.value(a);\n        \n        // If a has reached the lower bound and fa * f(initial) <= 0, we can stop\n        if (a == lowerBound && fa * function.value(initial) <= 0) {\n            b = initial;\n            fb = function.value(b);\n            break;\n        }\n        \n        // Adjust b to the right\n        b = Math.min(b + 1.0, upperBound);\n        fb = function.value(b);\n        \n        // If b has reached the upper bound and f(initial) * fb <= 0, we can stop\n        if (b == upperBound && function.value(initial) * fb <= 0) {\n            a = initial;\n            fa = function.value(a);\n            break;\n        }\n        \n        numIterations++ ;\n    } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && \n            (a > lowerBound || b < upperBound));\n   \n    if (fa * fb > 0.0 ) {\n        throw new ConvergenceException(\n                  \"number of iterations={0}, maximum iterations={1}, \" +\n                  \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n                  \"final b value={6}, f(a)={7}, f(b)={8}\",\n                  numIterations, maximumIterations, initial,\n                  lowerBound, upperBound, a, b, fa, fb);\n    }\n    \n    // Ensure a < b\n    if (a > b) {\n        double temp = a;\n        a = b;\n        b = temp;\n        double tempF = fa;\n        fa = fb;\n        fb = tempF;\n    }\n    \n    return new double[]{a, b};\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}