{
    "generation": "double a = initial;\ndouble b = initial;\ndouble fa;\ndouble fb;\nint numIterations = 0;\n\ndo {\n    a = Math.max(a - 1.0, lowerBound);\n    b = Math.min(b + 1.0, upperBound);\n    fa = function.value(a);\n    fb = function.value(b);\n    numIterations++;\n} while ((fa * fb > 0.0) && (numIterations < maximumIterations) &&\n         ((a > lowerBound) || (b < upperBound)));\n\nif (fa * fb >= 0.0) {\n    throw new ConvergenceException(\n            \"number of iterations={0}, maximum iterations={1}, \" +\n            \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n            \"final b value={6}, f(a)={7}, f(b)={8}\",\n            numIterations, maximumIterations, initial,\n            lowerBound, upperBound, a, b, fa, fb);\n}\n\nreturn new double[]{a, b};",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}