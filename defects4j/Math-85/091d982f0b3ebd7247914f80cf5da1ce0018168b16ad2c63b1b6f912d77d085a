{
    "generation": "public static double[] bracket(UnivariateRealFunction function,\n        double initial, double lowerBound, double upperBound, \n        int maximumIterations) throws ConvergenceException, \n        FunctionEvaluationException {\n\n    if (function == null) {\n        throw MathRuntimeException.createIllegalArgumentException(\"function is null\");\n    }\n    if (maximumIterations <= 0)  {\n        throw MathRuntimeException.createIllegalArgumentException(\n              \"bad value for maximum iterations number: {0}\", maximumIterations);\n    }\n    if (initial < lowerBound || initial > upperBound || lowerBound >= upperBound) {\n        throw MathRuntimeException.createIllegalArgumentException(\n              \"invalid bracketing parameters:  lower bound={0},  initial={1}, upper bound={2}\",\n              lowerBound, initial, upperBound);\n    }\n    double a = initial - 1.0;\n    double b = initial + 1.0;\n    double fa;\n    double fb;\n    int numIterations = 0 ;\n\n    // handle special case where function values at initial and\n    // lowerBound have the same sign\n    if ((function.value(initial) >= 0) == (function.value(lowerBound) >= 0)) {\n        a = Math.min(initial, lowerBound);\n        b = Math.max(initial, lowerBound);\n        fa = function.value(a);\n        fb = function.value(b);\n        numIterations++;\n\n        while ((fa * fb > 0.0) && (numIterations < maximumIterations)) {\n            a = Math.max(a - 1.0, lowerBound);\n            fa = function.value(a);\n            numIterations++;\n        }\n        // if we hit upper bound, reset and continue search\n        if ((a <= lowerBound) || (fa * fb <= 0.0)) {\n            a = lowerBound;\n            fa = function.value(a);\n            while (fa * fb > 0.0) {\n                b = b + 1.0;\n                fb = function.value(b);\n                numIterations++;\n            }\n        } else {\n            b = a + 1;\n            fb = function.value(b);\n            numIterations++;\n        }\n    } else {\n        a = initial;\n        fa = function.value(a);\n        do {\n            a = Math.max(a - 1.0, lowerBound);\n            fa = function.value(a);\n            b = Math.min(b + 1.0, upperBound);\n            fb = function.value(b);\n            numIterations++ ;\n        } while ((fa * fb > 0.0) && (numIterations < maximumIterations) && \n                ((a > lowerBound) || (b < upperBound)));\n    }\n\n    if (fa * fb >= 0.0 ) {\n        throw new ConvergenceException(\n                  \"number of iterations={0}, maximum iterations={1}, \" +\n                  \"initial={2}, lower bound={3}, upper bound={4}, final a value={5}, \" +\n                  \"final b value={6}, f(a)={7}, f(b)={8}\",\n                  numIterations, maximumIterations, initial,\n                  lowerBound, upperBound, a, b, fa, fb);\n    }\n\n    return new double[]{a, b};\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}