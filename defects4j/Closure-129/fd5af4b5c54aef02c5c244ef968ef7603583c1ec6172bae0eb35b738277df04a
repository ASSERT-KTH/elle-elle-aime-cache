{
    "generation": "/**\n * There are two types of calls we are interested in calls without explicit\n * \"this\" values (what we are call \"free\" calls) and direct call to eval.\n */\nprivate void annotateCalls(Node n) {\n  Preconditions.checkState(n.isCall());\n\n  // Keep track of the \"this\" context of a call.  A call without an\n  // explicit \"this\" is a free call.\n  Node first = n.getFirstChild();\n\n  // Handle property access and method calls\n  if (NodeUtil.isGet(first)) {\n    Node parent = first.getParent();\n    if (parent.isCall() && parent.getFirstChild() == first) {\n      n.putBooleanProp(Node.FREE_CALL, false);\n      return;\n    }\n  }\n\n  // Mark as free call if it's not a property access or method call\n  if (!NodeUtil.isGet(first) && !first.isThis()) {\n    n.putBooleanProp(Node.FREE_CALL, true);\n  }\n\n  // Keep track of the context in which eval is called. It is important\n  // to distinguish between \"(0, eval)()\" and \"eval()\".\n  if (first.isName() &&\n      \"eval\".equals(first.getString())) {\n    first.putBooleanProp(Node.DIRECT_EVAL, true);\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}