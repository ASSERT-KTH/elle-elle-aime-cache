{
    "generation": "/**\n * There are two types of calls we are interested in calls without explicit\n * \"this\" values (what we are call \"free\" calls) and direct call to eval.\n */\nprivate void annotateCalls(Node n) {\n    Preconditions.checkState(n.isCall());\n\n    // Keep track of the \"this\" context of a call.  A call without an\n    // explicit \"this\" is a free call.\n    Node first = n.getFirstChild();\n\n    // Skip cast nodes.\n    if (first.isCast()) {\n        first = first.getFirstChild();\n    }\n\n    // Check if the call is a method call or a property access.\n    if (NodeUtil.isGet(first) || NodeUtil.isGetProp(first)) {\n        // If it's a method call or property access, it's not a free call.\n        n.putBooleanProp(Node.FREE_CALL, false);\n    } else {\n        // Otherwise, it's a free call.\n        n.putBooleanProp(Node.FREE_CALL, true);\n    }\n\n    // Keep track of the context in which eval is called. It is important\n    // to distinguish between \"(0, eval)()\" and \"eval()\".\n    if (first.isName() && \"eval\".equals(first.getString())) {\n        first.putBooleanProp(Node.DIRECT_EVAL, true);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}