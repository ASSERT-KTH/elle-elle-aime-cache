{
    "generation": "private void annotateCalls(Node n) {\n  Preconditions.checkState(n.isCall());\n\n  // Keep track of of the \"this\" context of a call.  A call without an\n  // explicit \"this\" is a free call.\n  Node first = n.getFirstChild();\n\n  // Fix the issue: Ignore all nodes that are not NAME or GET nodes\n  if (!(first.isName() || NodeUtil.isGet(first))) {\n    n.putBooleanProp(Node.FREE_CALL, true);\n  }\n\n  // Keep track of the context in which eval is called. It is important\n  // to distinguish between \"(0, eval)()\" and \"eval()\".\n  if (first.isName() && \"eval\".equals(first.getString())) {\n    first.putBooleanProp(Node.DIRECT_EVAL, true);\n  } else if (NodeUtil.isGet(first) && first.getFirstChild().isName() && \"eval\".equals(first.getFirstChild().getString())) {\n    // Add this block to handle the case where eval is called indirectly such as via a GETPROP\n    first.getFirstChild().putBooleanProp(Node.DIRECT_EVAL, true);\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}