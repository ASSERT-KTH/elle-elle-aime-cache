{
    "generation": "  /**\n   * Visits the parameters of a CALL or a NEW node.\n   */\n  private void visitParameterList(NodeTraversal t, Node call,\n      FunctionType functionType) {\n    Iterator<Node> arguments = call.children().iterator();\n    arguments.next(); // skip the function name\n\n    Iterator<Node> parameters = functionType.getParameters().iterator();\n    int ordinal = 0;\n    Node parameter = null;\n    Node argument = null;\n    boolean isVarArgs = functionType.isVarArgs();\n\n    while (arguments.hasNext()) {\n      argument = arguments.next();\n      ordinal++;\n\n      if (parameters.hasNext()) {\n        parameter = parameters.next();\n        validator.expectArgumentMatchesParameter(t, argument,\n            getJSType(argument), getJSType(parameter), call, ordinal);\n      } else if (isVarArgs) {\n        // For var_args, we need to check against the var_args type\n        Node varArgsParameter = functionType.getParameters().get(functionType.getParameters().size() - 1);\n        JSType varArgsType = getJSType(varArgsParameter);\n        validator.expectArgumentMatchesParameter(t, argument,\n            getJSType(argument), varArgsType, call, ordinal);\n      } else {\n        // If there are no more parameters and it's not a var_args function,\n        // the extra arguments should be reported as errors\n        report(t, argument, WRONG_ARGUMENT_COUNT,\n                validator.getReadableJSTypeName(call.getFirstChild(), false),\n                String.valueOf(call.getChildCount() - 1),\n                String.valueOf(functionType.getMinArguments()),\n                functionType.getMaxArguments() != Integer.MAX_VALUE ?\n                \" and no more than \" + functionType.getMaxArguments() + \" argument(s)\" : \"\");\n        break;\n      }\n    }\n\n    int numArgs = call.getChildCount() - 1;\n    int minArgs = functionType.getMinArguments();\n    int maxArgs = functionType.getMaxArguments();\n    if (minArgs > numArgs || (!isVarArgs && maxArgs < numArgs)) {\n      report(t, call, WRONG_ARGUMENT_COUNT,\n              validator.getReadableJSTypeName(call.getFirstChild(), false),\n              String.valueOf(numArgs), String.valueOf(minArgs),\n              maxArgs != Integer.MAX_VALUE ?\n              \" and no more than \" + maxArgs + \" argument(s)\" : \"\");\n    }\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}