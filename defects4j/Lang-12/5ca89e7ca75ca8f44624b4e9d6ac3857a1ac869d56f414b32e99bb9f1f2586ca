{
    "generation": "public static String random(int count, int start, int end, boolean letters, boolean numbers,\n                                char[] chars, Random random) {\n    if (count == 0) {\n        return \"\";\n    } else if (count < 0) {\n        throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");\n    }\n\n    if (chars!= null && chars.length == 0) {\n        throw new IllegalArgumentException(\"The input array must not be empty.\");\n    }\n\n    if (start == 0 && end == 0) {\n        if (!letters &&!numbers) {\n            end = Integer.MAX_VALUE;\n        } else {\n            end = 'z' + 1;\n            start = ' ';\n        }\n    }\n\n    char[] buffer = new char[count];\n    int gap = end - start;\n\n    if (chars == null) {\n        for (int i = 0; i < count; i++) {\n            char ch;\n            do {\n                ch = (char) (random.nextInt(gap) + start);\n            } while ((letters &&!Character.isLetter(ch))\n                    || (numbers &&!Character.isDigit(ch))\n                    || (!letters &&!numbers && (Character.isLetter(ch) || Character.isDigit(ch))));\n\n            buffer[i] = ch;\n        }\n    } else {\n        for (int i = 0; i < count; i++) {\n            char ch;\n            do {\n                ch = chars[random.nextInt(gap) + start - chars[0]];\n            } while ((letters &&!Character.isLetter(ch))\n                    || (numbers &&!Character.isDigit(ch))\n                    || (!letters &&!numbers && (Character.isLetter(ch) || Character.isDigit(ch))));\n\n            buffer[i] = ch;\n        }\n    }\n    return new String(buffer);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}