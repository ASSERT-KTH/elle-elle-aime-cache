{
    "generation": "public static String random(int count, int start, int end, boolean letters, boolean numbers,\n                            char[] chars, Random random) {\n    if (count == 0) {\n        return \"\";\n    } else if (count < 0) {\n        throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");\n    }\n\n    if (start == 0 && end == 0) {\n            if (!letters && !numbers) {\n                end = Integer.MAX_VALUE;\n            } else {\n                end = 'z' + 1;\n                start = ' ';\n            }\n    }\n\n    if (chars != null && chars.length == 0) {\n        throw new IllegalArgumentException(\"The provided chars array is empty.\");\n    }\n\n    char[] buffer = new char[count];\n    int gap = chars == null ? end - start : chars.length;\n\n    while (count-- != 0) {\n        char ch;\n        if (chars == null) {\n            ch = (char) (random.nextInt(gap) + start);\n        } else {\n            ch = chars[random.nextInt(gap)];\n        }\n        if (letters && Character.isLetter(ch)\n                || numbers && Character.isDigit(ch)\n                || !letters && !numbers) {\n            if(Character.isLowSurrogate(ch)) {\n                if(count == 0) {\n                    count++;\n                } else {\n                    // low surrogate, insert high surrogate after putting it in\n                    buffer[count] = ch;\n                    count--;\n                    buffer[count] = (char) (Character.HIGH_SURROGATE_MIN + random.nextInt(Character.MIN_HIGH_SURROGATE - Character.HIGH_SURROGATE_MIN + 1));\n                }\n            } else if(Character.isHighSurrogate(ch)) {\n                if(count == 0) {\n                    count++;\n                } else {\n                    // high surrogate, insert low surrogate before putting it in\n                    buffer[count] = (char) (Character.LOW_SURROGATE_MIN + random.nextInt(Character.MAX_LOW_SURROGATE - Character.LOW_SURROGATE_MIN + 1));\n                    count--;\n                    buffer[count] = ch;\n                }\n            } else if(ch >= 56192 && ch <= 56319) {\n                // private high surrogate, no effing clue, so skip it\n                count++;\n            } else {\n                buffer[count] = ch;\n            }\n        } else {\n            count++;\n        }\n    }\n    return new String(buffer);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}