{
    "generation": "public static String random(int count, int start, int end, boolean letters, boolean numbers,\n                            char[] chars, Random random) {\n    if (count == 0) {\n        return \"\";\n    } else if (count < 0) {\n        throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");\n    }\n    if (chars != null && chars.length == 0) {\n        throw new IllegalArgumentException(\"The chars array must not be empty\");\n    }\n\n    if (start == 0 && end == 0) {\n        if (!letters && !numbers) {\n            end = Integer.MAX_VALUE;\n        } else {\n            end = 'z' + 1;\n            start = ' ';\n        }\n    } else {\n        if (end <= start) {\n            throw new IllegalArgumentException(\"Parameter end (\" + end + \") must be greater than start (\" + start + \")\");\n        }\n    }\n\n    final int zero_digit_ascii = 48;\n    final int first_letter_ascii = 65;\n\n    if (chars == null && (numbers || letters)) {\n        int range = end - start + 1;\n        if (range <= 0) {\n            range = 1;\n        }\n        char[] buffer = new char[count];\n        int gap = range / 2;\n\n        while (count-- != 0) {\n            char ch = (char) (random.nextInt(range) + start);\n            if ((letters && Character.isLetter(ch))\n                    || (numbers && Character.isDigit(ch))\n                    || (!letters && !numbers)) {\n                buffer[count] = ch;\n            } else {\n                count++;\n            }\n        }\n        return new String(buffer);\n    }\n\n    if (chars != null) {\n        char[] buffer = new char[count];\n        for (int i = 0; i < count; i++) {\n            buffer[i] = chars[random.nextInt(chars.length)];\n        }\n        return new String(buffer);\n    }\n\n    char[] buffer = new char[count];\n    int gap = end - start;\n\n    while (count-- != 0) {\n        char ch = (char) (random.nextInt(gap) + start);\n        if (letters && Character.isLetter(ch)\n                || numbers && Character.isDigit(ch)\n                || !letters && !numbers) {\n            buffer[count] = ch;\n        } else {\n            count++;\n        }\n    }\n    return new String(buffer);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}