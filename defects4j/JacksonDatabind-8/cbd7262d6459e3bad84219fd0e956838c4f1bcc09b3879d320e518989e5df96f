{
    "generation": "protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)\n{\n    final int mask = (1 << typeIndex);\n    _hasNonDefaultCreator = true;\n    AnnotatedWithParams oldOne = _creators[typeIndex];\n    if (oldOne!= null) {\n        if ((_explicitCreators & mask)!= 0) { \n            if (!explicit) {\n                return;\n            }\n        }\n        \n        if (oldOne.getClass() == newOne.getClass()) {\n            // Check if the parameters match before throwing an exception\n            if (!oldOne.getParameterTypes().equals(newOne.getParameterTypes())) {\n                // Use the more specific one\n                _creators[typeIndex] = _fixAccess(newOne);\n                if (explicit) {\n                    _explicitCreators |= mask;\n                }\n                return;\n            }\n            throw new IllegalArgumentException(\"Conflicting \"+TYPE_DESCS[typeIndex]\n                    +\" creators: already had explicitly marked \"+oldOne+\", encountered \"+newOne);\n        }\n    }\n    if (explicit) {\n        _explicitCreators |= mask;\n    }\n    _creators[typeIndex] = _fixAccess(newOne);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}