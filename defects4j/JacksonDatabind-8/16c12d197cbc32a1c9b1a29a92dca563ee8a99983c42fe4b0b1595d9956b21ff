{
    "generation": "protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)\n{\n    final int mask = (1 << typeIndex);\n    _hasNonDefaultCreator = true;\n    AnnotatedWithParams oldOne = _creators[typeIndex];\n    // already had an explicitly marked one?\n    if (oldOne != null) {\n        if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is\n            // but skip, if new one not annotated\n            if (!explicit) {\n                return;\n            }\n            // both explicit: verify\n            // otherwise only verify if neither explicitly annotated.\n        }\n\n        // Check if old and new creators are of the same class\n        if (oldOne.getClass() == newOne.getClass()) {\n            // If both are explicit, throw an exception\n            if ((_explicitCreators & mask) != 0 && explicit) {\n                throw new IllegalArgumentException(\"Conflicting \" + TYPE_DESCS[typeIndex]\n                        + \" creators: already had explicitly marked \" + oldOne + \", encountered \" + newOne);\n            }\n            // If the old one is explicit but the new one is not, skip\n            else if ((_explicitCreators & mask) != 0 && !explicit) {\n                return;\n            }\n            // If the old one is not explicit but the new one is, overwrite\n            else {\n                _creators[typeIndex] = _fixAccess(newOne);\n                if (explicit) {\n                    _explicitCreators |= mask;\n                }\n            }\n        } else {\n            // Handle the case where old and new creators are of different classes\n            // This might involve merging or choosing one over the other based on some criteria\n            // For now, just overwrite the old creator with the new one\n            _creators[typeIndex] = _fixAccess(newOne);\n            if (explicit) {\n                _explicitCreators |= mask;\n            }\n        }\n    } else {\n        // No existing creator, just add the new one\n        _creators[typeIndex] = _fixAccess(newOne);\n        if (explicit) {\n            _explicitCreators |= mask;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}