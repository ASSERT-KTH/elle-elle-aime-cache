{
    "generation": "protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)\n{\n    final int mask = (1 << typeIndex);\n    _hasNonDefaultCreator = true;\n    AnnotatedWithParams oldOne = _creators[typeIndex];\n    if (oldOne != null) {\n        if (oldOne.getClass() != StringBuilder.class || newOne.getClass() != StringBuilder.class) {\n            // already had an explicitly marked one?\n            if ((_explicitCreators & mask) != 0) {\n                // both explicit: verify\n                if (!explicit) {\n                    return;\n                }\n            } else if (explicit) {\n                _explicitCreators |= mask;\n            }\n        }\n        if (oldOne.getClass() == newOne.getClass()) {\n            throw new IllegalArgumentException(\"Conflicting \"+TYPE_DESCS[typeIndex]\n                    +\" creators: already had explicitly marked \"+oldOne+\", encountered \"+newOne);\n        }\n    }\n    _creators[typeIndex] = _fixAccess(newOne);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}