{
    "generation": "    protected void verifyNonDup(AnnotatedWithParams newOne, int typeIndex, boolean explicit)\n    {\n        final int mask = (1 << typeIndex);\n        _hasNonDefaultCreator = true;\n        AnnotatedWithParams oldOne = _creators[typeIndex];\n        // already had an explicitly marked one?\n        if (oldOne != null) {\n            if ((_explicitCreators & mask) != 0) { // already had explicitly annotated, leave as-is\n                // but skip, if new one not annotated\n                if (!explicit) {\n                    return;\n                }\n                // both explicit: verify only if same class\n                if (oldOne.getClass() == newOne.getClass()) {\n                    // For same declaring class, throw an exception\n                    if (oldOne.getDeclaringClass() == newOne.getDeclaringClass()) {\n                        throw new IllegalArgumentException(\"Conflicting \"+TYPE_DESCS[typeIndex]\n                                +\" creators: already had explicitly marked \"+oldOne+\", encountered \"+newOne);\n                    }\n                }\n            }\n        }\n        if (explicit) {\n            _explicitCreators |= mask;\n        }\n        _creators[typeIndex] = _fixAccess(newOne);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}