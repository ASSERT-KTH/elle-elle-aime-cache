{
    "generation": "    private void applyPaxHeadersToCurrentEntry(Map<String, String> headers) {\n        /*\n         * The following headers are defined for Pax.\n         * atime, ctime, charset: cannot use these without changing TarArchiveEntry fields\n         * mtime\n         * comment\n         * gid, gname\n         * linkpath\n         * size\n         * uid,uname\n         * SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those\n         */\n        for (Entry<String, String> ent : headers.entrySet()) {\n            String key = ent.getKey();\n            String val = ent.getValue();\n            try {\n                if (\"path\".equals(key)) {\n                    currEntry.setName(val);\n                } else if (\"linkpath\".equals(key)) {\n                    currEntry.setLinkName(val);\n                } else if (\"gid\".equals(key)) {\n                    currEntry.setGroupId(Long.parseLong(val)); // Changed to Long for large values\n                } else if (\"gname\".equals(key)) {\n                    currEntry.setGroupName(val);\n                } else if (\"uid\".equals(key)) {\n                    currEntry.setUserId(Long.parseLong(val)); // Changed to Long for large values\n                } else if (\"uname\".equals(key)) {\n                    currEntry.setUserName(val);\n                } else if (\"size\".equals(key)) {\n                    currEntry.setSize(Long.parseLong(val));\n                } else if (\"mtime\".equals(key)) {\n                    currEntry.setModTime((long) (Double.parseDouble(val) * 1000));\n                } else if (\"SCHILY.devminor\".equals(key)) {\n                    currEntry.setDevMinor(Integer.parseInt(val));\n                } else if (\"SCHILY.devmajor\".equals(key)) {\n                    currEntry.setDevMajor(Integer.parseInt(val));\n                }\n            } catch (NumberFormatException e) {\n                // Log or handle invalid number format (if required)\n                throw new IllegalArgumentException(\"Invalid numerical value for key: \" + key, e);\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}