{
    "generation": "@Override\npublic void process(Node externs, Node root) {\n    NodeTraversal.traverse(compiler, root, this);\n    if (MAKE_LOCAL_NAMES_UNIQUE) {\n        MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique() {\n            @Override\n            protected boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n                // Avoid renaming the 'arguments' variable\n                if (n.isName() && \"arguments\".equals(n.getString())) {\n                    return false;\n                }\n                return super.shouldTraverse(t, n, parent);\n            }\n        };\n        NodeTraversal t = new NodeTraversal(compiler, renamer);\n        t.traverseRoots(externs, root);\n    }\n    removeDuplicateDeclarations(root);\n    new PropogateConstantAnnotations(compiler, assertOnChange)\n        .process(externs, root);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}