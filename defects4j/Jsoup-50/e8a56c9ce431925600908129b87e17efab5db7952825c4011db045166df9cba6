{
    "generation": "static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser) {\n    String docData;\n    Document doc = null;\n\n    // look for BOM and determine charset if not specified\n    if (charsetName == null) {\n        if (byteData.get(0) == (byte) 0xEF && byteData.get(1) == (byte) 0xBB && byteData.get(2) == (byte) 0xBF) {\n            charsetName = \"UTF-8\";\n            byteData = byteData.slice(); // Remove the BOM\n        } else if (byteData.get(0) == (byte) 0xFE && byteData.get(1) == (byte) 0xFF) {\n            charsetName = \"UTF-16BE\";\n            byteData = byteData.slice(2); // Remove the BOM\n        } else if (byteData.get(0) == (byte) 0xFF && byteData.get(1) == (byte) 0xFE) {\n            charsetName = \"UTF-16LE\";\n            byteData = byteData.slice(2); // Remove the BOM\n        } else if (byteData.get(0) == (byte) 0x00 && byteData.get(1) == (byte) 0x00 && byteData.get(2) == (byte) 0xFE && byteData.get(3) == (byte) 0xFF) {\n            charsetName = \"UTF-32BE\";\n            byteData = byteData.slice(4); // Remove the BOM\n        } else if (byteData.get(0) == (byte) 0xFF && byteData.get(1) == (byte) 0xFE && byteData.get(2) == (byte) 0x00 && byteData.get(3) == (byte) 0x00) {\n            charsetName = \"UTF-32LE\";\n            byteData = byteData.slice(4); // Remove the BOM\n        } else {\n            charsetName = defaultCharset;\n        }\n    }\n\n    // Parse the document with the determined charset\n    docData = Charset.forName(charsetName).decode(byteData).toString();\n    doc = parser.parseInput(docData, baseUri);\n    doc.outputSettings().charset(charsetName);\n\n    // Continue with the rest of the function as before...\n    // Look for charset in meta tags if charsetName is still null\n\n    return doc;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}