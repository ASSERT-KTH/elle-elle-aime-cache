{
    "generation": "static Document parseByteData(ByteBuffer byteData, String charsetName, String baseUri, Parser parser) {\n    String docData;\n    Document doc = null;\n\n    // look for BOM - overrides any other header or input\n    if (byteData.get(0) == (byte) 0xEF && byteData.get(1) == (byte) 0xBB && byteData.get(2) == (byte) 0xBF) {\n        charsetName = \"UTF-8\";\n        byteData = byteData.slice(); // creates a new ByteBuffer with the rest of the data\n    } else if ((byteData.get(0) & 0xFF) == 0xFE && (byteData.get(1) & 0xFF) == 0xFF) {\n        charsetName = \"UTF-16BE\";\n        byteData = byteData.slice(2); // creates a new ByteBuffer with the rest of the data\n    } else if ((byteData.get(0) & 0xFF) == 0xFF && (byteData.get(1) & 0xFF) == 0xFE) {\n        charsetName = \"UTF-16LE\";\n        byteData = byteData.slice(2); // creates a new ByteBuffer with the rest of the data\n    } else if ((byteData.get(0) == (byte) 0x00 && byteData.get(1) == (byte) 0x00 && byteData.get(2) == (byte) 0xFE && byteData.get(3) == (byte) 0xFF) ||\n               (byteData.get(0) == (byte) 0xFF && byteData.get(1) == (byte) 0xFE && byteData.get(2) == (byte) 0x00 && byteData.get(3) == (byte) 0x00)) {\n        charsetName = \"UTF-32\";\n        byteData = byteData.slice(4); // creates a new ByteBuffer with the rest of the data\n    }\n\n    if (charsetName == null) {\n        // existing code for determining charsetName from HTML meta tags\n    } else {\n        // remaining code for decoding byteData with chosen charsetName\n    }\n    // rest of the existing code\n    return doc;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}