{
    "generation": "@SuppressWarnings(\"resource\")\nprotected Object deserializeUsingPropertyBasedWithUnwrapped(JsonParser p,\n\t\tDeserializationContext ctxt)\n\tthrows IOException, JsonProcessingException\n{\n\tfinal PropertyBasedCreator creator = _propertyBasedCreator;\n\tPropertyValueBuffer buffer = creator.startBuilding(p, ctxt, _objectIdReader);\n\n\tTokenBuffer tokens = new TokenBuffer(p, ctxt);\n\ttokens.writeStartObject();\n\n\tJsonToken t = p.getCurrentToken();\n\tfor (; t == JsonToken.FIELD_NAME; t = p.nextToken()) {\n\t\tString propName = p.getCurrentName();\n\t\tp.nextToken(); // to point to value\n\t\t// creator property?\n\t\tSettableBeanProperty creatorProp = creator.findCreatorProperty(propName);\n\t\tif (creatorProp != null) {\n\t\t\tbuffer.assignParameter(creatorProp, creatorProp.deserialize(p, ctxt));\n\t\t\tcontinue;\n\t\t}\n\t\t// Object Id property?\n\t\tif (buffer.readIdProperty(propName)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// regular property? needs buffering\n\t\tSettableBeanProperty prop = _beanProperties.find(propName);\n\t\tif (prop != null) {\n\t\t\tbuffer.bufferProperty(prop, prop.deserialize(p, ctxt));\n\t\t\tcontinue;\n\t\t}\n\t\tif (_ignorableProps != null && _ignorableProps.contains(propName)) {\n\t\t\thandleIgnoredProperty(p, ctxt, handledType(), propName);\n\t\t\tcontinue;\n\t\t}\n\t\ttokens.writeFieldName(propName);\n\t\ttokens.copyCurrentStructure(p);\n\t\t// \"any property\"?\n\t\tif (_anySetter != null) {\n\t\t\tbuffer.bufferAnyProperty(_anySetter, propName, _anySetter.deserialize(p, ctxt));\n\t\t}\n\t}\n\n\t// We hit END_OBJECT, so:\n\tObject bean;\n\ttry {\n\t\tbean = creator.build(ctxt, buffer);\n\t} catch (Exception e) {\n\t\treturn wrapInstantiationProblem(e, ctxt);\n\t}\n\treturn _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);\n}",
    "exact_match": true,
    "ast_match": true,
    "compile": true,
    "test": true
}