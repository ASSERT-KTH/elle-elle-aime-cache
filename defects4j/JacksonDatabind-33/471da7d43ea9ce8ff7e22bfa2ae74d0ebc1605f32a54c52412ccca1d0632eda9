{
    "generation": "@Override\npublic PropertyName findNameForSerialization(Annotated a)\n{\n    String name = null;\n\n    JsonGetter jg = _findAnnotation(a, JsonGetter.class);\n    if (jg != null) {\n        name = jg.value();\n    } else {\n        JsonProperty pann = _findAnnotation(a, JsonProperty.class);\n        if (pann != null) {\n            name = pann.value();\n        } else if (_hasAnnotation(a, JsonSerialize.class)\n                || _hasAnnotation(a, JsonView.class)\n                || _hasAnnotation(a, JsonRawValue.class)\n                || (a instanceof Class && ((Class<?>) a).isAnnotationPresent(JsonUnwrapped.class) && java.lang.reflect.Modifier.isPublic(((Class<?>) a).getModifiers()) && ((Class<?>) a).getConstructors().length > 0 && ((Class<?>) a).getConstructors()[0].getParameterTypes().length == 0)) {\n            name = \"\";\n        } else {\n            return null;\n        }\n    }\n    return PropertyName.construct(name);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}