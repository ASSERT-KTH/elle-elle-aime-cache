{
    "generation": "@Override\npublic PropertyName findNameForSerialization(Annotated a)\n{\n    String name = null;\n\n    JsonGetter jg = _findAnnotation(a, JsonGetter.class);\n    if (jg != null) {\n        name = jg.value();\n    } else {\n        JsonProperty pann = _findAnnotation(a, JsonProperty.class);\n        if (pann != null) {\n            name = pann.value();\n        } else if (_hasAnnotation(a, JsonSerialize.class)\n                || _hasAnnotation(a, JsonView.class)\n                || _hasAnnotation(a, JsonRawValue.class)) {\n            name = \"\";\n        }\n        // If no name is found and no specific annotations are present, we should\n        // allow the default name to be used, which is typically the field name.\n        // This is important for unwrapped properties.\n    }\n    // If name is still null, it means no specific name was provided, and we should\n    // allow the default mechanism to handle it.\n    return PropertyName.construct(name);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}