{
    "generation": "    @Override\n    public PropertyName findNameForSerialization(Annotated a)\n    {\n        String name = null;\n\n        JsonGetter jg = _findAnnotation(a, JsonGetter.class);\n        if (jg != null) {\n            name = jg.value();\n        } else {\n            JsonProperty pann = _findAnnotation(a, JsonProperty.class);\n            if (pann != null) {\n                name = pann.value();\n            } else if (_hasAnnotation(a, JsonSerialize.class)\n                    || _hasAnnotation(a, JsonView.class)\n                    || _hasAnnotation(a, JsonRawValue.class)) {\n                name = \"\";\n            }\n        }\n\n        // Return a PropertyName with a fallback to the name of the annotated element if no explicit name was found\n        return name != null ? PropertyName.construct(name) : PropertyName.USE_DEFAULT;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}