{
    "generation": "@Override\npublic PropertyName findNameForSerialization(Annotated a)\n{\n    String name = null;\n\n    JsonGetter jg = _findAnnotation(a, JsonGetter.class);\n    if (jg != null) {\n        name = jg.value();\n    } else {\n        JsonProperty pann = _findAnnotation(a, JsonProperty.class);\n        if (pann != null) {\n            name = pann.value();\n        } else {\n            JsonSerialize jsonSerialize = _findAnnotation(a, JsonSerialize.class);\n            JsonView jsonView = _findAnnotation(a, JsonView.class);\n            JsonRawValue jsonRawValue = _findAnnotation(a, JsonRawValue.class);\n\n            if (jsonSerialize != null || jsonView != null || jsonRawValue != null) {\n                // If any of these annotations are present, we should still consider the default name\n                name = a.getName();\n            } else {\n                return null;\n            }\n        }\n    }\n\n    if (name == null || name.isEmpty()) {\n        name = a.getName(); // Default to the field/property name if no annotation value is provided\n    }\n\n    return PropertyName.construct(name);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}