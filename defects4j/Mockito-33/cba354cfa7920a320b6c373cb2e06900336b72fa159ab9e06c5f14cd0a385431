{
    "generation": "public boolean hasSameMethod(Invocation candidate) {\n    // Not using method.equals() for one good reason:\n    // Sometimes Java generates forwarding methods when generics are in play see JavaGenericsForwardingMethodsTest\n    Method m1 = invocation.getMethod();\n    Method m2 = candidate.getMethod();\n\n    // Compare methods by their name and parameter types to handle generic forwarding methods\n    if (!m1.getName().equals(m2.getName())) {\n        return false;\n    }\n\n    Class<?>[] p1 = m1.getParameterTypes();\n    Class<?>[] p2 = m2.getParameterTypes();\n\n    if (p1.length != p2.length) {\n        return false;\n    }\n\n    for (int i = 0; i < p1.length; i++) {\n        if (!p1[i].equals(p2[i])) {\n            return false;\n        }\n    }\n\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}