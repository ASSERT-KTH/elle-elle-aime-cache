{
    "generation": "public boolean hasSameMethod(Invocation candidate) {\n    // Not using method.equals() for one good reason:\n    // Sometimes Java generates forwarding methods when generics are in play, see JavaGenericsForwardingMethodsTest\n    Method m1 = invocation.getMethod();\n    Method m2 = candidate.getMethod();\n\n    // Enhanced method comparison\n    if (m1.equals(m2)) {\n        return true;\n    }\n    return m1.getDeclaringClass().isAssignableFrom(m2.getDeclaringClass()) && m1.getName().equals(m2.getName())\n        && Arrays.equals(m1.getParameterTypes(), m2.getParameterTypes())\n        && (m1.getReturnType().isAssignableFrom(m2.getReturnType()) || m2.getReturnType().isAssignableFrom(m1.getReturnType()));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}