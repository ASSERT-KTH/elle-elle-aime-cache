{
    "generation": "public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n    String str = text.substring(position);\n    for (String id : ALL_IDS) {\n        if (str.startsWith(id)) {\n            bucket.setZone(DateTimeZone.forID(id));\n            return position + id.length();\n        }\n    }\n    // If no exact match found, try to find the longest matching prefix\n    int longestMatch = 0;\n    String longestMatchId = null;\n    for (String id : ALL_IDS) {\n        if (str.startsWith(id) && id.length() > longestMatch) {\n            longestMatch = id.length();\n            longestMatchId = id;\n        }\n    }\n    if (longestMatchId!= null) {\n        bucket.setZone(DateTimeZone.forID(longestMatchId));\n        return position + longestMatch;\n    }\n    return ~position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}