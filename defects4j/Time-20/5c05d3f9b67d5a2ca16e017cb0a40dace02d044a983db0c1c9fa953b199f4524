{
    "generation": "public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n    String str = text.substring(position);\n    // Loop over ALL_IDS in descending order of length to ensure the longest matching ID is used\n    for (String id : ALL_IDS.stream().sorted((a, b) -> Integer.compare(b.length(), a.length())).toArray(String[]::new)) {\n        if (str.startsWith(id)) {\n            bucket.setZone(DateTimeZone.forID(id));\n            return position + id.length();\n        }\n    }\n    return ~position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}