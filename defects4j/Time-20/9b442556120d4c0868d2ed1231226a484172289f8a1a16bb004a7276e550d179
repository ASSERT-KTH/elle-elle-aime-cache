{
    "generation": "public int parseInto(DateTimeParserBucket bucket, String text, int position) {\n    String str = text.substring(position);\n    for (String id : ALL_IDS) {\n        if (str.equalsIgnoreCase(id)) {\n            bucket.setZone(DateTimeZone.forID(id));\n            return position + id.length();\n        }\n    }\n    for (String id : ALL_IDS) {\n        if (str.startsWith(id + \"_\")) {\n            String match = findBestMatch(id, str);\n            if (match!= null) {\n                bucket.setZone(DateTimeZone.forID(match));\n                return position + match.length();\n            }\n        }\n    }\n    return ~position;\n}\n\nprivate String findBestMatch(String id, String text) {\n    String[] variants = DateTimeZone.getAvailableIDs(id + \"_\");\n    String bestMatch = null;\n    int bestLength = 0;\n    for (String variant : variants) {\n        if (text.startsWith(variant) && variant.length() > bestLength) {\n            bestMatch = variant;\n            bestLength = variant.length();\n        }\n    }\n    return bestMatch;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}