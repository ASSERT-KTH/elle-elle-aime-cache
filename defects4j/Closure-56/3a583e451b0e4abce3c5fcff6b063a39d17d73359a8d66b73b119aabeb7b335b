{
    "generation": "public String getLine(int lineNumber) {\n    String js = \"\";\n    try {\n        js = getCode();\n    } catch (IOException e) {\n        return null;\n    }\n\n    int pos = 0;\n    int startLine = 1;\n\n    // If we've saved a previous offset and it's for a line less than the\n    // one we're searching for, then start at that point.\n    if (lineNumber >= lastLine) {\n        pos = lastOffset;\n        startLine = lastLine;\n    } else {\n        // If the requested line is before the cached line, reset the position.\n        pos = 0;\n        startLine = 1;\n    }\n\n    // Move to the correct line.\n    for (int n = startLine; n < lineNumber; n++) {\n        int nextpos = js.indexOf('\\n', pos);\n        if (nextpos == -1) {\n            return null;\n        }\n        pos = nextpos + 1;\n    }\n\n    // Remember this offset for the next search we do.\n    lastOffset = pos;\n    lastLine = lineNumber;\n\n    // Find the end of the line.\n    int endpos = js.indexOf('\\n', pos);\n    if (endpos == -1) {\n        // If no more newlines, check if pos is within the string.\n        if (pos < js.length()) {\n            // Return from pos to the end of the string.\n            return js.substring(pos);\n        } else {\n            // pos is beyond the string length, return null.\n            return null;\n        }\n    } else {\n        return js.substring(pos, endpos);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}