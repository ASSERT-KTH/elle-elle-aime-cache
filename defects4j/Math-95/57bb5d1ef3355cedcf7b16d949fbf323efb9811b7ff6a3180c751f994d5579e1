{
    "generation": "/**\n * Access the initial domain value, based on <code>p</code>, used to\n * bracket a CDF root.  This method is used by\n * {@link #inverseCumulativeProbability(double)} to find critical values.\n * \n * @param p the desired probability for the critical value\n * @return initial domain value\n */\nprotected double getInitialDomain(double p) {\n    double ret;\n    double n = getNumeratorDegreesOfFreedom();\n    double d = getDenominatorDegreesOfFreedom();\n    if (p < 0.5) {\n        // start with the mean\n        ret = d / (d - 2.0);\n    } else {\n        // start values for p close to 1\n        ret = ((1.0 - 2.0 / (9.0 * n)) ** (3.0 / 2.0)) * \n              (((1.0 - 2.0 / (9.0 * d)) ** (-3.0 / 2.0)));\n    }\n    return ret;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}