{
    "generation": "/**\n * Extracts the class name if the given node represents a goog.require() call.\n *\n * @param node         the node to check\n * @param parent       the parent node of the given node\n * @param functionName the expected function name (e.g., \"goog.require\")\n * @return the class name if the node represents a goog.require() call, otherwise null\n */\nprivate static String extractClassNameIfGoog(Node node, Node parent, String functionName) {\n    String className = null;\n    if (NodeUtil.isExprCall(parent)) {\n      Node callee = node.getFirstChild();\n      if (callee!= null && callee.getType() == Token.GETPROP) {\n        String qualifiedName = callee.getQualifiedName();\n        if (functionName.equals(qualifiedName)) {\n          Node target = callee.getNext();\n          if (target!= null && target.getType() == Token.STRING) {\n            // Ensure the argument is a string literal before extracting the class name\n            className = target.getString();\n          }\n        }\n      }\n    }\n    return className;\n}",
    "exact_match": false,
    "ast_match": true,
    "compile": true,
    "test": true
}