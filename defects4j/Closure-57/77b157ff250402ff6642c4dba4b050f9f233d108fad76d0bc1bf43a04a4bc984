{
    "generation": "private static String extractClassNameIfGoog(Node node, Node parent, String functionName) {\n    String className = null;\n    if (NodeUtil.isExprCall(parent)) {\n      Node callee = node.getFirstChild();\n      if (callee!= null && callee.getType() == Token.GETPROP) {\n        String qualifiedName = callee.getQualifiedName();\n        if (functionName.equals(qualifiedName)) {\n          Node secondChild = node.getSecondChild();\n          if (secondChild!= null) {\n            className = getNodeValueAsString(secondChild).replace(\"'\", \"\");\n          }\n        }\n      }\n    }\n    return className;\n}\n\nprivate static String getNodeValueAsString(Node node) {\n    switch (node.getType()) {\n      case Token.STRING:\n        return node.getString();\n      default:\n        break;\n    }\n    throw new RuntimeException(\"Unhandled child type: \" + Token.name(node.getType()));\n}\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}