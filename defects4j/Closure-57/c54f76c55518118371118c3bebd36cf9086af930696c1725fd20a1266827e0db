{
    "generation": "/**\n * Extracts the class name from a goog.require() call if the provided function name matches.\n * \n * @param node        The current node to inspect\n * @param parent      The parent node of the current node\n * @param functionName The name of the function to check for (e.g., \"goog.require\")\n * @return The class name if the function name matches and a class name is provided, null otherwise\n */\nprivate static String extractClassNameIfGoog(Node node, Node parent, String functionName) {\n    String className = null;\n    if (NodeUtil.isExprCall(parent) && functionName.equals(parent.getFirstChild().getString())) {\n      Node args = parent.getChildAtIndex(1); // arguments node\n      if (args.getChildCount() == 1) { // exactly one argument\n        Node arg = args.getFirstChild();\n        if (arg.getType() == Token.STRING) { // argument is a string\n          className = arg.getString().trimQuotes(); // extract string value without quotes\n        }\n      }\n    }\n    return className;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}