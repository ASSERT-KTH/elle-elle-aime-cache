{
    "generation": "static Document parseInputStream(InputStream input, String charsetName, String baseUri, Parser parser) throws IOException  {\n    if (input == null)\n        return new Document(baseUri);\n\n    input = ConstrainableInputStream.wrap(input, bufferSize, 0);\n\n    Document doc = null;\n    boolean fullyRead = false;\n\n    input.mark(bufferSize);\n    ByteBuffer firstBytes = readToByteBuffer(input, firstReadBufferSize - 1);\n    fullyRead = input.read() == -1;\n    input.reset();\n\n    BomCharset bomCharset = detectCharsetFromBom(firstBytes);\n    if (bomCharset != null)\n        charsetName = bomCharset.charset;\n\n    if (charsetName == null) {\n        String docData = Charset.forName(defaultCharset).decode(firstBytes).toString();\n        doc = parser.parseInput(docData, baseUri);\n\n        String foundCharset = extractCharsetFromMeta(doc);\n        if (foundCharset != null && !foundCharset.equalsIgnoreCase(defaultCharset)) {\n            charsetName = foundCharset;\n            doc = null;\n        }\n    } else {\n        Validate.notEmpty(charsetName, \"Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML\");\n    }\n\n    if (doc == null) {\n        if (charsetName == null)\n            charsetName = defaultCharset;\n        BufferedReader reader = new BufferedReader(new InputStreamReader(input, charsetName), bufferSize);\n        if (bomCharset != null && bomCharset.offset)\n            reader.skip(1);\n        try {\n            doc = parser.parseInput(reader, baseUri);\n        } catch (UncheckedIOException e) {\n            throw e.ioException();\n        }\n        Charset charset = Charset.forName(charsetName);\n        if (!charset.canEncode()) {\n            charsetName = \"UTF-8\";\n            doc.charset(Charset.forName(charsetName));\n            Elements metaElements = doc.select(\"meta[charset]\");\n            if (!metaElements.isEmpty()) {\n                metaElements.first().attr(\"charset\", charsetName);\n            }\n        } else {\n            doc.outputSettings().charset(charset);\n        }\n    }\n    input.close();\n    return doc;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}