{
    "generation": "protected void burstToken(String token, boolean stopAtNonOption)\n{\n    int tokenLength = token.length();\n    for (int i = 1; i < tokenLength; i++)\n    {\n        String ch = String.valueOf(token.charAt(i));\n\n        if (options.hasOption(ch))\n        {\n            tokens.add(\"-\" + ch);\n            currentOption = options.getOption(ch);\n\n            if (currentOption.hasArg())\n            {\n                if (tokenLength != (i + 1))\n                {\n                    tokens.add(token.substring(i + 1));\n                }\n                else\n                {\n                    // Argument value will be in the next token\n                    eatTheRest = true;\n                }\n                break;\n            }\n        }\n        else if (stopAtNonOption)\n        {\n            tokens.add(\"--\");\n            if (i < tokenLength - 1)\n            {\n                tokens.add(token.substring(i));\n            }\n            else\n            {\n                tokens.add(ch);\n            }\n            break;\n        }\n        else\n        {\n            tokens.add(\"-\" + ch);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}