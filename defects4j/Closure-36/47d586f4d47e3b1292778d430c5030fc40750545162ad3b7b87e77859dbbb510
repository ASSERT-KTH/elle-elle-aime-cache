{
    "generation": "private boolean canInline(\n    Reference declaration,\n    Reference initialization,\n    Reference reference) {\n  // ...\n\n  if (value.isFunction() && reference.getParent().isCall()) {\n    CodingConvention convention = compiler.getCodingConvention();\n    if (convention.isSingletonGetter(reference.getParent())) {\n      return false;\n    }\n    if (convention.isSingletonGetterDefinition(reference.getParent())) {\n      return false;\n    }\n  }\n\n  return canMoveAggressively(value) ||\n          canMoveModerately(initialization, reference);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}