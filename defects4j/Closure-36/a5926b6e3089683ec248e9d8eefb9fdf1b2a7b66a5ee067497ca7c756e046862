{
    "generation": "private boolean canInline(\n    Reference declaration,\n    Reference initialization,\n    Reference reference) {\n  // ...\n\n  if (value.isFunction()) {\n    Node callNode = reference.getParent();\n    if (callNode.isCall()) {\n      CodingConvention convention = compiler.getCodingConvention();\n\n      // Bug 2388531: Don't inline subclass definitions into class defining\n      // calls as this confused class removing logic.\n      SubclassRelationship relationship =\n          convention.getClassesDefinedByCall(callNode);\n      if (relationship != null) {\n        return false;\n      }\n\n      // Check for singleton getter methods calls and prevent inlining\n      Call call = callNode.getFirstChild().getOnlyChild().makeCall();\n      if (call != null && convention.isSingletonGetterCall(call)) {\n        return false;\n      }\n    }\n  }\n\n  // ...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}