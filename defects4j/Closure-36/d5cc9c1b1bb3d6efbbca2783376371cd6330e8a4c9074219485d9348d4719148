{
    "generation": "      if (value.isFunction() && value.isCall()) {\n        Node callNode = reference.getParent();\n        if (reference.getParent().isCall()) {\n          CodingConvention convention = compiler.getCodingConvention();\n          // Bug 2388531: Don't inline subclass definitions into class defining\n          // calls as this could confuse class removing logic.\n          SubclassRelationship relationship =\n              convention.getClassesDefinedByCall(callNode);\n          if (relationship != null) {\n            return false;\n          }\n\n          // issue 668: Don't inline singleton getter methods\n          // calls as this could confuse class removing logic.\n          String qualifiedName = convention.getQualifiedNameForFunction(value);\n          if (qualifiedName != null && convention.isSingletonGetter(qualifiedName)) {\n            return false;\n          }\n        }\n      }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}