{
    "generation": "@Override\npublic boolean isSubtype(JSType other) {\n    if (!(other instanceof ArrowType)) {\n        return false;\n    }\n\n    ArrowType that = (ArrowType) other;\n\n    // Check return type (covariant)\n    if (!this.returnType.isSubtype(that.returnType)) {\n        return false;\n    }\n\n    Node thisParam = parameters.getFirstChild();\n    Node thatParam = that.parameters.getFirstChild();\n\n    boolean thisHasVarArgs = false;\n    boolean thatHasVarArgs = false;\n\n    // Check parameters (contravariant)\n    while (thisParam != null || thatParam != null) {\n        boolean thisIsVarArgs = thisParam != null && thisParam.isVarArgs();\n        boolean thatIsVarArgs = thatParam != null && thatParam.isVarArgs();\n\n        if (thisIsVarArgs) {\n            thisHasVarArgs = true;\n        }\n        if (thatIsVarArgs) {\n            thatHasVarArgs = true;\n        }\n\n        JSType thisParamType = thisParam != null ? thisParam.getJSType() : null;\n        JSType thatParamType = thatParam != null ? thatParam.getJSType() : null;\n\n        if (thisParamType == null && thatParamType == null) {\n            // Both null, continue to next parameter\n            thisParam = thisParam != null ? thisParam.getNext() : null;\n            thatParam = thatParam != null ? thatParam.getNext() : null;\n            continue;\n        }\n\n        if (thisParamType == null) {\n            // This function has fewer parameters than that\n            if (!thatHasVarArgs) {\n                return false;\n            }\n            thatParam = thatParam.getNext();\n        } else if (thatParamType == null) {\n            // That function has fewer parameters than this\n            if (!thisHasVarArgs) {\n                return false;\n            }\n            thisParam = thisParam.getNext();\n        } else {\n            // Both parameters exist, check types\n            if (!thatParamType.isSubtype(thisParamType)) {\n                return false;\n            }\n            thisParam = thisParam.getNext();\n            thatParam = thatParam.getNext();\n        }\n    }\n\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}