{
    "generation": "@Override\npublic boolean isSubtype(JSType other) {\n    if (!(other instanceof ArrowType)) {\n        return false;\n    }\n\n    ArrowType that = (ArrowType) other;\n\n    // Check return type (covariant)\n    if (!this.returnType.isSubtype(that.returnType)) {\n        return false;\n    }\n\n    Node thisParam = parameters.getFirstChild();\n    Node thatParam = that.parameters.getFirstChild();\n    boolean thisIsVarArgs = false;\n    boolean thatIsVarArgs = false;\n\n    while (thisParam != null || thatParam != null) {\n        if (thisParam != null) {\n            thisIsVarArgs = thisParam.isVarArgs();\n        }\n        if (thatParam != null) {\n            thatIsVarArgs = thatParam.isVarArgs();\n        }\n\n        if (thisIsVarArgs && thatIsVarArgs) {\n            // Both are varargs, so we can stop checking parameters\n            break;\n        }\n\n        if (thisParam == null || thatParam == null) {\n            // One of them has ended, check if they should match\n            if (!thisIsVarArgs && !thatIsVarArgs) {\n                // Neither is varargs, they must match in length\n                return false;\n            }\n            if (thisIsVarArgs && thatParam == null) {\n                // 'this' is varargs and 'that' has ended, it's ok\n                break;\n            }\n            if (thatIsVarArgs && thisParam == null) {\n                // 'that' is varargs and 'this' has ended, it's not ok\n                return false;\n            }\n        } else {\n            JSType thisParamType = thisParam.getJSType();\n            JSType thatParamType = thatParam.getJSType();\n            if (thisParamType != null && thatParamType != null) {\n                // Check contravariance for parameter types\n                if (!thatParamType.isSubtype(thisParamType)) {\n                    return false;\n                }\n            }\n        }\n\n        if (!thisIsVarArgs) {\n            thisParam = thisParam.getNext();\n        }\n        if (!thatIsVarArgs) {\n            thatParam = thatParam.getNext();\n        }\n    }\n\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}