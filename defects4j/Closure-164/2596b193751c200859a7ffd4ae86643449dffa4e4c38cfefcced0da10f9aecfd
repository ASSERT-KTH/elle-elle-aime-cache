{
    "generation": "@Override\npublic boolean isSubtype(JSType other) {\n  if (!(other instanceof ArrowType)) {\n    return false;\n  }\n\n  ArrowType that = (ArrowType) other;\n\n  // Check that 'this' has no more required parameters than 'that'.\n  // If 'this' has more required parameters than 'that', then 'this' cannot be\n  // a subtype of 'that' because that would mean passing fewer arguments than expected.\n  int thisRequiredParams = 0;\n  int thatRequiredParams = 0;\n\n  Node thisParamCount = parameters.getFirstChild();\n  Node thatParamCount = that.parameters.getFirstChild();\n  while (thisParamCount != null) {\n    if (!thisParamCount.isOptionalArg() && !thisParamCount.isVarArgs()) {\n      thisRequiredParams++;\n    }\n    thisParamCount = thisParamCount.getNext();\n  }\n  while (thatParamCount != null) {\n    if (!thatParamCount.isOptionalArg() && !thatParamCount.isVarArgs()) {\n      thatRequiredParams++;\n    }\n    thatParamCount = thatParamCount.getNext();\n  }\n  if (thisRequiredParams > thatRequiredParams) {\n    return false;\n  }\n\n  // this.returnType <: that.returnType (covariant)\n  if (!this.returnType.isSubtype(that.returnType)) {\n    return false;\n  }\n\n  // that.paramType[i] <: this.paramType[i] (contravariant)\n  Node thisParam = parameters.getFirstChild();\n  Node thatParam = that.parameters.getFirstChild();\n  while (thisParam != null) {\n    if (thatParam == null) {\n      break;\n    }\n    JSType thisParamType = thisParam.getJSType();\n    JSType thatParamType = thatParam.getJSType();\n    if (thisParamType != null) {\n      if (thatParamType == null || !thatParamType.isSubtype(thisParamType)) {\n        return false;\n      }\n    }\n    \n    boolean thisIsVarArgs = thisParam.isVarArgs();\n    boolean thatIsVarArgs = thatParam.isVarArgs();\n\n    // Don't advance if we have variable arguments\n    if (!thisIsVarArgs) {\n      thisParam = thisParam.getNext();\n    }\n    if (!thatIsVarArgs) {\n      thatParam = thatParam.getNext();\n    }\n\n    // Both var_args indicate the end\n    if (thisIsVarArgs && thatIsVarArgs) {\n      break;\n    }\n  }\n\n  // Ensure 'that' has no more required parameters left than 'this'.\n  while (thatParam != null) {\n    if (!thatParam.isOptionalArg() && !thatParam.isVarArgs()) {\n      return false;\n    }\n    thatParam = thatParam.getNext();\n  }\n\n  return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}