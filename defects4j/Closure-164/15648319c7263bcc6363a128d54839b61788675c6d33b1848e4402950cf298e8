{
    "generation": "  @Override\n  public boolean isSubtype(JSType other) {\n    if (!(other instanceof ArrowType)) {\n      return false;\n    }\n\n    ArrowType that = (ArrowType) other;\n\n    // This is described in Draft 2 of the ES4 spec,\n    // Section 3.4.7: Subtyping Function Types.\n\n    // this.returnType <: that.returnType (covariant)\n    if (!this.returnType.isSubtype(that.returnType)) {\n      return false;\n    }\n\n    // that.paramType[i] <: this.paramType[i] (contravariant)\n    Node thisParam = parameters.getFirstChild();\n    Node thatParam = that.parameters.getFirstChild();\n\n    while (thisParam != null || thatParam != null) {\n      JSType thisParamType = thisParam != null ? thisParam.getJSType() : null;\n      JSType thatParamType = thatParam != null ? thatParam.getJSType() : null;\n\n      // If \"that\" has fewer parameters than \"this\" and the remaining\n      // parameters in \"this\" are not optional, return false.\n      if (thisParam != null && !thisParam.isOptionalArg() && thatParam == null) {\n        return false;\n      }\n\n      // If we are comparing param types and they are incompatible, return false.\n      if (thisParamType != null && thatParamType != null &&\n          !thatParamType.isSubtype(thisParamType)) {\n        return false;\n      }\n\n      boolean thisIsVarArgs = thisParam != null && thisParam.isVarArgs();\n      boolean thatIsVarArgs = thatParam != null && thatParam.isVarArgs();\n\n      // Check varargs compatibility\n      if (thisIsVarArgs && !thatIsVarArgs) {\n        return false;\n      }\n\n      // Advance parameters, taking varargs into account\n      if (!thisIsVarArgs) {\n        thisParam = thisParam != null ? thisParam.getNext() : null;\n      }\n      if (!thatIsVarArgs) {\n        thatParam = thatParam != null ? thatParam.getNext() : null;\n      }\n\n      // If both are varargs, stop iteration\n      if (thisIsVarArgs && thatIsVarArgs) {\n        thisParam = null;\n        thatParam = null;\n      }\n    }\n\n    return true;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}