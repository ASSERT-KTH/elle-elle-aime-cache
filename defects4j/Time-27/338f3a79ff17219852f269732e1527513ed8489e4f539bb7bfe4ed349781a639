{
    "generation": "private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n    if (notPrinter && notParser) {\n        throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n    }\n    int size = elementPairs.size();\n    if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n        Separator sep = (Separator) elementPairs.get(0);\n        PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n        sep = sep.finish(f.getPrinter(), f.getParser());\n        return new PeriodFormatter(sep, sep);\n    }\n    Object[] comp = createComposite(elementPairs);\n    if (notPrinter) {\n        return new PeriodFormatter(null, (PeriodParser) comp[1]);\n    } else if (notParser) {\n        return new PeriodFormatter((PeriodPrinter) comp[0], null);\n    } else {\n        // Assuming that comp[1] is a PeriodParser object\n        PeriodParser parser = (PeriodParser) comp[1];\n        parser = new PeriodParser() {\n            @Override\n            public Period parsePeriod(String periodStr) {\n                int hours;\n                int minutes;\n                int seconds;\n\n                // Get the index of \"H\", \"M\", and \"S\" in the period string\n                int hIndex = periodStr.indexOf(\"H\");\n                int mIndex = periodStr.indexOf(\"M\", hIndex + 1);\n                int sIndex = periodStr.indexOf(\"S\", mIndex + 1);\n\n                // If \"H\", \"M\", and \"S\" are all present in the string\n                if (hIndex != -1 && mIndex != -1 && sIndex != -1) {\n                    hours = Integer.parseInt(periodStr.substring(hIndex + 1, mIndex));\n                    minutes = Integer.parseInt(periodStr.substring(mIndex + 1, sIndex));\n                    seconds = Integer.parseInt(periodStr.substring(sIndex + 1));\n                } else {\n                    // If \"H\" and \"M\" are present, but \"S\" is not, then parse the remaining part as minutes and seconds\n                    if (hIndex != -1 && mIndex != -1) {\n                        hours = Integer.parseInt(periodStr.substring(hIndex + 1, mIndex));\n                        minutes = Integer.parseInt(periodStr.substring(mIndex + 1));\n                        seconds = 0;\n                    } else {\n                        // If only \"H\" is present, then parse the remaining part as hours and minutes\n                        if (hIndex != -1) {\n                            hours = Integer.parseInt(periodStr.substring(hIndex + 1));\n                            minutes = 0;\n                            seconds = 0;\n                        } else {\n                            // If none of \"H\", \"M\", and \"S\" are present, then parse the remaining part as seconds\n                            hours = 0;\n                            minutes = 0;\n                            seconds = Integer.parseInt(periodStr.substring(1)); // Skipping the \"T\"\n                        }\n                    }\n                }\n\n                // Create a Period object with the parsed hours, minutes, and seconds\n                return new Period(0, 0, 0, hours, minutes, seconds, 0, 0, 0);\n            }\n        };\n        return new PeriodFormatter((PeriodPrinter) comp[0], parser);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}