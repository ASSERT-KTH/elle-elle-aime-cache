{
    "generation": "    //-----------------------------------------------------------------------\n    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n        if (notPrinter && notParser) {\n            throw new IllegalStateException(\"Builder has created neither a printer nor a parser\");\n        }\n        int size = elementPairs.size();\n        if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n            Separator sep = (Separator) elementPairs.get(0);\n                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);\n                sep = sep.finish(f.getPrinter(), f.getParser());\n                return new PeriodFormatter(sep, sep);\n        } else if (size >= 4 && elementPairs.get(2) instanceof Separator) {\n            Separator sep = (Separator) elementPairs.get(2);\n            PeriodFormatter f = toFormatter(elementPairs.subList(0, 2), notPrinter, notParser);\n            PeriodFormatter f2 = toFormatter(elementPairs.subList(4, size), notPrinter, notParser);\n            sep = sep.finish(f2.getPrinter(), f2.getParser());\n            return new PeriodFormatter(f.getPrinter(), f.getParser(), sep);\n        }\n        Object[] comp = createComposite(elementPairs);\n        if (notPrinter) {\n            return new PeriodFormatter(null, (PeriodParser) comp[1]);\n        } else if (notParser) {\n            return new PeriodFormatter((PeriodPrinter) comp[0], null);\n        } else {\n            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n        }\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}