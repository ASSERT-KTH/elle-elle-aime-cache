{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        case Character: {\n            // other cases...\n        }\n        case Comment: {\n            // other cases...\n        }\n        case Doctype: {\n            // other cases...\n        }\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.normalName();\n            if (name.equals(\"textarea\")) {\n                // existing code...\n            } else if (name.equals(\"pre\")) {\n                tb.insert(startTag);\n                tb.tokeniser.transition(TokeniserState.Rcdata);\n                tb.markInsertionMode();\n                tb.framesetOk(false);\n                tb.preContentWhitespace = true; // mark that we're inside a <pre> tag\n                return true;\n            }\n            // other cases...\n        case EndTag:\n            Token.EndTag endTag = t.asEndTag();\n            name = endTag.normalName();\n            if (name.equals(\"pre\")) {\n                if (!tb.inScope(name)) {\n                    tb.error(this);\n                    return false;\n                } else {\n                    tb.generateImpliedEndTags();\n                    if (!tb.currentElement().nodeName().equals(name))\n                        tb.error(this);\n                    tb.popStackToClose(name);\n                    tb.preContentWhitespace = false; // reset the flag when exiting a <pre> tag\n                }\n                return true;\n            }\n            // other cases...\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}