{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        //... (other cases remain the same)\n\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            //... (other start tag cases remain the same)\n\n            else if (name.equals(\"pre\") || name.equals(\"textarea\") || name.equals(\"plaintext\") || name.equals(\"xmp\") || name.equals(\"iframe\") || name.equals(\"noembed\")) {\n                tb.reconstructFormattingElements();\n                tb.insert(startTag);\n                if (name.equals(\"textarea\")) {\n                    tb.tokeniser.transition(TokeniserState.Rcdata);\n                } else if (name.equals(\"pre\") || name.equals(\"plaintext\") || name.equals(\"xmp\")) {\n                    tb.tokeniser.transition(TokeniserState.Rawtext);\n                }\n                tb.framesetOk(false);\n                tb.markInsertionMode();\n                // New addition: ignore the first newline character\n                if (tb.tokeniser mismaTokeniserState() == TokeniserState.Rawtext && t.asStartTag().normalName().equals(\"pre\")) {\n                    tb.tokeniser.ignoreNextNewline();\n                }\n            }\n\n            //... (other cases remain the same)\n\n        //... (other cases remain the same)\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}