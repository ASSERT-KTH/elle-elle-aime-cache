{
    "generation": "        boolean process(Token t, HtmlTreeBuilder tb) {\n            switch (t.type) {\n                case Character: {\n                    Token.Character c = t.asCharacter();\n                    if (c.getData().equals(nullString)) {\n                        // todo confirm that check\n                        tb.error(this);\n                        return false;\n                    } else if (tb.framesetOk() && isWhitespace(c)) { // don't check if whitespace if frames already closed\n                        tb.reconstructFormattingElements();\n                        tb.insert(c);\n                    } else {\n                        tb.reconstructFormattingElements();\n                        tb.insert(c);\n                        tb.framesetOk(false);\n                    }\n                    break;\n                }\n                case Comment: {\n                    tb.insert(t.asComment());\n                    break;\n                }\n                case Doctype: {\n                    tb.error(this);\n                    return false;\n                }\n                case StartTag:\n                    Token.StartTag startTag = t.asStartTag();\n                    String name = startTag.normalName();\n\n                    if (name.equals(\"pre\") || name.equals(\"listing\")) {\n                        if (tb.inButtonScope(\"p\")) {\n                            tb.processEndTag(\"p\");\n                        }\n                        tb.insert(startTag);\n                        tb.framesetOk(false);\n                        // don't immediately insert the token character like in the original\n                        // This special handling allows the first newline to be skipped\n                        break;\n                    }\n                    \n                    // ... rest of the switch cases remain the same ...\n                    \n                    // (keep all the existing else-if blocks and their contents exactly as they were)\n\n                    else {\n                        tb.reconstructFormattingElements();\n                        tb.insert(startTag);\n                    }\n                    break;\n\n                case EndTag:\n                    // ... rest of the EndTag case remains the same ...\n                    break;\n\n                case EOF:\n                    // ... EOF case remains the same ...\n                    break;\n            }\n            return true;\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}