{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        case Character: {\n            Token.Character c = t.asCharacter();\n            if (c.getData().equals(nullString)) {\n                tb.error(this);\n                return false;\n            } else if (tb.framesetOk() && isWhitespace(c)) {\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n            } else {\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n                tb.framesetOk(false);\n            }\n            break;\n        }\n        case Comment: {\n            tb.insert(t.asComment());\n            break;\n        }\n        case Doctype: {\n            tb.error(this);\n            return false;\n        }\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.normalName();\n            if (name.equals(\"a\")) {\n                if (tb.getActiveFormattingElement(\"a\") != null) {\n                    tb.error(this);\n                    tb.processEndTag(\"a\");\n                    Element remainingA = tb.getFromStack(\"a\");\n                    if (remainingA != null) {\n                        tb.removeFromActiveFormattingElements(remainingA);\n                        tb.removeFromStack(remainingA);\n                    }\n                }\n                tb.reconstructFormattingElements();\n                Element a = tb.insert(startTag);\n                tb.pushActiveFormattingElements(a);\n            } else if (StringUtil.inSorted(name, Constants.InBodyStartEmptyFormatters)) {\n                tb.reconstructFormattingElements();\n                tb.insertEmpty(startTag);\n                tb.framesetOk(false);\n            } else if (StringUtil.inSorted(name, Constants.InBodyStartPClosers)) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.insert(startTag);\n            } else if (name.equals(\"pre\") || name.equals(\"listing\")) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.insert(startTag);\n                tb.framesetOk(false);\n                if (tb.tokeniser.consumeNextIfEquals('\\n')) { // Skips the newline character immediately after <pre>\n                    // no-op; advance the tokeniser position\n                }\n            } else if (name.equals(\"span\")) {\n                tb.reconstructFormattingElements();\n                tb.insert(startTag);\n            } else if (name.equals(\"li\")) {\n                tb.framesetOk(false);\n                ArrayList<Element> stack = tb.getStack();\n                for (int i = stack.size() - 1; i > 0; i--) {\n                    Element el = stack.get(i);\n                    if (el.nodeName().equals(\"li\")) {\n                        tb.processEndTag(\"li\");\n                        break;\n                    }\n                    if (tb.isSpecial(el) && !StringUtil.inSorted(el.nodeName(), Constants.InBodyStartLiBreakers))\n                        break;\n                }\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.insert(startTag);\n            } else if (name.equals(\"html\")) {\n                tb.error(this);\n                Element html = tb.getStack().get(0);\n                for (Attribute attribute : startTag.getAttributes()) {\n                    if (!html.hasAttr(attribute.getKey()))\n                        html.attributes().put(attribute);\n                }\n            } else if (StringUtil.inSorted(name, Constants.InBodyStartToHead)) {\n                return tb.process(t, InHead);\n            } else if (name.equals(\"body\")) {\n                tb.error(this);\n                ArrayList<Element> stack = tb.getStack();\n                if (stack.size() == 1 || (stack.size() > 2 && !stack.get(1).nodeName().equals(\"body\"))) {\n                    return false;\n                } else {\n                    tb.framesetOk(false);\n                    Element body = stack.get(1);\n                    for (Attribute attribute : startTag.getAttributes()) {\n                        if (!body.hasAttr(attribute.getKey()))\n                            body.attributes().put(attribute);\n                    }\n                }\n            } else if (name.equals(\"frameset\")) {\n                tb.error(this);\n                ArrayList<Element> stack = tb.getStack();\n                if (stack.size() == 1 || (stack.size() > 2 && !stack.get(1).nodeName().equals(\"body\"))) {\n                    return false;\n                } else if (!tb.framesetOk()) {\n                    return false;\n                } else {\n                    Element second = stack.get(1);\n                    if (second.parent() != null)\n                        second.remove();\n                    while (stack.size() > 1)\n                        stack.remove(stack.size() - 1);\n                    tb.insert(startTag);\n                    tb.transition(InFrameset);\n                }\n            } else if (StringUtil.inSorted(name, Constants.Headings)) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                if (StringUtil.inSorted(tb.currentElement().nodeName(), Constants.Headings)) {\n                    tb.error(this);\n                    tb.pop();\n                }\n                tb.insert(startTag);\n            } else if (StringUtil.inSorted(name, Constants.InBodyStartPreListing)) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.insert(startTag);\n                tb.framesetOk(false);\n            } else {\n                tb.reconstructFormattingElements();\n                tb.insert(startTag);\n            }\n            break;\n\n        case EndTag:\n            Token.EndTag endTag = t.asEndTag();\n            name = endTag.normalName();\n            if (StringUtil.inSorted(name, Constants.InBodyEndAdoptionFormatters)) {\n                for (int i = 0; i < 8; i++) {\n                    Element formatEl = tb.getActiveFormattingElement(name);\n                    if (formatEl == null)\n                        return anyOtherEndTag(t, tb);\n                    else if (!tb.onStack(formatEl)) {\n                        tb.error(this);\n                        tb.removeFromActiveFormattingElements(formatEl);\n                        return true;\n                    } else if (!tb.inScope(formatEl.nodeName())) {\n                        tb.error(this);\n                        return false;\n                    } else if (tb.currentElement() != formatEl)\n                        tb.error(this);\n\n                    Element furthestBlock = null;\n                    Element commonAncestor = null;\n                    boolean seenFormattingElement = false;\n                    ArrayList<Element> stack = tb.getStack();\n                    final int stackSize = stack.size();\n                    for (int si = 0; si < stackSize && si < 64; si++) {\n                        Element el = stack.get(si);\n                        if (el == formatEl) {\n                            commonAncestor = stack.get(si - 1);\n                            seenFormattingElement = true;\n                        } else if (seenFormattingElement && tb.isSpecial(el)) {\n                            furthestBlock = el;\n                            break;\n                        }\n                    }\n                    if (furthestBlock == null) {\n                        tb.popStackToClose(formatEl.nodeName());\n                        tb.removeFromActiveFormattingElements(formatEl);\n                        return true;\n                    }\n\n                    Element node = furthestBlock;\n                    Element lastNode = furthestBlock;\n                    for (int j = 0; j < 3; j++) {\n                        if (tb.onStack(node))\n                            node = tb.aboveOnStack(node);\n                        if (!tb.isInActiveFormattingElements(node)) {\n                            tb.removeFromStack(node);\n                            continue;\n                        } else if (node == formatEl)\n                            break;\n\n                        Element replacement = new Element(Tag.valueOf(node.nodeName(), ParseSettings.preserveCase), tb.getBaseUri());\n                        tb.replaceActiveFormattingElement(node, replacement);\n                        tb.replaceOnStack(node, replacement);\n                        node = replacement;\n\n                        if (lastNode == furthestBlock) {\n                        }\n                        if (lastNode.parent() != null)\n                            lastNode.remove();\n                        node.appendChild(lastNode);\n\n                        lastNode = node;\n                    }\n\n                    if (StringUtil.inSorted(commonAncestor.nodeName(), Constants.InBodyEndTableFosters)) {\n                        if (lastNode.parent() != null)\n                            lastNode.remove();\n                        tb.insertInFosterParent(lastNode);\n                    } else {\n                        if (lastNode.parent() != null)\n                            lastNode.remove();\n                        commonAncestor.appendChild(lastNode);\n                    }\n\n                    Element adopter = new Element(formatEl.tag(), tb.getBaseUri());\n                    adopter.attributes().addAll(formatEl.attributes());\n                    Node[] childNodes = furthestBlock.childNodes().toArray(new Node[furthestBlock.childNodeSize()]);\n                    for (Node childNode : childNodes) {\n                        adopter.appendChild(childNode);\n                    }\n                    furthestBlock.appendChild(adopter);\n                    tb.removeFromActiveFormattingElements(formatEl);\n                    tb.removeFromStack(formatEl);\n                    tb.insertOnStackAfter(furthestBlock, adopter);\n                }\n            } else if (StringUtil.inSorted(name, Constants.InBodyEndClosers)) {\n                if (!tb.inScope(name)) {\n                    tb.error(this);\n                    return false;\n                } else {\n                    tb.generateImpliedEndTags();\n                    if (!tb.currentElement().nodeName().equals(name))\n                        tb.error(this);\n                    tb.popStackToClose(name);\n                }\n            } else if (name.equals(\"br\")) {\n                tb.error(this);\n                tb.processStartTag(\"br\");\n                return false;\n            } else {\n                return anyOtherEndTag(t, tb);\n            }\n\n            break;\n        case EOF:\n            break;\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}