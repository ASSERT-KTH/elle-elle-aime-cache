{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        // ... (unchanged code for other cases)\n\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.normalName();\n            // ... (unchanged code for other start tags)\n\n            else if (name.equals(\"textarea\")) {\n                tb.insert(startTag);\n                // If the next token is a U+000A LINE FEED (LF) character token,\n                // then ignore that token and move on to the next one.\n                tb.tokeniser.transition(TokeniserState.Rcdata);\n                tb.markInsertionMode();\n                tb.framesetOk(false);\n                tb.transition(Text);\n            } else if (name.equals(\"xmp\")) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.reconstructFormattingElements();\n                tb.framesetOk(false);\n                handleRawtext(startTag, tb);\n            } else if (name.equals(\"iframe\")) {\n                tb.framesetOk(false);\n                handleRawtext(startTag, tb);\n            } else if (name.equals(\"noembed\")) {\n                // also handle noscript if script enabled\n                handleRawtext(startTag, tb);\n            } else if (name.equals(\"pre\")) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.insert(startTag);\n                tb.framesetOk(false);\n                // New logic to handle the first newline\n                tb.tokeniser.transition(TokeniserState.RCDATA);\n                tb.markInsertionMode();\n                tb.transition(Text);\n            }\n\n            // ... (rest of the unchanged code)\n\n        // ... (unchanged code for other cases)\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}