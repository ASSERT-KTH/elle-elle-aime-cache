{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        case Character: {\n            Token.Character c = t.asCharacter();\n            if (c.getData().equals(nullString)) {\n                tb.error(this);\n                return false;\n            } else if (tb.framesetOk() && isWhitespace(c)) { // don't check if whitespace if frames already closed\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n            } else {\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n                tb.framesetOk(false);\n            }\n            break;\n        }\n        case Comment: {\n            tb.insert(t.asComment());\n            break;\n        }\n        case Doctype: {\n            tb.error(this);\n            return false;\n        }\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.normalName();\n            if (name.equals(\"a\")) {\n                if (tb.getActiveFormattingElement(\"a\") != null) {\n                    tb.error(this);\n                    tb.processEndTag(\"a\");\n\n                    Element remainingA = tb.getFromStack(\"a\");\n                    if (remainingA != null) {\n                        tb.removeFromActiveFormattingElements(remainingA);\n                        tb.removeFromStack(remainingA);\n                    }\n                }\n                tb.reconstructFormattingElements();\n                Element a = tb.insert(startTag);\n                tb.pushActiveFormattingElements(a);\n            } else if (StringUtil.inSorted(name, Constants.InBodyStartEmptyFormatters)) {\n                tb.reconstructFormattingElements();\n                tb.insertEmpty(startTag);\n                tb.framesetOk(false);\n            } else if (StringUtil.inSorted(name, Constants.InBodyStartPClosers)) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.insert(startTag);\n            } else if (name.equals(\"span\")) {\n                tb.reconstructFormattingElements();\n                tb.insert(startTag);\n            } else if (name.equals(\"li\")) {\n                tb.framesetOk(false);\n                ArrayList<Element> stack = tb.getStack();\n                for (int i = stack.size() - 1; i > 0; i--) {\n                    Element el = stack.get(i);\n                    if (el.nodeName().equals(\"li\")) {\n                        tb.processEndTag(\"li\");\n                        break;\n                    }\n                    if (tb.isSpecial(el) && !StringUtil.inSorted(el.nodeName(), Constants.InBodyStartLiBreakers))\n                        break;\n                }\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.insert(startTag);\n            } else if (name.equals(\"html\")) {\n                tb.error(this);\n                Element html = tb.getStack().get(0);\n                for (Attribute attribute : startTag.getAttributes()) {\n                    if (!html.hasAttr(attribute.getKey()))\n                        html.attributes().put(attribute);\n                }\n            } else if (StringUtil.inSorted(name, Constants.InBodyStartToHead)) {\n                return tb.process(t, InHead);\n            } else if (name.equals(\"body\")) {\n                tb.error(this);\n                ArrayList<Element> stack = tb.getStack();\n                if (stack.size() == 1 || (stack.size() > 2 && !stack.get(1).nodeName().equals(\"body\"))) {\n                    return false;\n                } else {\n                    tb.framesetOk(false);\n                    Element body = stack.get(1);\n                    for (Attribute attribute : startTag.getAttributes()) {\n                        if (!body.hasAttr(attribute.getKey()))\n                            body.attributes().put(attribute);\n                    }\n                }\n            } else if (name.equals(\"frameset\")) {\n                tb.error(this);\n                ArrayList<Element> stack = tb.getStack();\n                if (stack.size() == 1 || (stack.size() > 2 && !stack.get(1).nodeName().equals(\"body\"))) {\n                    return false;\n                } else if (!tb.framesetOk()) {\n                    return false;\n                } else {\n                    Element second = stack.get(1);\n                    if (second.parent() != null)\n                        second.remove();\n                    while (stack.size() > 1)\n                        stack.remove(stack.size()-1);\n                    tb.insert(startTag);\n                    tb.transition(InFrameset);\n                }\n            } else if (StringUtil.inSorted(name, Constants.Headings)) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                if (StringUtil.inSorted(tb.currentElement().nodeName(), Constants.Headings)) {\n                    tb.error(this);\n                    tb.pop();\n                }\n                tb.insert(startTag);\n            } else if (StringUtil.inSorted(name, Constants.InBodyStartPreListing)) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.insert(startTag);\n                tb.framesetOk(false);\n            } else if (name.equals(\"form\")) {\n                if (tb.getFormElement() != null) {\n                    tb.error(this);\n                    return false;\n                }\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.insertForm(startTag, true);\n            } else if (StringUtil.inSorted(name, Constants.DdDt)) {\n                tb.framesetOk(false);\n                ArrayList<Element> stack = tb.getStack();\n                for (int i = stack.size() - 1; i > 0; i--) {\n                    Element el = stack.get(i);\n                    if (StringUtil.inSorted(el.nodeName(), Constants.DdDt)) {\n                        tb.processEndTag(el.nodeName());\n                        break;\n                    }\n                    if (tb.isSpecial(el) && !StringUtil.inSorted(el.nodeName(), Constants.InBodyStartLiBreakers))\n                        break;\n                }\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.insert(startTag);\n            } else if (name.equals(\"textarea\")) {\n                tb.insert(startTag);\n                tb.tokeniser.transition(TokeniserState.Rcdata);\n                tb.markInsertionMode();\n                tb.framesetOk(false);\n                tb.transition(Text);\n                // Add the following code to skip the first newline if it's the next token\n                Token nextToken = tb.tokeniser.read();\n                if (nextToken.isCharacter() && nextToken.asCharacter().getData().equals(\"\\n\")) {\n                    // Skip the first newline\n                } else {\n                    tb.tokeniser.emit(nextToken);\n                }\n            } else if (name.equals(\"xmp\")) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.reconstructFormattingElements();\n                tb.framesetOk(false);\n                handleRawtext(startTag, tb);\n            } else {\n                // Handle other tags\n                tb.reconstructFormattingElements();\n                tb.insert(startTag);\n            }\n            break;\n\n        case EndTag:\n            // ... (rest of the EndTag case remains unchanged)\n\n        case EOF:\n            // ... (rest of the EOF case remains unchanged)\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}