{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        // ...\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            String name = startTag.normalName();\n            if (name.equals(\"pre\")) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.insert(startTag);\n                tb.framesetOk(false);\n            } else if (name.equals(\"textarea\")) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.insert(startTag);\n                tb.tokeniser.transition(TokeniserState.Rcdata);\n                tb.markInsertionMode();\n                tb.framesetOk(false);\n                tb.flagForNullString(startTag); // mark the textarea token to ignore the first line feed\n                tb.transition(Text);\n            }\n            // ...\n        case Character:\n            Token.Character c = t.asCharacter();\n            if (c.getData().equals(nullString)) {\n                if (tb.shouldIgnoreNullString()) { // check if we should ignore the current character token\n                    tb.resetIgnoreNullString();\n                    return true;\n                }\n                tb.error(this);\n                return false;\n            } else if (tb.framesetOk() && isWhitespace(c)) {\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n            } else {\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n                tb.framesetOk(false);\n            }\n            break;\n        // ...\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}