{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        //... (rest of the code remains the same until the below changes)\n\n        case StartTag:\n            //... (rest of the code remains the same until the below changes)\n\n        else if (name.equals(\"textarea\")) {\n            tb.insert(startTag);\n            // NEWLY ADDED BLOCK\n            if (tb.tokeniser.isNextChar TokType.Character \n                && tb.tokeniser.consumeCharacter().charAt(0) == '\\n') {\n                // Ignore the first newline character in <textarea>\n                tb.tokeniser.consumeCharacter();\n            }\n            // END NEWLY ADDED BLOCK\n            tb.tokeniser.transition(TokeniserState.Rcdata);\n            tb.markInsertionMode();\n            tb.framesetOk(false);\n            tb.transition(Text);\n        }\n\n        //... (rest of the code remains the same until the below changes)\n\n        case StartTag:\n            //... (rest of the code remains the same until the below changes)\n\n        else if (name.equals(\"pre\")) {\n            tb.reconstructFormattingElements();\n            tb.insert(startTag);\n            tb.framesetOk(false);\n            // NEWLY ADDED BLOCK\n            if (tb.tokeniser.isNextChar(TokType.Character) \n                && tb.tokeniser.consumeCharacter().charAt(0) == '\\n') {\n                // Ignore the first newline character in <pre>\n                tb.tokeniser.consumeCharacter();\n            }\n            // END NEWLY ADDED BLOCK\n        }\n\n        //... (rest of the code remains the same)\n\n        //... (other cases remain unchanged)\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}