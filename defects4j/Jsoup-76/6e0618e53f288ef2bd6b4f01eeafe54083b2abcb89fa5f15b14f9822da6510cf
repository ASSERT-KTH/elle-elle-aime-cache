{
    "generation": "boolean process(Token t, HtmlTreeBuilder tb) {\n    switch (t.type) {\n        case Character: {\n            Token.Character c = t.asCharacter();\n            if (c.getData().equals(nullString)) {\n                // todo confirm that check\n                tb.error(this);\n                return false;\n            } else if (tb.framesetOk() && isWhitespace(c)) { // don't check if whitespace if frames already closed\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n            } else {\n                tb.reconstructFormattingElements();\n                tb.insert(c);\n                tb.framesetOk(false);\n            }\n            break;\n        }\n        case Comment: {\n            tb.insert(t.asComment());\n            break;\n        }\n        case Doctype: {\n            tb.error(this);\n            return false;\n        }\n        case StartTag:\n            Token.StartTag startTag = t.asStartTag();\n            // todo - refactor to a switch statement\n            String name = startTag.normalName();\n            if (name.equals(\"pre\") || name.equals(\"textarea\")) {\n                if (tb.inButtonScope(\"p\")) {\n                    tb.processEndTag(\"p\");\n                }\n                tb.insert(startTag);\n\n                // Ignore a newline right after a <pre> or <textarea> start tag\n                tb.tokeniser.transition(TokeniserState.Rcdata);\n                if (name.equals(\"pre\") && !tb.isFragmentParsing()) {\n                    tb.skipNextNewline();\n                }\n\n                tb.framesetOk(false);\n                tb.markInsertionMode();\n                tb.transition(Text);\n            } else {\n                // Original processing logic here for other elements (unchanged from the existing implementation)\n                // ...\n            }\n            break;\n\n        case EndTag:\n            Token.EndTag endTag = t.asEndTag();\n            String endName = endTag.normalName();\n            if (endName.equals(\"pre\") || endName.equals(\"textarea\")) {\n                tb.popStackToClose(endName);\n                tb.transition(InBody);\n            } else {\n                // Original end tag processing logic for other elements (unchanged from the existing implementation)\n                // ...\n            }\n            break; \n\n        case EOF:\n            // todo: error if stack contains something not dd, dt, li, p, tbody, td, tfoot, th, thead, tr, body, html\n            // stop parsing\n            break;\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}