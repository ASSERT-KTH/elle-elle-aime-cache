{
    "generation": "    /**\n     * If the property contains a collection, then the length of that\n     * collection, otherwise - 1.\n     * @return int length\n     */\n    public int getLength() {\n        Object baseValue = getBaseValue();\n        if (baseValue == null) {\n            return -1;\n        } else if (baseValue instanceof Collection) {\n            return ((Collection<?>) baseValue).size();\n        } else if (baseValue instanceof Map) {\n            return ((Map<?, ?>) baseValue).size();\n        } else if (baseValue instanceof Object[]) {\n            return ((Object[]) baseValue).length;\n        } else if (baseValue instanceof int[]) {\n            return ((int[]) baseValue).length;\n        } else if (baseValue instanceof long[]) {\n            return ((long[]) baseValue).length;\n        } else if (baseValue instanceof short[]) {\n            return ((short[]) baseValue).length;\n        } else if (baseValue instanceof byte[]) {\n            return ((byte[]) baseValue).length;\n        } else if (baseValue instanceof float[]) {\n            return ((float[]) baseValue).length;\n        } else if (baseValue instanceof double[]) {\n            return ((double[]) baseValue).length;\n        } else if (baseValue instanceof char[]) {\n            return ((char[]) baseValue).length;\n        } else if (baseValue instanceof boolean[]) {\n            return ((boolean[]) baseValue).length;\n        }\n        return -1;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}