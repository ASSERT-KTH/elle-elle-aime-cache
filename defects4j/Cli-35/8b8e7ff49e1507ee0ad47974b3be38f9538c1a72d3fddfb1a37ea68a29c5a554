{
    "generation": "    /**\n     * Returns the options with a long name starting with the name specified.\n     * \n     * @param opt the partial name of the option\n     * @return the options matching the partial name specified, or an empty list if none matches\n     * @since 1.3\n     */\n    public List<String> getMatchingOptions(String opt)\n    {\n        opt = Util.stripLeadingHyphens(opt);\n        \n        List<String> matchingOpts = new ArrayList<String>();\n        boolean exactMatchFound = false;\n\n        // Check for an exact match first\n        for (String longOpt : longOpts.keySet()) {\n            if (longOpt.equals(opt)) {\n                matchingOpts.add(longOpt);\n                exactMatchFound = true;\n                break;\n            }\n        }\n\n        // If no exact match is found, find all options that start with the prefix\n        if (!exactMatchFound) {\n            for (String longOpt : longOpts.keySet()) {\n                if (longOpt.startsWith(opt)) {\n                    matchingOpts.add(longOpt);\n                }\n            }\n        }\n        \n        return matchingOpts;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}