{
    "generation": "@Override\nNode processForInLoop(ForInLoop loopNode) {\n  Node iterator = transform(loopNode.getIterator());\n  Node iteratedObject = transform(loopNode.getIteratedObject());\n\n  // Check if the loop is a \"for each\" loop\n  if (loopNode.isForEach()) {\n    // Wrap the iterator in a \"JSCompiler_forEach\" function call\n    iterator = newNode(Token.CALL, newNode(Token.NAME, \"JSCompiler_forEach\"))\n        . addChildToBack(iterator)\n        . addChildToBack(newNode(Token.THIS));\n  }\n\n  return newNode(\n      Token.FOR,\n      iterator,\n      iteratedObject,\n      transformBlock(loopNode.getBody()));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}