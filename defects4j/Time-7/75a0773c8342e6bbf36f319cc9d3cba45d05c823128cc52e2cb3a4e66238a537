{
    "generation": "public int parseInto(ReadWritableInstant instant, String text, int position) {\n    DateTimeParser parser = requireParser();\n    if (instant == null) {\n        throw new IllegalArgumentException(\"Instant must not be null\");\n    }\n\n    long instantMillis = instant.getMillis();\n    Chronology chrono = instant.getChronology();\n    long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);\n    chrono = selectChronology(chrono);\n    int defaultYear = chrono.year().get(instantLocal);\n\n    DateTimeParserBucket bucket = new DateTimeParserBucket(\n        instantLocal, chrono, iLocale, iPivotYear, defaultYear);\n    int newPos = parser.parseInto(bucket, text, position);\n    long computedMillis = bucket.computeMillis(false, text);\n    // Adjust for year rollover when parsing month-day without a year\n    if (bucket.getSavedField(DateTimeFieldType.monthOfYear()) != null &&\n        bucket.getSavedField(DateTimeFieldType.dayOfMonth()) != null) {\n        int parsedMonth = bucket.getSavedField(DateTimeFieldType.monthOfYear()).getValue();\n        int parsedDay = bucket.getSavedField(DateTimeFieldType.dayOfMonth()).getValue();\n        if (parsedMonth == 2 && parsedDay == 29 && !chrono.year().isLeap(defaultYear)) {\n            // Roll over to the next valid leap year if feb 29 parsed in a non-leap year\n            defaultYear = chrono.year().add(defaultYear, 1);\n            while (!chrono.year().isLeap(defaultYear)) {\n                defaultYear = chrono.year().add(defaultYear, 1);\n            }\n            bucket.saveField(DateTimeFieldType.year(), defaultYear);\n            computedMillis = bucket.computeMillis(false, text);\n        }\n    }\n    instant.setMillis(computedMillis);\n    if (iOffsetParsed && bucket.getOffsetInteger() != null) {\n        int parsedOffset = bucket.getOffsetInteger();\n        DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);\n        chrono = chrono.withZone(parsedZone);\n    } else if (bucket.getZone() != null) {\n        chrono = chrono.withZone(bucket.getZone());\n    }\n    instant.setChronology(chrono);\n    if (iZone != null) {\n        instant.setZone(iZone);\n    }\n    return newPos;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}