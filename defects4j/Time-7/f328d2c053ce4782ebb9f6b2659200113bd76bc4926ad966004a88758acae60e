{
    "generation": "public int parseInto(ReadWritableInstant instant, String text, int position) {\n    DateTimeParser parser = requireParser();\n    if (instant == null) {\n        throw new IllegalArgumentException(\"Instant must not be null\");\n    }\n\n    long instantMillis = instant.getMillis();\n    Chronology chrono = instant.getChronology();\n    long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);\n    chrono = selectChronology(chrono);\n    int defaultYear = chrono.year().get(instantLocal);\n\n    DateTimeParserBucket bucket = new DateTimeParserBucket(\n        instantLocal, chrono, iLocale, iPivotYear, defaultYear);\n    int newPos = parser.parseInto(bucket, text, position);\n\n    if (newPos >= 0) {\n        if (bucket.isFieldSet(DateTimeFieldType.dayOfMonth()) &&\n            bucket.isFieldSet(DateTimeFieldType.monthOfYear())) {\n            int parsedMonth = bucket.getField(DateTimeFieldType.monthOfYear());\n            int parsedDayOfMonth = bucket.getField(DateTimeFieldType.dayOfMonth());\n\n            if (parsedMonth == DateTimeConstants.FEBRUARY && parsedDayOfMonth == 29) {\n                chrono = chrono.withUTC();\n                instant.setChronology(chrono);\n                instantLocal = chrono.getDateTimeMillis(instantLocal, iLocale);\n                int parsedYear = bucket.isFieldSet(DateTimeFieldType.year()) ?\n                    bucket.getField(DateTimeFieldType.year()) : chrono.year().get(instantLocal);\n                if (!chrono.isLeapYear(parsedYear)) {\n                    throw new IllegalFieldValueException(\"Cannot parse \"+text+\": Value 29 for dayOfMonth must be in the range [1,28] for non-leap year \"+parsedYear);\n                }\n            }\n        }\n        instant.setMillis(bucket.computeMillis(false, text));\n        if (iOffsetParsed && bucket.getOffsetInteger() != null) {\n            int parsedOffset = bucket.getOffsetInteger();\n            DateTimeZone parsedZone = DateTimeZone.forOffsetMillis(parsedOffset);\n            chrono = chrono.withZone(parsedZone);\n        } else if (bucket.getZone() != null) {\n            chrono = chrono.withZone(bucket.getZone());\n        }\n        instant.setChronology(chrono);\n        if (iZone != null) {\n            instant.setZone(iZone);\n        }\n    }\n    return newPos;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}