{
    "generation": "    public int parseInto(ReadWritableInstant instant, String text, int position) {\n        DateTimeParser parser = requireParser();\n        if (instant == null) {\n            throw new IllegalArgumentException(\"Instant must not be null\");\n        }\n\n        long instantMillis = instant.getMillis();\n        Chronology chrono = instant.getChronology();\n        long instantLocal = instantMillis + chrono.getZone().getOffset(instantMillis);\n        chrono = selectChronology(chrono);\n\n        // Adjust the default year using the supplied instant's chronology\n        DateTimeField dayOfYearField = chrono.dayOfYear();\n        int defaultYear = chrono.year().get(instantLocal);\n        if (dayOfYearField.get(instantLocal) == 1) {\n            // If input instant represents Jan 1st and text doesn't have a year, allow leap checks\n            defaultYear = chrono.year().get(instant.getMillis());\n        }\n\n        DateTimeParserBucket bucket = new DateTimeParserBucket(\n            instantLocal, chrono, iLocale, iPivotYear, )\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}