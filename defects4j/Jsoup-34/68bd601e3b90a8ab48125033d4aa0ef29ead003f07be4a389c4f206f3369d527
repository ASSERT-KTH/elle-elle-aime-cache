{
    "generation": "    /**\n     * Returns the number of characters between the current position and the next instance of the input sequence\n     *\n     * @param seq scan target\n     * @return offset between current position and next instance of target. -1 if not found.\n     */\n    int nextIndexOf(CharSequence seq) {\n        // doesn't handle scanning for surrogates\n        char startChar = seq.charAt(0);\n        for (int offset = pos; offset < length; offset++) {\n            // scan to first instance of startChar:\n            if (startChar != input[offset]) {\n                while (++offset < length && startChar != input[offset]);\n            }\n            \n            if (offset >= length) break; // Ensure offset doesn't go out of bounds\n            \n            int i = offset + 1;\n            int last = i + seq.length() - 1;\n            if (last <= length) { // Ensure sequence fits within bounds\n                int j;\n                for (j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);\n                if (i == last && j == seq.length() - 1) // found full sequence\n                    return offset - pos;\n            }\n        }\n        return -1;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}