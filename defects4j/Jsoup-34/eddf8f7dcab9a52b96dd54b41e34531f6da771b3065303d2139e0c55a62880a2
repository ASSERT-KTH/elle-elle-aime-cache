{
    "generation": "    /**\n     * Returns the number of characters between the current position and the next instance of the input sequence\n     *\n     * @param seq scan target\n     * @return offset between current position and next instance of target. -1 if not found.\n     */\n    int nextIndexOf(CharSequence seq) {\n        char startChar = seq.charAt(0);\n        int seqLen = seq.length();\n        if (seqLen == 1) {\n            for (int offset = pos; offset < length; offset++) {\n                if (startChar == input[offset]) {\n                    return offset - pos;\n                }\n            }\n        } else {\n            next_seq: for (int offset = pos; offset <= length - seqLen; offset++) {\n                // scan to first instance of startchar:\n                if (startChar != input[offset]) {\n                    while (++offset <= length - seqLen && startChar != input[offset]) ;\n                }\n\n                int i = offset + 1;\n                int last = offset + seqLen;\n                if (offset < length) {\n                    for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++) {\n                        if (i == last) {\n                            return offset - pos;\n                        }\n                    }\n                }\n            }\n        }\n        return -1;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}