{
    "generation": "/**\n * Returns the number of characters between the current position and the next instance of the input sequence\n *\n * @param seq scan target\n * @return offset between current position and next instance of target. -1 if not found.\n */\nint nextIndexOf(CharSequence seq) {\n    // doesn't handle scanning for surrogates\n    if (seq.length() == 0) {\n        return 0; // or handle as needed\n    }\n    char startChar = seq.charAt(0);\n    int seqLen = seq.length();\n    for (int offset = pos; offset <= length - seqLen; offset++) {\n        // scan to first instance of startChar:\n        while (offset < length && startChar != input[offset]) {\n            offset++;\n        }\n        if (offset >= length) {\n            break;\n        }\n        int i = offset + 1;\n        int j = 1;\n        while (i < offset + seqLen && j < seqLen) {\n            if (seq.charAt(j) != input[i]) {\n                break;\n            }\n            i++;\n            j++;\n        }\n        if (j == seqLen) {\n            // found full sequence\n            return offset - pos;\n        }\n        offset += j; // skip the partially matched part\n    }\n    return -1;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}