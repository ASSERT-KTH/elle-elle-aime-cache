{
    "generation": "/**\n * Returns the number of characters between the current position and the next instance of the input sequence\n *\n * @param seq scan target\n * @return offset between current position and next instance of target. -1 if not found.\n */\nint nextIndexOf(CharSequence seq) {\n    char startChar = seq.charAt(0);\n    int seqLen = seq.length();\n    \n    for (int offset = pos; offset <= length - seqLen; offset++) {\n        // scan to first instance of startChar:\n        if (startChar != input[offset])\n            while (++offset <= length - seqLen && startChar != input[offset]);\n        \n        if (offset > length - seqLen) break; // not enough remaining chars to match seq\n\n        boolean match = true;\n        for (int i = 1; i < seqLen; i++) {\n            if (seq.charAt(i) != input[offset + i]) {\n                match = false;\n                break;\n            }\n        }\n        \n        if (match) {\n            return offset - pos;\n        }\n    }\n    return -1;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}