{
    "generation": "/**\n * Returns the number of characters between the current position and the next instance of the input sequence\n *\n * @param seq scan target\n * @return offset between current position and next instance of target. -1 if not found.\n */\nint nextIndexOf(CharSequence seq) {\n    char startChar = seq.charAt(0);\n    for (int offset = pos; offset < length; offset++) {\n        if (startChar!= input[offset]) {\n            while (++offset < length && startChar!= input[offset]) {\n                if (offset == length - 1) {\n                    return -1; // not found, at end of input\n                }\n            }\n        }\n        int i = offset + 1;\n        int last = i + seq.length() - 1;\n        if (last <= length) { // check if in bounds\n            for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++) ;\n            if (i == last) // found full sequence\n                return offset - pos;\n        }\n    }\n    return -1;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}