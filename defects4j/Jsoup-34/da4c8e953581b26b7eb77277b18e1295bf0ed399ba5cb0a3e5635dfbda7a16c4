{
    "generation": "    /**\n     * Returns the number of characters between the current position and the next instance of the input sequence\n     *\n     * @param seq scan target\n     * @return offset between current position and next instance of target. -1 if not found.\n     */\n    int nextIndexOf(CharSequence seq) {\n        // doesn't handle scanning for surrogates\n        char startChar = seq.charAt(0);\n        int seqLength = seq.length();\n        int maxScan = length - seqLength; // limit to avoid scanning past the end of input\n        \n        for (int offset = pos; offset <= maxScan; offset++) {\n            // scan to first instance of startchar:\n            if (startChar != input[offset])\n                while (++offset <= maxScan && startChar != input[offset]);\n            int i = offset + 1;\n            int last = i + seqLength - 1;\n            if (offset <= maxScan) {\n                int j = 1;\n                for (; i < last && seq.charAt(j) == input[i]; i++, j++);\n                if (i == last && seq.charAt(j) == input[i]) // found full sequence\n                    return offset - pos;\n            }\n        }\n        return -1;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}