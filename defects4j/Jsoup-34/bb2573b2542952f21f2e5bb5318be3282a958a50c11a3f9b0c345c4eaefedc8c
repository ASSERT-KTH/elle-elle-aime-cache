{
    "generation": "/**\n * Returns the number of characters between the current position and the next instance of the input sequence\n *\n * @param seq scan target\n * @return offset between current position and next instance of target. -1 if not found.\n */\nint nextIndexOf(CharSequence seq) {\n    // Handle scanning for surrogates and prevent ArrayIndexOutOfBoundsException\n    if (seq.length() == 0) return -1; // edge case: empty sequence\n    \n    char startChar = seq.charAt(0);\n    for (int offset = pos; offset < length; offset++) {\n        // Scan to first instance of startChar, with bounds checking\n        if (startChar == input[offset]) {\n            int i = offset + 1;\n            int last = i + seq.length() - 1;\n            if (last < length) { // ensure we don't exceed input bounds\n                for (int j = 1; i <= last && j < seq.length() && seq.charAt(j) == input[i]; i++, j++);\n                if (j == seq.length()) // found full sequence\n                    return offset - pos;\n            }\n        }\n    }\n    return -1;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}