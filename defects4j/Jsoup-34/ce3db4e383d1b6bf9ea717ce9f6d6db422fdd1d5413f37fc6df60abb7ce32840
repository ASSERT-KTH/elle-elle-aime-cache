{
    "generation": "    /**\n     * Returns the number of characters between the current position and the next instance of the input sequence\n     *\n     * @param seq scan target\n     * @return offset between current position and next instance of target. -1 if not found.\n     */\n    int nextIndexOf(CharSequence seq) {\n        if (seq.length() == 0) return -1; // empty sequence\n        \n        char startChar = seq.charAt(0);\n        for (int offset = pos; offset < length; offset++) {\n            // scan to first instance of startchar:\n            if (startChar != input[offset])\n                while(++offset < length && startChar != input[offset]);\n            \n            if (offset >= length) break; // reached end of input\n            \n            int i = offset + 1;\n            int last = i + seq.length() - 1;\n            if (last > length) continue; // sequence would extend past end of input\n            \n            boolean match = true;\n            for (int j = 1; j < seq.length(); j++, i++) {\n                if (i >= length || seq.charAt(j) != input[i]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) // found full sequence\n                return offset - pos;\n        }\n        return -1;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}