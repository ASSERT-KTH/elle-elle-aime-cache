{
    "generation": "    /**\n     * Returns the number of characters between the current position and the next instance of the input sequence\n     *\n     * @param seq scan target\n     * @return offset between current position and next instance of target. -1 if not found.\n     */\n    int nextIndexOf(CharSequence seq) {\n        char startChar = seq.charAt(0);\n        for (int offset = pos; offset < length; offset++) {\n            // scan to first instance of startchar:\n            if (startChar != input[offset]) {\n                while (++offset < length && startChar != input[offset]);\n                offset--; // compensate for the extra increment in the while loop\n            }\n            int i = offset + 1;\n            int last = i + seq.length() - 1;\n            if (last <= length) {\n                boolean match = true;\n                for (int j = 1; i < last && match; i++, j++) {\n                    if (seq.charAt(j) != input[i]) {\n                        match = false;\n                    }\n                }\n                if (match && i == last) {\n                    return offset - pos;\n                }\n            }\n        }\n        return -1;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}