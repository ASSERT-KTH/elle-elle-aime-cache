{
    "generation": "    /**\n     * Returns the number of characters between the current position and the next instance of the input sequence\n     *\n     * @param seq scan target\n     * @return offset between current position and next instance of target. -1 if not found.\n     */\n    int nextIndexOf(CharSequence seq) {\n        // doesn't handle scanning for surrogates\n        char startChar = seq.charAt(0);\n        for (int offset = pos; offset < length; offset++) {\n            // scan to first instance of startchar:\n            if (startChar != input[offset])\n                while(++offset < length && startChar != input[offset]);\n            if (offset >= length)\n                return -1;\n                \n            int i = offset + 1;\n            int last = offset + seq.length();\n            if (last <= length) {  // check if the remaining length is enough for the sequence\n                boolean match = true;\n                for (int j = 1; j < seq.length(); j++, i++) {\n                    if (input[i] != seq.charAt(j)) {\n                        match = false;\n                        break;\n                    }\n                }\n                if (match)\n                    return offset - pos;\n            }\n        }\n        return -1;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}