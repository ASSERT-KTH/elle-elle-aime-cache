{
    "generation": "@Override\npublic JsonToken nextToken() throws IOException\n{\n    _binaryValue = null;\n    if (_nextToken != null) {\n        JsonToken t = _nextToken;\n        _currToken = t;\n        _nextToken = null;\n        switch (t) {\n            // existing code...\n        }\n        return t;\n    }\n    int token = _xmlTokens.next();\n\n    while (token == XmlTokenStream.XML_START_ELEMENT) {\n        // existing code...\n    }\n\n    // Ok; beyond start element, what do we get?\n    switch (token) {\n        // existing code...\n\n        case XmlTokenStream.XML_TEXT:\n            _currText = _xmlTokens.getText();\n            if (_mayBeLeaf) {\n                _mayBeLeaf = false;\n                if (_parsingContext.inArray()) {\n                    if (_isEmpty(_currText)) {\n                        _currToken = JsonToken.END_ARRAY;\n                        _parsingContext = _parsingContext.getParent();\n                        _namesToWrap = _parsingContext.getNamesToWrap();\n                        return _currToken;\n                    }\n                }\n                return (_currToken = JsonToken.VALUE_STRING);\n            } else {\n                if (_parsingContext.inObject() && (_currToken != JsonToken.FIELD_NAME) && _isEmpty(_currText)) {\n                    _currToken = JsonToken.VALUE_NULL; // Change from JsonToken.END_OBJECT to JsonToken.VALUE_NULL\n                    return _currToken;\n                }\n            }\n            // existing code...\n\n        case XmlTokenStream.XML_END_ELEMENT:\n            if (_mayBeLeaf) {\n                _mayBeLeaf = false;\n                return (_currToken = JsonToken.VALUE_NULL);\n            }\n            _currToken = _parsingContext.inArray() ? JsonToken.END_ARRAY : JsonToken.END_OBJECT;\n            if (JsonToken.END_ARRAY == _currToken) {\n                // If we have an empty array, we need to move up the parsing context and namesToWrap\n                _parsingContext = _parsingContext.getParent();\n                _namesToWrap = _parsingContext.getNamesToWrap();\n            }\n            return _currToken;\n\n        // remaining cases...\n    }\n\n    // should never get here\n    _throwInternal();\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}