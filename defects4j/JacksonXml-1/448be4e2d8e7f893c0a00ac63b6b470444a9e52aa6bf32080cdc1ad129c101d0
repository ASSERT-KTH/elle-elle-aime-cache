{
    "generation": "case XmlTokenStream.XML_TEXT:\n    _currText = _xmlTokens.getText();\n    if (_mayBeLeaf) {\n        _mayBeLeaf = false;\n        // Skip following END_ELEMENT\n        _xmlTokens.skipEndElement();\n        if (_parsingContext.inArray() && _isEmpty(_currText)) {\n            // If the current text is empty and we're in an array context, return END_ARRAY\n            _currToken = JsonToken.END_ARRAY;\n            _parsingContext = _parsingContext.getParent();\n            _namesToWrap = _parsingContext.getNamesToWrap();\n            return _currToken;\n        }\n        return (_currToken = JsonToken.VALUE_STRING);\n    } else {\n        // If the current text is empty and we're in an object context, return END_OBJECT\n        if (_parsingContext.inObject() && (_currToken != JsonToken.FIELD_NAME) && _isEmpty(_currText)) {\n            _currToken = JsonToken.END_OBJECT;\n            _parsingContext = _parsingContext.getParent();\n            _namesToWrap = _parsingContext.getNamesToWrap();\n            return _currToken;\n        }\n    }\n    // If not a leaf (or otherwise ignorable), need to transform into property...\n    _parsingContext.setCurrentName(_cfgNameForTextElement);\n    _nextToken = JsonToken.VALUE_STRING;\n    return (_currToken = JsonToken.FIELD_NAME);",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}