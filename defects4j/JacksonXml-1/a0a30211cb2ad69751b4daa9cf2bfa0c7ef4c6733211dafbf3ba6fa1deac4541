{
    "generation": "@Override\npublic JsonToken nextToken() throws IOException {\n    _binaryValue = null;\n    if (_nextToken != null) {\n        JsonToken t = _nextToken;\n        _currToken = t;\n        _nextToken = null;\n        switch (t) {\n            case START_OBJECT:\n                _parsingContext = _parsingContext.createChildObjectContext(-1, -1);\n                break;\n            case START_ARRAY:\n                _parsingContext = _parsingContext.createChildArrayContext(-1, -1);\n                break;\n            case END_OBJECT:\n            case END_ARRAY:\n                _parsingContext = _parsingContext.getParent();\n                _namesToWrap = _parsingContext.getNamesToWrap();\n                break;\n            case FIELD_NAME:\n                _parsingContext.setCurrentName(_xmlTokens.getLocalName());\n                break;\n            default: // VALUE_STRING, VALUE_NULL\n                // should be fine as is?\n        }\n        return t;\n    }\n\n    // ... rest of the code ...\n\n    // Ok; beyond start element, what do we get?\n    switch (token) {\n        case XmlTokenStream.XML_END_ELEMENT:\n            // Simple, except that if this is a leaf, need to suppress end:\n            if (_mayBeLeaf) {\n                _mayBeLeaf = false;\n                _currToken = JsonToken.END_OBJECT;\n                return _currToken;\n            }\n            // ... rest of the code ...\n\n        // ... rest of the code ...\n    }\n\n    // ... rest of the code ...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}