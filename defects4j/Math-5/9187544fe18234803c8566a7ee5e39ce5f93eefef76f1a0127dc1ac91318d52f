{
    "generation": "public Complex reciprocal() {\n    if (isNaN) {\n        return NaN;\n    }\n\n    if (real == 0.0 && imaginary == 0.0) {\n        return INF; // Fix: Return INF instead of NaN\n    }\n\n    if (isInfinite) {\n        if (real == 0.0) {\n            return createComplex(0.0, -1.0 / imaginary);\n        } else if (imaginary == 0.0) {\n            return createComplex(1.0 / real, 0.0);\n        } else {\n            return ZERO;\n        }\n    }\n\n    if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n        double q = real / imaginary;\n        double scale = 1.0 / (real * q + imaginary);\n        return createComplex(scale * q, -scale);\n    } else {\n        double q = imaginary / real;\n        double scale = 1.0 / (imaginary * q + real);\n        return createComplex(scale, -scale * q);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}