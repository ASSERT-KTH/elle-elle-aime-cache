{
    "generation": "    /** {@inheritDoc} */\n    public Complex reciprocal() {\n        if (isNaN) {\n            return NaN;\n        }\n\n        if (real == 0.0 && imaginary == 0.0) {\n            return NaN;\n        }\n\n        if (isInfinite) {\n            return ZERO;\n        }\n\n        double denominator = real * real + imaginary * imaginary;\n        if (denominator == 0.0) {\n            return INF;\n        }\n\n        double scale = 1.0 / denominator;\n        return createComplex(real * scale, -imaginary * scale);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}