{
    "generation": "@Override\nNode processFunctionNode(FunctionNode functionNode) {\n    Name name = functionNode.getFunctionName();\n    Boolean isUnnamedFunction = false;\n\n    if (name == null || name.getIdentifier() == null || name.getIdentifier().isEmpty()) {\n        // If the function name is not provided or is empty, treat it as an unnamed function.\n        name = new Name();\n        name.setIdentifier(\"\");\n        isUnnamedFunction = true;\n    }\n\n    Node node = newNode(Token.FUNCTION);\n    Node newName = transform(name);\n\n    if (isUnnamedFunction) {\n        // Old Rhino tagged the empty name node with the line number of the declaration.\n        newName.setLineno(functionNode.getLineno());\n        // TODO: Mark line number of paren correctly.\n        // The left paren might not be on the same line as the function keyword.\n        int lpColumn = functionNode.getAbsolutePosition() + functionNode.getLp();\n        newName.setCharno(position2charno(lpColumn));\n    }\n\n    node.addChildToBack(newName);\n    Node lp = newNode(Token.LP);\n    // The left paren's complicated because it's not represented by an AstNode, so there's nothing that has the actual line number that it appeared on.\n    // We assume the paren has to appear on the same line as the function name (or else a semicolon will be inserted).\n    // If there's no function name, assume the paren was on the same line as the function.\n    // TODO: Mark line number of paren correctly.\n    if (!isUnnamedFunction) {\n        lp.setLineno(name.getLineno());\n    } else {\n        lp.setLineno(functionNode.getLineno());\n    }\n    \n    int lparenCharno = functionNode.getLp() + functionNode.getAbsolutePosition();\n\n    lp.setCharno(position2charno(lparenCharno));\n    for (AstNode param : functionNode.getParams()) {\n        lp.addChildToBack(transform(param));\n    }\n    node.addChildToBack(lp);\n\n    Node bodyNode = transform(functionNode.getBody());\n    parseDirectives(bodyNode);\n    node.addChildToBack(bodyNode);\n    return node;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}