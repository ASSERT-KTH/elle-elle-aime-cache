{
    "generation": "@Override\nNode processFunctionNode(FunctionNode functionNode) {\n    Node node = newNode(Token.FUNCTION);\n    if (functionNode.getFunctionName() == null) {\n        // Add a name node with an empty identifier\n        Node newName = newNode(Token.NAME, \"\", functionNode.getLineno(), position2charno(functionNode.getAbsolutePosition() + functionNode.getLp()));\n        node.addChildToBack(newName);\n    } else {\n        node.addChildToBack(transform(functionNode.getFunctionName()));\n    }\n\n    Node lp = newNode(Token.LP);\n    lp.setLineno(functionNode.getLineno());\n    lp.setCharno(position2charno(functionNode.getAbsolutePosition() + functionNode.getLp()));\n\n    for (AstNode param : functionNode.getParams()) {\n        lp.addChildToBack(transform(param));\n    }\n    node.addChildToBack(lp);\n\n    Node bodyNode = transform(functionNode.getBody());\n    parseDirectives(bodyNode);\n    node.addChildToBack(bodyNode);\n    return node;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}