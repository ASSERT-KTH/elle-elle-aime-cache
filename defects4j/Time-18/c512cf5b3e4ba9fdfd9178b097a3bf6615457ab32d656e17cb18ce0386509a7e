{
    "generation": "/**\n * Returns the milliseconds from the Java epoch of 1970-01-01T00:00:00Z \n * for the specified date and time in this chronology, using the proleptic \n * Gregorian rules if necessary.\n * \n * @param year  the year\n * @param monthOfYear  the month (1-12)\n * @param dayOfMonth  the day (1-31)\n * @param hourOfDay  the hour (0-23)\n * @param minuteOfHour  the minute (0-59)\n * @param secondOfMinute  the second (0-59)\n * @param millisOfSecond  the millisecond (0-999)\n * @return the milliseconds from 1970-01-01T00:00:00Z\n * @throws IllegalArgumentException if the date is invalid (e.g. day of month is 30 in February)\n */\npublic long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour,\n                              int secondOfMinute, int millisOfSecond)\n    throws IllegalArgumentException\n{\n    Chronology base;\n    if ((base = getBase())!= null) {\n        return base.getDateTimeMillis\n            (year, monthOfYear, dayOfMonth,\n             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    }\n\n    // Check if date is valid in both calendars before determining the chronology\n    if (iJulianChronology.isValid(year, monthOfYear, dayOfMonth)) {\n        long instant = iJulianChronology.getDateTimeMillis\n            (year, monthOfYear, dayOfMonth,\n             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        if (instant < iCutoverMillis) {\n            return instant;\n        }\n    }\n\n    // Assume date is Gregorian if valid, or if not a valid Julian date\n    if (iGregorianChronology.isValid(year, monthOfYear, dayOfMonth)) {\n        return iGregorianChronology.getDateTimeMillis\n            (year, monthOfYear, dayOfMonth,\n             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    } else {\n        throw new IllegalArgumentException(\"Specified date does not exist\");\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}