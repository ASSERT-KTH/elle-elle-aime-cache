{
    "generation": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour,\n                              int secondOfMinute, int millisOfSecond)\n    throws IllegalArgumentException\n{\n    Chronology base;\n    if ((base = getBase()) != null) {\n        return base.getDateTimeMillis(\n            year, monthOfYear, dayOfMonth,\n            hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    }\n\n    // Determine if the date is before the cutover using Julian chronology.\n    long julianInstant = iJulianChronology.getDateTimeMillis(\n        year, monthOfYear, dayOfMonth,\n        hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n\n    if (julianInstant < iCutoverMillis) {\n        // Date is before the cutover, use Julian chronology.\n        return julianInstant;\n    } else {\n        // Date is on or after the cutover, use Gregorian chronology.\n        long gregorianInstant = iGregorianChronology.getDateTimeMillis(\n            year, monthOfYear, dayOfMonth,\n            hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        if (gregorianInstant >= iCutoverMillis) {\n            return gregorianInstant;\n        } else {\n            // The date is in the cutover gap, which doesn't exist.\n            throw new IllegalArgumentException(\"Specified date does not exist\");\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}