{
    "generation": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour,\n                              int secondOfMinute, int millisOfSecond)\n    throws IllegalArgumentException\n{\n    Chronology base;\n    if ((base = getBase())!= null) {\n        return base.getDateTimeMillis\n            (year, monthOfYear, dayOfMonth,\n             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    }\n\n    // Check if the date is before the cutover and is valid in the Julian chronology.\n    long julianInstant = iJulianChronology.getDateTimeMillis\n        (year, monthOfYear, dayOfMonth,\n         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    if (julianInstant < iCutoverMillis) {\n        return julianInstant;\n    }\n\n    // Assume date is Gregorian.\n    long gregorianInstant = iGregorianChronology.getDateTimeMillis\n        (year, monthOfYear, dayOfMonth,\n         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    if (gregorianInstant >= iCutoverMillis) {\n        return gregorianInstant;\n    }\n\n    // The date is in the cutover gap, check if the Julian chronology produces a date before the cutover.\n    if (iJulianChronology.dayOfYear().get(julianInstant) > 355) {\n        throw new IllegalArgumentException(\"Specified date does not exist\");\n    }\n\n    return julianInstant;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}