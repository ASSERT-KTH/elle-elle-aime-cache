{
    "generation": "    public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                                  int hourOfDay, int minuteOfHour,\n                                  int secondOfMinute, int millisOfSecond)\n        throws IllegalArgumentException\n    {\n        Chronology base;\n        if ((base = getBase()) != null) {\n            return base.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        }\n\n        // Ensure date exists in either Julian or Gregorian to handle leap year properly.\n        long instant;\n        // First, check in Julian chronology.\n        if (year < iGregorianChronology.getMinimumYear() || \n            (year == iGregorianChronology.getMinimumYear() && monthOfYear < iGregorianChronology.getMinimumMonth())) {\n            instant = iJulianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n        }\n        else{\n }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}