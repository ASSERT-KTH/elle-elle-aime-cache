{
    "generation": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour,\n                              int secondOfMinute, int millisOfSecond)\n    throws IllegalArgumentException\n{\n    Chronology base;\n    if ((base = getBase()) != null) {\n        return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                                      hourOfDay, minuteOfHour,\n                                      secondOfMinute, millisOfSecond);\n    }\n\n    // Determine which chronology to use based on the date.\n    if (year < iCutoverYear ||\n        (year == iCutoverYear && monthOfYear < iCutoverMonth) ||\n        (year == iCutoverYear && monthOfYear == iCutoverMonth && dayOfMonth < iCutoverDay)) {\n        // Date is before the cutover, use Julian chronology.\n        return iJulianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                                                   hourOfDay, minuteOfHour,\n                                                   secondOfMinute, millisOfSecond);\n    } else {\n        // Date is on or after the cutover, use Gregorian chronology.\n        return iGregorianChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,\n                                                      hourOfDay, minuteOfHour,\n                                                      secondOfMinute, millisOfSecond);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}