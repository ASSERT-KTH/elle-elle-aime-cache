{
    "generation": "public long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth,\n                              int hourOfDay, int minuteOfHour,\n                              int secondOfMinute, int millisOfSecond)\n    throws IllegalArgumentException\n{\n    Chronology base;\n    if ((base = getBase()) != null) {\n        return base.getDateTimeMillis\n            (year, monthOfYear, dayOfMonth,\n             hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    }\n\n    // First, try Gregorian\n    long instant = iGregorianChronology.getDateTimeMillis\n        (year, monthOfYear, dayOfMonth,\n         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n    if (instant < iCutoverMillis) {\n        // Then, try Julian\n        try {\n            instant = iJulianChronology.getDateTimeMillis\n                (year, monthOfYear, dayOfMonth,\n                 hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n            if (instant >= iCutoverMillis) {\n                // If Julian date is after cutover, it's invalid\n                throw new IllegalArgumentException(\"Specified date does not exist\");\n            }\n        } catch (IllegalArgumentException e) {\n            // If Julian fails, try adjusting for leap year\n            if (monthOfYear == 2 && dayOfMonth == 29) {\n                // Check if it's a leap year in Julian but not in Gregorian\n                if (iJulianChronology.year().isLeap(year) && !iGregorianChronology.year().isLeap(year)) {\n                    // Adjust to the day before (February 28th)\n                    instant = iJulianChronology.getDateTimeMillis\n                        (year, 2, 28,\n                         hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond);\n                    if (instant >= iCutoverMillis) {\n                        throw new IllegalArgumentException(\"Specified date does not exist\");\n                    }\n                    return instant;\n                }\n            }\n            throw e; // Re-throw the original exception if no adjustments were made\n        }\n    }\n    return instant;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}