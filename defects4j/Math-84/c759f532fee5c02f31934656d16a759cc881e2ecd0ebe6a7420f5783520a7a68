{
    "generation": "/** {@inheritDoc} */\n@Override\nprotected void iterateSimplex(final Comparator<RealPointValuePair> comparator)\n    throws FunctionEvaluationException, OptimizationException, IllegalArgumentException {\n\n    int maxIterations = getMaxIterations();\n    int iterations = 0;\n\n    while (iterations < maxIterations) {\n\n        incrementIterationsCounter();\n\n        // save the original vertex\n        final RealPointValuePair[] original = simplex;\n        final RealPointValuePair best = original[0];\n\n        // perform a reflection step\n        final RealPointValuePair reflected = evaluateNewSimplex(original, 1.0, comparator);\n        if (comparator.compare(reflected, best) < 0) {\n\n            // compute the expanded simplex\n            final RealPointValuePair[] reflectedSimplex = simplex;\n            final RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);\n            if (comparator.compare(reflected, expanded) <= 0) {\n                // accept the reflected simplex\n                simplex = reflectedSimplex;\n            } else {\n                // accept the expanded simplex\n                simplex = createSimplex(expanded, original);\n            }\n\n            continue;\n\n        }\n\n        // compute the contracted simplex\n        final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);\n        if (comparator.compare(contracted, best) < 0) {\n            // accept the contracted simplex\n            simplex = createSimplex(contracted, original);\n        } else {\n            // shrink the simplex\n            simplex = shrink-simplex(best, original);\n        }\n\n        // check convergence\n        if (isConverged(simplex)) {\n            return;\n        }\n\n        iterations++;\n    }\n\n    throw new MaxIterationsExceededException(maxIterations);\n}\n\n// Assuming the existence of the following methods, \n// which may need to be implemented or modified according to your actual class:\n// - getMaxIterations()\n// - createSimplex(RealPointValuePair, RealPointValuePair[])\n// - shrinkSimplex(RealPointValuePair, RealPointValuePair[])\n// - isConverged(RealPointValuePair[])",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}