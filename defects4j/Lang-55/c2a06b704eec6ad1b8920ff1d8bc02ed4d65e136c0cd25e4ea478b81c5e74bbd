{
    "generation": "/**\n * <p>Stop the stopwatch.</p>\n * \n * <p>This method ends a new timing session, allowing the time to be retrieved.</p>\n *\n * @throws IllegalStateException if the StopWatch is not running or suspended.\n */\npublic void stop() {\n    if(this.runningState!= STATE_RUNNING && this.runningState!= STATE_SUSPENDED) {\n        throw new IllegalStateException(\"Stopwatch is not running or suspended. \");\n    }\n    if (this.runningState == STATE_SUSPENDED) {\n        // accumulate suspended duration if already suspended\n        splitTimes[this.splitCount - 1] = System.currentTimeMillis() - this.systemTime;\n    } else {\n        // record new split if still running\n        splitTimes[this.splitCount++] = System.currentTimeMillis() - this.startTime;\n    }\n    stopTime = System.currentTimeMillis();\n    this.runningState = STATE_STOPPED;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}