{
    "generation": "    /**\n     * Get the current solution.\n     *\n     * @return current solution\n     */\n    protected RealPointValuePair getSolution() {\n        int negativeVarColumn = columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);\n        Integer negativeVarBasicRow = negativeVarColumn >= 0 ? getBasicRow(negativeVarColumn) : null;\n        double mostNegative = (negativeVarBasicRow == null) ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n\n        Set<Integer> basicRows = new HashSet<>();\n        double[] coefficients = new double[getOriginalNumDecisionVariables()];\n        for (int i = 0; i < coefficients.length; i++) {\n            int colIndex = columnLabels.indexOf(\"x\" + i);\n            if (colIndex < 0) {\n                coefficients[i] = 0;\n                continue;\n            }\n            Integer basicRow = getBasicRow(colIndex);\n            if (basicRow != null && basicRows.contains(basicRow)) {\n                // If the variable is already associated with a basic row, set its coefficient to 0.\n                coefficients[i] = 0;\n            } else {\n                // Add the basic row to the set and compute the coefficient.\n                basicRows.add(basicRow);\n                coefficients[i] = (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -\n                        (restrictToNonNegative ? Math.max(0, mostNegative) : mostNegative);\n            }\n        }\n        return new RealPointValuePair(coefficients, f.getValue(coefficients));\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}