{
    "generation": "protected RealPointValuePair getSolution() {\n  int negativeVarColumn = columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);\n  double mostNegative = 0;\n  if (negativeVarColumn > 0) {\n    Integer negativeVarBasicRow = getBasicRow(negativeVarColumn);\n    mostNegative = (negativeVarBasicRow == null) ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n  }\n\n  Set<Integer> basicRows = new HashSet<Integer>();\n  double[] coefficients = new double[getOriginalNumDecisionVariables()];\n  for (int i = 0; i < coefficients.length; i++) {\n      int colIndex = columnLabels.indexOf(\"x\" + i);\n      if (colIndex < 0) {\n        coefficients[i] = 0;\n        continue;\n      }\n      Integer basicRow = getBasicRow(colIndex);\n      if (basicRow == null) { // check if basicRow is null\n        coefficients[i] = -mostNegative; // if so, just set the coefficient to negative of mostNegative\n      } else if (basicRow == getNumRows()) { // if the basic row is found to be the objective function row\n        coefficients[i] = 0;\n      } else if (basicRows.contains(basicRow)) {\n        coefficients[i] = 0; // if multiple variables can take a given value, then we choose the first and set the rest equal to 0\n      } else {\n        basicRows.add(basicRow);\n        coefficients[i] = getEntry(basicRow, getRhsOffset()) - mostNegative; // get the positive value of the variable\n      }\n  }\n  return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}