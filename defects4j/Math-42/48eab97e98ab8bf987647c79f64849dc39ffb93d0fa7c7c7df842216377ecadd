{
    "generation": "protected RealPointValuePair getSolution() {\n    int negativeVarColumn = columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);\n    Integer negativeVarBasicRow = negativeVarColumn > 0 ? getBasicRow(negativeVarColumn) : null;\n    double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n\n    Set<Integer> basicRows = new HashSet<Integer>();\n    double[] coefficients = new double[getOriginalNumDecisionVariables()];\n    for (int i = 0; i < coefficients.length; i++) {\n        int colIndex = columnLabels.indexOf(\"x\" + i);\n        if (colIndex < 0) {\n          coefficients[i] = 0;\n          continue;\n        }\n        Integer basicRow = getBasicRow(colIndex);\n        // If the basic row is found to be the objective function row or if this row\n        // has already appeared, set the coefficient to negative mostNegative.\n        if (basicRow == null || basicRows.contains(basicRow)) {\n            coefficients[i] = 0 - mostNegative;\n        } else {\n            basicRows.add(basicRow);\n            coefficients[i] = getEntry(basicRow, getRhsOffset()) - mostNegative;\n        }\n    }\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}