{
    "generation": "protected RealPointValuePair getSolution() {\n  int negativeVarColumn = columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);\n  Integer negativeVarBasicRow = negativeVarColumn > 0 ? getBasicRow(negativeVarColumn) : null;\n  double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n\n  Set<Integer> basicRows = new HashSet<Integer>();\n  double[] coefficients = new double[getOriginalNumDecisionVariables()];\n  for (int i = 0; i < coefficients.length; i++) {\n    int colIndex = columnLabels.indexOf(\"x\" + i);\n    if (colIndex < 0) {\n      coefficients[i] = 0;\n      continue;\n    }\n    Integer basicRow = getBasicRow(colIndex);\n    if (basicRow != null && basicRow.equals(getObjectiveFunctionRow())) {\n      // if the basic row is found to be the objective function row\n      // set the coefficient to 0\n      coefficients[i] = 0;\n    } else if (basicRows.contains(basicRow)) {\n      // if multiple variables can take a given value\n      // then we choose the first and set the rest equal to 0\n      if (!restrictToNonNegative) {\n        coefficients[i] = 0 - mostNegative;\n      }\n    } else {\n      basicRows.add(basicRow);\n      coefficients[i] =\n          (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -\n          (!restrictToNonNegative ? mostNegative : 0);\n    }\n  }\n  return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}