{
    "generation": "protected RealPointValuePair getSolution() {\n    int negativeVarColumn = columnLabels.indexOf(NEGATIVE_VAR_COLUMN_LABEL);\n    Integer negativeVarBasicRow = negativeVarColumn > 0 ? getBasicRow(negativeVarColumn) : null;\n    double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());\n\n    Set<Integer> basicRows = new HashSet<>();\n    double[] coefficients = new double[getOriginalNumDecisionVariables()];\n    for (int i = 0; i < coefficients.length; i++) {\n        String varLabel = \"x\" + i;\n        int colIndex = columnLabels.indexOf(varLabel);\n        if (colIndex < 0) {\n            coefficients[i] = 0;\n            continue;\n        }\n        Integer basicRow = getBasicRow(colIndex);\n        if (basicRow != null && basicRows.contains(basicRow)) {\n            // If multiple variables share the same basic row, set coefficient to zero\n            coefficients[i] = 0;\n        } else {\n            basicRows.add(basicRow);\n            double value = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());\n            coefficients[i] = value - (restrictToNonNegative ? 0 : mostNegative);\n        }\n    }\n    return new RealPointValuePair(coefficients, f.getValue(coefficients));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}