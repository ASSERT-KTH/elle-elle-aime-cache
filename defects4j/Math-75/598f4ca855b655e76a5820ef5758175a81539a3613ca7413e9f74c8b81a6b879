{
    "generation": "@Deprecated\npublic double getPct(Object v) {\n    if (v instanceof Comparable) {\n        return getCumPct((Comparable<?>) v) - getCumPctPrevious((Comparable<?>) v);\n    } else {\n        throw new IllegalArgumentException(\"The provided value must be comparable\");\n    }\n}\n\nprivate double getCumPctPrevious(Comparable<?> v) {\n    Map<Comparable<?>, Long> freqMap = this.getData();\n    SortedMap<Comparable<?>, Long> headMap = freqMap.headMap(v);\n    long count = headMap.values().stream().mapToLong(Long::longValue).sum();\n    return (double) count / this.getSumFreq();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}