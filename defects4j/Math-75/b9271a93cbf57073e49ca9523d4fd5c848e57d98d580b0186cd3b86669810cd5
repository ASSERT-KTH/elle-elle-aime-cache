{
    "generation": "/**\n * Returns the percentage of values that are equal to v\n * (as a proportion between 0 and 1).\n * <p>\n * Returns <code>Double.NaN</code> if no values have been added.</p>\n *\n * @param v the value to lookup\n * @return the proportion of values equal to v\n * @throws IllegalArgumentException if v is not a Comparable\n * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0\n */\n@Deprecated\npublic double getPct(Object v) {\n    if (!(v instanceof Comparable)) {\n        throw new IllegalArgumentException(\"v must be a Comparable\");\n    }\n    double count = 0;\n    for (Object value : data.keySet()) {\n        if (value.equals(v)) {\n            count += data.get(value);\n        }\n    }\n    return count / getSumFreq();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}