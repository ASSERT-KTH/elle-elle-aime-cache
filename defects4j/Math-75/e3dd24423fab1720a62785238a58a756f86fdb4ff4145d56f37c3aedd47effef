{
    "generation": "/**\n * Returns the percentage of values that are equal to v\n * (as a proportion between 0 and 1).\n * <p>\n * Returns <code>Double.NaN</code> if no values have been added.</p>\n *\n * @param v the value to lookup\n * @return the proportion of values equal to v\n * @deprecated replaced by {@link #getPct(Comparable)} as of 2.0\n */\n@Deprecated\npublic double getPct(Object v) {\n    if (v instanceof Comparable) {\n        return getCumPct((Comparable<?>) v) - getCumPct(getPreviousValue(v));\n    } else {\n        return 0d;\n    }\n}\n\n/**\n * Helper method to return the previous value in sorting order.\n *\n * @param v the value for which we need the predecessor\n * @return the predecessor of v\n */\nprivate Comparable<?> getPreviousValue(Object v) {\n    // Implement the necessary logic to get the predecessor of v\n    // This could be a Floor function or something similar \n    // based on how the Frequency class is used.\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}