{
    "generation": "/**\n * Sets the values of Options using the values in <code>properties</code>.\n *\n * @param properties The value properties to be processed.\n */\nprotected void processProperties(Properties properties) {\n    if (properties == null) {\n        return;\n    }\n\n    for (Enumeration<?> e = properties.propertyNames(); e.hasMoreElements();) {\n        String option = e.nextElement().toString();\n\n        if (!cmd.hasOption(option)) {\n            Option opt = getOptions().getOption(option);\n\n            // get the value from the properties instance\n            String value = properties.getProperty(option);\n\n            if (opt.hasArg()) {\n                // always add value for options with arguments\n                try {\n                    opt.addValueForProcessing(value);\n                } catch (RuntimeException exp) {\n                    // if we cannot add the value don't worry about it\n                }\n                cmd.addOption(opt); // moved inside hasArg() block\n            } else if (\"yes\".equalsIgnoreCase(value)\n                    || \"true\".equalsIgnoreCase(value)\n                    || \"1\".equalsIgnoreCase(value)) {\n                // only add option if value is yes, true, or 1\n                cmd.addOption(opt);\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}