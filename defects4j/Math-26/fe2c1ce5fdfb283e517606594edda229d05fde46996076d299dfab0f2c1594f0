{
    "generation": "private Fraction(double value, double epsilon, int maxDenominator, int maxIterations)\n    throws FractionConversionException\n{\n    long overflow = Integer.MAX_VALUE;\n    double r0 = value;\n    long a0 = (long)FastMath.floor(r0);\n\n    if (a0 > overflow) {\n        throw new FractionConversionException(value, overflow, 1);\n    }\n\n    if (1.0 / overflow >= FastMath.abs(value)) {\n        throw new FractionConversionException(value, overflow, 1);\n    }\n\n    // ... rest of the code remains the same\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}