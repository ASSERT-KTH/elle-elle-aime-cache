{
    "generation": "public static boolean testNode(Node node, NodeTest test) {\n    if (test == null) {\n        return true;\n    }\n    if (test instanceof NodeNameTest) {\n        if (node.getNodeType() != Node.ELEMENT_NODE) {\n            return false;\n        }\n\n        NodeNameTest nodeNameTest = (NodeNameTest) test;\n        QName testName = nodeNameTest.getNodeName();\n        String namespaceURI = nodeNameTest.getNamespaceURI();\n        boolean wildcard = nodeNameTest.isWildcard();\n        String testPrefix = testName.getPrefix();\n        if (wildcard && testPrefix == null) {\n            return true;\n        }\n        String localName = DOMNodePointer.getLocalName(node);\n        if ((wildcard || testName.getLocalPart().equals(localName))\n                && equalStrings(namespaceURI, DOMNodePointer.getNamespaceURI(node))) {\n            return true;\n        }\n        return false;\n    }\n    // Rest of the method...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}