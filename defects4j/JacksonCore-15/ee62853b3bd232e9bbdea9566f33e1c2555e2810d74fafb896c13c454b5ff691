{
    "generation": "@Override\npublic JsonToken nextToken() throws IOException\n{\n    //... (rest of the method remains the same)\n\n    case ID_FIELD_NAME:\n        {\n            final String name = delegate.getCurrentName();\n            // note: this will also set 'needToHandleName'\n            f = _headContext.setFieldName(name);\n            if (f == TokenFilter.INCLUDE_ALL) {\n                _itemFilter = f;\n                if (!_includePath) {\n                    // Minor twist here: if parent NOT included, may need to induce output of\n                    // surrounding START_OBJECT/END_OBJECT\n                    if (_includeImmediateParent &&!_headContext.isStartHandled()) {\n                        t = _headContext.nextTokenToRead(); // returns START_OBJECT but also marks it handled\n                        _exposedContext = _headContext;\n                    }\n                }\n                return (_currToken = t);\n            }\n            if (f == null) {\n                delegate.nextToken();\n                delegate.skipChildren();\n                break;\n            }\n            f = f.includeProperty(name);\n            if (f == null) {\n                delegate.nextToken();\n                delegate.skipChildren();\n                break;\n            }\n            _itemFilter = f;\n            if (f == TokenFilter.INCLUDE_ALL) {\n                if (_includePath) {\n                    return (_currToken = t);\n                }\n            }\n            if (_includePath) {\n                t = _nextTokenWithBuffering(_headContext);\n                if (t!= null) {\n                    _currToken = t;\n                    return t;\n                }\n            }\n            // Check for _allowMultipleMatches - false and atleast there is one token - which is _currToken\n            if (!_allowMultipleMatches && _currToken!= null) {\n                return null;\n            }\n            break;\n        }\n\n    //... (rest of the method remains the same)\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}