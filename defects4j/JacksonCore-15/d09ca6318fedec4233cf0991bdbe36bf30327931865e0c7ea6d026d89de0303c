{
    "generation": "@Override\npublic JsonToken nextToken() throws IOException\n{\n    //Check for _allowMultipleMatches - false and atleast there is one token - which is _currToken\n    // check for no buffered context _exposedContext - null\n    //If all the conditions matches then check for scalar / non-scalar property\n    //if not scalar and ended successfully, then return null\n    //else if scalar, and scalar not present in obj/array and !includePath and INCLUDE_ALL matched once\n    // then return null\n\n    TokenFilterContext ctxt = _exposedContext;\n\n    if (ctxt != null) {\n        while (true) {\n            JsonToken t = ctxt.nextTokenToRead();\n            if (t != null) {\n                _currToken = t;\n                // If _allowMultipleMatches is false and we found a match, then return immediately\n                if (!_allowMultipleMatches && t != JsonToken.START_OBJECT && t != JsonToken.END_OBJECT && t != JsonToken.FIELD_NAME) {\n                    return t;\n                }\n                return t;\n            }\n            // all done with buffered stuff?\n            if (ctxt == _headContext) {\n                _exposedContext = null;\n                // If _allowMultipleMatches is false and we're done, then return immediately\n                if (!_allowMultipleMatches && _currToken != null && _currToken != JsonToken.START_OBJECT && _currToken != JsonToken.END_OBJECT && _currToken != JsonToken.FIELD_NAME) {\n                    return _currToken;\n                }\n                break;\n            }\n            // If not, traverse down the context chain\n            ctxt = _headContext.findChildOf(ctxt);\n            _exposedContext = ctxt;\n            if (ctxt == null) { // should never occur\n                throw _constructError(\"Unexpected problem: chain of filtered context broken\");\n            }\n        }\n    }\n\n    // If not, need to read more. If we got any:\n    JsonToken t = delegate.nextToken();\n    if (t == null) {\n        // no strict need to close, since we have no state here\n        return (_currToken = t);\n    }\n\n    // Remaining code stays the same...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}