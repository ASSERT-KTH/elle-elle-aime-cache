{
    "generation": "/**\n * Try to fold an array join: ['a', 'b', 'c'].join('') -> 'abc';\n */\nprivate Node tryFoldArrayJoin(Node n) {\n  Node callTarget = n.getFirstChild();\n\n  if (callTarget == null ||!NodeUtil.isGetProp(callTarget)) {\n    return n;\n  }\n\n  Node right = callTarget.getNext();\n  if (right!= null &&!NodeUtil.isImmutableValue(right)) {\n    return n;\n  }\n\n  Node arrayNode = callTarget.getFirstChild();\n  Node functionName = arrayNode.getNext();\n\n  if ((arrayNode.getType()!= Token.ARRAYLIT) ||\n     !functionName.getString().equals(\"join\")) {\n    return n;\n  }\n\n  if (arrayNode.getChildCount() == 0) {\n    // If the array is empty, return an empty string\n    Node emptyStringNode = Node.newString(\"\");\n    n.getParent().replaceChild(n, emptyStringNode);\n    reportCodeChange();\n    return emptyStringNode;\n  }\n\n  if (arrayNode.getChildCount() == 1) {\n    // If the array has one element, return that element as a string\n    Node singleElement = arrayNode.getFirstChild();\n    Node stringifiedElement;\n    if (singleElement.getType() == Token.STRING) {\n      stringifiedElement = singleElement;\n    } else {\n      stringifiedElement = Node.newString(singleElement.toString());\n    }\n    n.getParent().replaceChild(n, stringifiedElement);\n    reportCodeChange();\n    return stringifiedElement;\n  }\n\n  // Check if we can fold the array join into a single string\n  String joinString = (right == null)? \",\" : NodeUtil.getStringValue(right);\n  StringBuilder sb = new StringBuilder();\n  for (Node child = arrayNode.getFirstChild(); child!= null; child = child.getNext()) {\n    if (child.getType() == Token.EMPTY) {\n      continue;\n    }\n    if (sb.length() > 0) {\n      sb.append(joinString);\n    }\n    sb.append(NodeUtil.getArrayElementStringValue(child));\n  }\n\n  Node result = Node.newString(sb.toString());\n  n.getParent().replaceChild(n, result);\n  reportCodeChange();\n  return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}