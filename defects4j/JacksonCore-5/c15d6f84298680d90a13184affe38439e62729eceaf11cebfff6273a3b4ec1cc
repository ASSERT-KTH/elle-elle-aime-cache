{
    "generation": "/**\n * Fixed version of the _parseIndex function to handle scientific notation.\n */\nprivate final static int _parseIndex(String str) {\n    final int len = str.length();\n    // [Issue#133]: beware of super long indexes; assume we never\n    // have arrays over 2 billion entries so ints are fine.\n    if (len == 0 || len > 10) {\n        return -1;\n    }\n    // Check for scientific notation (e/E)\n    boolean hasExponent = false;\n    for (int i = 0; i < len; ++i) {\n        char c = str.charAt(i);\n        if (c == 'e' || c == 'E') {\n            hasExponent = true;\n            break;\n        } else if (c > '9' || c < '0') {\n            return -1;\n        }\n    }\n    if (hasExponent) {\n        // Attempt to parse as a double and check if it's an integer value\n        try {\n            double d = Double.parseDouble(str);\n            if (d >= Integer.MIN_VALUE && d <= Integer.MAX_VALUE && d == Math.floor(d)) {\n                return (int) d;\n            }\n        } catch (NumberFormatException e) {\n            // ignore, already returning -1\n        }\n        return -1; // Not a valid integer index\n    }\n    if (len == 10) {\n        long l = NumberInput.parseLong(str);\n        if (l > Integer.MAX_VALUE) {\n            return -1;\n        }\n    }\n    return NumberInput.parseInt(str);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}