{
    "generation": "/**\n * Fixed version of the _parseIndex function to handle scientific notation correctly\n */\nprivate final static int _parseIndex(String str) {\n    final int len = str.length();\n    // [Issue#133]: beware of super long indexes; assume we never\n    // have arrays over 2 billion entries so ints are fine.\n    if (len == 0 || len > 10) {\n        return -1;\n    }\n    for (int i = 0; i < len; ++i) {\n        char c = str.charAt(i);\n        // Check for 'e' or 'E' to handle scientific notation\n        if (c == 'e' || c == 'E') {\n            // If 'e' or 'E' is found, attempt to parse the suffix as an integer\n            int suffixStart = i + 1;\n            if (suffixStart >= len) {\n                return -1; // No suffix after 'e' or 'E'\n            }\n            for (int j = suffixStart; j < len; ++j) {\n                char suffixChar = str.charAt(j);\n                if (suffixChar > '9' || suffixChar < '0' || suffixChar == '+' || suffixChar == '-') {\n                    if (!(suffixChar == '+' || suffixChar == '-') || j == len - 1) {\n                        return -1; // Invalid suffix\n                    }\n                } else if (suffixChar == '+' || suffixChar == '-') {\n                    if (j!= suffixStart) {\n                        return -1; // '+' or '-' not at start of suffix\n                    }\n                }\n            }\n            try {\n                // Attempt to parse the entire string as a double and then to int\n                double doubleVal = Double.parseDouble(str);\n                if (doubleVal > Integer.MAX_VALUE || doubleVal < Integer.MIN_VALUE) {\n                    return -1; // Out of int range\n                }\n                return (int) doubleVal;\n            } catch (NumberFormatException e) {\n                return -1; // Failed to parse\n            }\n        } else if (c > '9' || c < '0') {\n            return -1;\n        }\n        i++; // only increment if we didn't already check the next char for 'e'/'E'\n    }\n    if (len == 10) {\n        long l = NumberInput.parseLong(str);\n        if (l > Integer.MAX_VALUE) {\n            return -1;\n        }\n    }\n    return NumberInput.parseInt(str);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}