{
    "generation": "@Override\npublic void matchConstraint(JSType constraint) {\n  // We only want to match constraints on anonymous types.\n  if (hasReferenceName()) {\n    return;\n  }\n\n  // Handle the case where the constraint object is a record type.\n  if (constraint.isRecordType()) {\n    JSType recordType = constraint.toObjectType();\n    if (recordType != null) {\n      matchRecordTypeConstraint(recordType);\n    }\n  } else if (constraint.isUnionType()) {\n    // Handle the case where the constraint is a union type containing record types.\n    UnionType unionType = constraint.toMaybeUnionType();\n    if (unionType != null) {\n      for (JSType alt : unionType.getAlternates()) {\n        if (alt.isRecordType()) {\n          matchConstraint(alt);\n        }\n      }\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}