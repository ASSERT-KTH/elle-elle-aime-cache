{
    "generation": "@Override\npublic void matchConstraint(JSType constraint) {\n  // We only want to match constraints on anonymous types.\n  if (hasReferenceName() ||!constraint.isUnionType()) {\n    return;\n  }\n\n  // Handle the case where the constraint object is a union type that contains a record type.\n  JSType[] constituents = constraint.getUnionComponents();\n  for (JSType constituent : constituents) {\n    if (constituent.isRecordType()) {\n      matchRecordTypeConstraint(constituent.toObjectType());\n    }\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}