{
    "generation": "    /**\n     * Declares all of a function's arguments.\n     */\n    private void declareArguments(Node functionNode) {\n      Node astParameters = functionNode.getFirstChild().getNext();\n      Node body = astParameters.getNext();\n      FunctionType functionType = (FunctionType) functionNode.getJSType();\n      if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n          // Track declared parameters in JSDoc to prevent redeclaration\n          Set<String> declaredParameters = new HashSet<>();\n          Node jsDocParameter = jsDocParameters.getFirstChild();\n          for (Node astParameter : astParameters.children()) {\n            String paramName = astParameter.getString();\n            // If the parameter is already declared in JSDoc, emit a redefinition warning\n            if (declaredParameters.contains(paramName)) {\n              // Emit warning about parameter redefinition\n              emitWarning(functionNode, \"variable \" + paramName + \" redefined\");\n            } else if (jsDocParameter != null) {\n              defineSlot(astParameter, functionNode,\n                  jsDocParameter.getJSType(), true);\n              declaredParameters.add(paramName);\n              jsDocParameter = jsDocParameter.getNext();\n            } else {\n              defineSlot(astParameter, functionNode, null, true);\n            }\n          }\n        }\n      }\n    } // end declareArguments",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}