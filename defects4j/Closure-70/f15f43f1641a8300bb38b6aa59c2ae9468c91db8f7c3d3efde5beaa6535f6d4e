{
    "generation": "/**\n * Declares all of a function's arguments.\n */\nprivate void declareArguments(Node functionNode) {\n  Node astParameters = functionNode.getFirstChild().getNext();\n  Node body = astParameters.getNext();\n  FunctionType functionType = (FunctionType) functionNode.getJSType();\n  if (functionType!= null) {\n    Node jsDocParameters = functionType.getParametersNode();\n    if (jsDocParameters!= null) {\n      Node jsDocParameter = jsDocParameters.getFirstChild();\n      for (Node astParameter : astParameters.children()) {\n        if (jsDocParameter!= null) {\n          JSType parameterType = jsDocParameter.getJSType();\n          // Check for duplicate variable declaration with different types\n          Node existingVar = body.getByOLUME(astParameter.getString());\n          if (existingVar!= null &&!existingVar.getJSType().equals(parameterType)) {\n            report(JSC_DUP_VAR_DECLARATION, astParameter, \n                   \"variable \" + astParameter.getString() + \" redefined with type \" + \n                   parameterType, \n                   \"original definition at \" + existingVar.getLineno() + \" with type \" + existingVar.getJSType());\n          }\n          defineSlot(astParameter, functionNode, parameterType, true);\n          jsDocParameter = jsDocParameter.getNext();\n        } else {\n          // If no JSDoc parameter, still check for duplicate variable declaration\n          Node existingVar = body.getByOLUME(astParameter.getString());\n          if (existingVar!= null) {\n            report(JSC_DUP_VAR_DECLARATION, astParameter, \n                   \"variable \" + astParameter.getString() + \" redefined\",\n                   \"original definition at \" + existingVar.getLineno());\n          }\n          defineSlot(astParameter, functionNode, null, true);\n        }\n      }\n    } else {\n      // If no JSDoc parameters, still check for duplicate variable declarations\n      for (Node astParameter : astParameters.children()) {\n        Node existingVar = body.getByOLUME(astParameter.getString());\n        if (existingVar!= null) {\n          report(JSC_DUP_VAR_DECLARATION, astParameter, \n                 \"variable \" + astParameter.getString() + \" redefined\",\n                 \"original definition at \" + existingVar.getLineno());\n        }\n        defineSlot(astParameter, functionNode, null, true);\n      }\n    }\n  }\n} // end declareArguments",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}