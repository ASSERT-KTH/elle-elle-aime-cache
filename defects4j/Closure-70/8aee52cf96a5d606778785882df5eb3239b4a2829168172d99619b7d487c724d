{
    "generation": "    /**\n     * Declares all of a function's arguments.\n     */\n    private void declareArguments(Node functionNode) {\n      Node astParameters = functionNode.getFirstChild().getNext();\n      Node body = astParameters.getNext();\n      FunctionType functionType = (FunctionType) functionNode.getJSType();\n      if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n          Node jsDocParameter = jsDocParameters.getFirstChild();\n          for (Node astParameter : astParameters.children()) {\n            // Ensure the parameter is not redefined with a type incompatible with its known type\n            JSType existingType = astParameter.getJSType();\n            JSType newType = jsDocParameter != null ? jsDocParameter.getJSType() : null;\n            if (existingType != null && newType != null && !existingType.equals(newType)) {\n              reportTypeMismatch(astParameter, existingType, newType);\n            } else {\n              defineSlot(astParameter, functionNode, newType, true);\n            }\n            if (jsDocParameter != null) {\n              jsDocParameter = jsDocParameter.getNext();\n            }\n          }\n        }\n      }\n    } // end declareArguments",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}