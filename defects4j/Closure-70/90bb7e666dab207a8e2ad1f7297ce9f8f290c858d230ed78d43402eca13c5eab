{
    "generation": "/**\n * Declares all of a function's arguments.\n */\nprivate void declareArguments(Node functionNode) {\n    Node astParameters = functionNode.getFirstChild().getNext();\n    Node body = astParameters.getNext();\n    FunctionType functionType = (FunctionType) functionNode.getJSType();\n    if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n            Node jsDocParameter = jsDocParameters.getFirstChild();\n            for (Node astParameter : astParameters.children()) {\n                if (jsDocParameter != null) {\n                    JSType jsDocType = jsDocParameter.getJSType();\n                    JSType existingType = astParameter.getJSType();\n                    \n                    // Check for duplicate declarations with conflicting types\n                    if (existingType != null && !jsDocType.isEquivalentTo(existingType)) {\n                        compiler.report(\n                            JSError.make(\n                                astParameter,\n                                TypeValidator.DUP_VAR_DECLARATION,\n                                astParameter.getString(),\n                                jsDocType.toString(),\n                                existingType.toString()));\n                    }\n                    \n                    defineSlot(astParameter, functionNode, jsDocType, true);\n                    jsDocParameter = jsDocParameter.getNext();\n                } else {\n                    defineSlot(astParameter, functionNode, null, true);\n                }\n            }\n        }\n    }\n} // end declareArguments",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}