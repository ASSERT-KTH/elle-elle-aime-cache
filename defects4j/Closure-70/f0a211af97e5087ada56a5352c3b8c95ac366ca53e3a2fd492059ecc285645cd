{
    "generation": "/**\n * Declares all of a function's arguments.\n */\nprivate void declareArguments(Node functionNode) {\n    Node astParameters = functionNode.getFirstChild().getNext();\n    Node body = astParameters.getNext();\n    FunctionType functionType = (FunctionType) functionNode.getJSType();\n    if (functionType != null) {\n        Node jsDocParameters = functionType.getParametersNode();\n        if (jsDocParameters != null) {\n            Node jsDocParameter = jsDocParameters.getFirstChild();\n            for (Node astParameter : astParameters.children()) {\n                if (jsDocParameter != null) {\n                    // Check for duplicate declarations in the function body\n                    Node current = body.getFirstChild();\n                    while (current != null) {\n                        if (current.isVar() && \n                            current.getFirstChild().getString().equals(astParameter.getString())) {\n                            // Handle duplicate declaration warning\n                            reportTypeMismatch(\n                                current.getFirstChild(),\n                                jsDocParameter.getJSType(),\n                                current.getFirstChild().getJSType(),\n                                \"variable \" + astParameter.getString() + \n                                \" redefined with type \" + \n                                current.getFirstChild().getJSType() + \n                                \", original definition with type \" + \n                                jsDocParameter.getJSType());\n                        }\n                        current = current.getNext();\n                    }\n                    \n                    defineSlot(astParameter, functionNode,\n                        jsDocParameter.getJSType(), true);\n                    jsDocParameter = jsDocParameter.getNext();\n                } else {\n                    defineSlot(astParameter, functionNode, null, true);\n                }\n            }\n        }\n    }\n} // end declareArguments",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}