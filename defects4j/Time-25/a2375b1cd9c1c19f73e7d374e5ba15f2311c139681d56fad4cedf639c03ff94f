{
    "generation": "public int getOffsetFromLocal(long instantLocal) {\n    // get the offset at instantLocal (first estimate)\n    final int offsetLocal = getOffset(instantLocal);\n    // adjust instantLocal using the estimate and recalc the offset\n    final long instantAdjusted = instantLocal - offsetLocal;\n    final int offsetAdjusted = getOffset(instantAdjusted);\n    // if the offsets differ, we must be near a DST boundary\n    if (offsetLocal != offsetAdjusted) {\n        // we need to ensure that time is always after the DST gap\n        // this happens naturally for positive offsets, but not for negative\n        if ((offsetLocal - offsetAdjusted) < 0) {\n            // if we just return offsetAdjusted then the time is pushed\n            // back before the transition, whereas it should be on or after the transition\n            long nextLocal = nextTransition(instantLocal);\n            long nextAdjusted = nextTransition(instantAdjusted);\n            if (nextLocal != nextAdjusted && nextLocal > instantLocal) {\n                // If the next transition for local and adjusted times are different\n                // and the next local transition is later than the current instantLocal\n                // then we should use the local offset.\n                return offsetLocal;\n            }\n        }\n        // If the conditions are not met, then we should use the adjusted offset.\n        return offsetAdjusted;\n    }\n    // If the offsets are the same, then we can return either offset.\n    return offsetLocal;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}