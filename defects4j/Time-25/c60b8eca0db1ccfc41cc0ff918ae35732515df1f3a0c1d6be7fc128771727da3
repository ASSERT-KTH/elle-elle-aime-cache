{
    "generation": "public int getOffsetFromLocal(long instantLocal) {\n    // get the offset at instantLocal (first estimate)\n    final int offsetLocal = getOffset(instantLocal);\n    // adjust instantLocal using the estimate and recalc the offset\n    final long instantAdjusted = instantLocal - offsetLocal;\n    final int offsetAdjusted = getOffset(instantAdjusted);\n    // if the offsets differ, we must be near a DST boundary\n    if (offsetLocal != offsetAdjusted) {\n        // determine the direction of the offset change\n        int offsetDifference = offsetLocal - offsetAdjusted;\n        if (offsetDifference < 0) {\n            // offsetLocal is less than offsetAdjusted, meaning we are in a DST transition\n            // where the clock jumps forward, creating a gap.\n            // We need to ensure that the time is after the DST gap.\n            // This is already handled by returning offsetAdjusted.\n            return offsetAdjusted;\n        } else {\n            // offsetLocal is greater than offsetAdjusted, meaning we are in a DST transition\n            // where the clock falls back, creating an overlap.\n            // In this case, we need to favor the earlier instant (daylight time).\n            // To do this, we check if the adjusted instant is before the transition.\n            long nextTransitionLocal = nextTransition(instantLocal);\n            long nextTransitionAdjusted = nextTransition(instantAdjusted);\n            if (nextTransitionLocal != nextTransitionAdjusted) {\n                // If the next transitions differ, it means we are in an overlap.\n                // Favor the earlier instant (daylight time).\n                return offsetLocal;\n            } else {\n                // Otherwise, return the adjusted offset.\n                return offsetAdjusted;\n            }\n        }\n    } else {\n        // If offsets are the same, no DST transition is involved.\n        return offsetAdjusted;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}