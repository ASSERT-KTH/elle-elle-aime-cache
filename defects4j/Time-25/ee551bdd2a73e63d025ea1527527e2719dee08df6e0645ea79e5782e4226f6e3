{
    "generation": "public int getOffsetFromLocal(long instantLocal) {\n    // get the offset at instantLocal (first estimate)\n    final int offsetLocal = getOffset(instantLocal);\n    // adjust instantLocal using the estimate and recalc the offset\n    final long instantAdjusted = instantLocal - offsetLocal;\n    final int offsetAdjusted = getOffset(instantAdjusted);\n    // if the offsets differ, we must be near a DST boundary\n    if (offsetLocal != offsetAdjusted) {\n        // During overlap, choose the latest offset (pre v2.0 used to vary by hemisphere)\n        if (offsetLocal - offsetAdjusted > 0) {\n            // This is a overlap (where the local time is ambiguous)\n            // Return the earlier offset (later instant) - favoring daylight time\n            return offsetLocal;\n        } else {\n            // This is a gap\n            // If the original local time isn't present in either offset\n            // then return the offset before the gap\n            if (getOffset(instantLocal - offsetAdjusted) != offsetAdjusted) {\n                return offsetLocal;\n            }\n            return offsetAdjusted;\n        }\n    }\n    return offsetAdjusted;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}