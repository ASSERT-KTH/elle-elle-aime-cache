{
    "generation": "    public int getOffsetFromLocal(long instantLocal) {\n        // get the offset at instantLocal (first estimate)\n        final int offsetLocal = getOffset(instantLocal);\n        // adjust instantLocal using the estimate and recalc the offset\n        final long instantAdjusted = instantLocal - offsetLocal;\n        final int offsetAdjusted = getOffset(instantAdjusted);\n        // if the offsets differ, we must be near a DST boundary\n        if (offsetLocal != offsetAdjusted) {\n            // we need to ensure that time is always after the DST gap\n            // this happens naturally for positive offsets, but not for negative\n            if ((offsetLocal - offsetAdjusted) < 0) {\n                // instead of just returning offsetAdjusted, we should check if the next transition times differ\n                long nextLocal = nextTransition(instantAdjusted);\n                // calculate the next transition for the adjusted instant\n                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);\n                // if the next transitions are different, return the original offset to handle the DST gap\n                if (nextLocal != nextAdjusted) {\n                    return offsetLocal;\n                }\n            }\n        }\n        // return the adjusted offset, which is correct for most cases and handles DST overlaps\n        return offsetAdjusted;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}