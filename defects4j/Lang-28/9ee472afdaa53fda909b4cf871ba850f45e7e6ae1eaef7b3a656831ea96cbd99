{
    "generation": "@Override\npublic int translate(CharSequence input, int index, Writer out) throws IOException {\n    // Protect from ArrayIndexOutOfBounds\n    if (input.charAt(index) == '&' && index + 1 < input.length() && input.charAt(index + 1) == '#') {\n        int start = index + 2;\n        boolean isHex = false;\n\n        if (start < input.length() && (input.charAt(start) == 'x' || input.charAt(start) == 'X')) {\n            start++;\n            isHex = true;\n        }\n\n        int end = start;\n        while (end < input.length() && input.charAt(end)!= ';') {\n            end++;\n        }\n\n        if (end < input.length() && input.charAt(end) == ';') {\n            String entityValueStr = input.subSequence(start, end).toString();\n            int entityValue;\n            try {\n                if (isHex) {\n                    entityValue = Integer.parseInt(entityValueStr, 16);\n                } else {\n                    entityValue = Integer.parseInt(entityValueStr, 10);\n                }\n            } catch (NumberFormatException nfe) {\n                return 0;\n            }\n\n            // Write the Unicode character\n            if (entityValue > 0xFFFF) {\n                out.write(0xD800 + ((entityValue - 0x10000) / 0x400));\n                out.write(0xDC00 + ((entityValue - 0x10000) % 0x400));\n            } else {\n                out.write(entityValue);\n            }\n            return 2 + (end - start) + (isHex? 1 : 0) + 1;\n        }\n    }\n    return 0;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}