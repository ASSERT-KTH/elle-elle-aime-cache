{
    "generation": "    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public int translate(CharSequence input, int index, Writer out) throws IOException {\n        // TODO: Protect from ArrayIndexOutOfBounds\n        if (index >= input.length() || input.charAt(index) != '&') {\n            return 0;\n        }\n        if (input.length() <= index + 1 || input.charAt(index + 1) != '#') {\n            return 0;\n        }\n\n        int start = index + 2;\n        boolean isHex = false;\n\n        if (input.length() > start && (input.charAt(start) == 'x' || input.charAt(start) == 'X')) {\n            start++;\n            isHex = true;\n        }\n\n        int end = start;\n        int radix = isHex ? 16 : 10;\n\n        while (end < input.length() && input.charAt(end) != ';') {\n            end++;\n        }\n\n        if (end >= input.length() || input.charAt(end) != ';') {\n            return 0;\n        }\n\n        int entityValue;\n        try {\n            entityValue = Integer.parseInt(input.subSequence(start, end).toString(), radix);\n        } catch (NumberFormatException nfe) {\n            return 0;\n        }\n\n        out.write(new int[] { entityValue }, 0, 1);\n        return 2 + (end - start) + (isHex ? 1 : 0) + 1;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}