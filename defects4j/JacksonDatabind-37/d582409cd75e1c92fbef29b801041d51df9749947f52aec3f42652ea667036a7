{
    "generation": "@Override\nprotected JavaType _narrow(Class<?> subclass)\n{\n    if (_class == subclass) {\n        return this;\n    }\n    if (!_class.isAssignableFrom(subclass)) {\n        throw new IllegalArgumentException(\"Class \" + subclass.getName() + \" is not a sub-type of \" + _class.getName());\n    }\n    return new SimpleType(subclass, _bindings == null ? TypeBindings.emptyBindings() : _bindings.withSuperClass(subclass), \n            _superClass, _superInterfaces, _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}