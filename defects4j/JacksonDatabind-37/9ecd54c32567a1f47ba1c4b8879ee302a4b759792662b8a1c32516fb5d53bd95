{
    "generation": "@Override\nprotected JavaType _narrow(Class<?> subclass)\n{\n    if (_class == subclass) {\n        return this;\n    }\n    // Re-resolve superclass and interfaces to ensure correct subtype\n    JavaType superClass = (_superClass == null) ? null : _superClass.narrowBy(subclass);\n    List<JavaType> superInterfaces = (_superInterfaces == null) ? null : new ArrayList<>(_superInterfaces.size());\n    \n    if (_superInterfaces != null) {\n        for (JavaType superInterface : _superInterfaces) {\n            superInterfaces.add(superInterface.narrowBy(subclass));\n        }\n    }\n    \n    return new SimpleType(subclass, _bindings, superClass, superInterfaces, _valueHandler, _typeHandler, _asStatic);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}