{
    "generation": "    @Override\n    protected JavaType _narrow(Class<?> subclass)\n    {\n        if (_class == subclass) {\n            return this;\n        }\n        // We should verify subclass relationship to avoid invalid narrowing\n        if (!_class.isAssignableFrom(subclass)) {\n            throw new IllegalArgumentException(\"Class \"+subclass.getName()+\" not sub-type of \"\n                    +_class.getName());\n        }\n        // Need to properly re-resolve type parameters\n        JavaType newType = TypeFactory.defaultInstance().constructSpecializedType(this, subclass);\n        return newType;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}