{
    "generation": "    @Override\n    protected JavaType _narrow(Class<?> subclass)\n    {\n        if (_class == subclass) {\n            return this;\n        }\n        // Should we check that there is a sub-class relationship?\n        // 15-Jan-2016, tatu: Almost yes, but there are some complications with\n        //    placeholder values, so no.\n        // 02-Jun-2016, tatu: Related to above, MUST actually re-resolve to avoid\n        //    problems with Type Erasure (see [databind#1083] for details)\n        TypeFactory tf = _typeFactory;\n        if (tf == null) { // should never happen, but...\n            tf = TypeFactory.defaultInstance();\n        }\n        return tf.constructSpecializedType(this, subclass);\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}