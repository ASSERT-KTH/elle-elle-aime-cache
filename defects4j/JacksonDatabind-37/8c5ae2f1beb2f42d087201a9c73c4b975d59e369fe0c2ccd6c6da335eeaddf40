{
    "generation": "    @Override\n    protected JavaType _narrow(Class<?> subclass)\n    {\n        if (_class == subclass) {\n            return this;\n        }\n        \n        // Need to preserve type parameters, create new bindings if necessary\n        TypeBindings newBindings = _bindings;\n        if (!_class.isAssignableFrom(subclass)) {\n            // Sub-class does not work; must recreate with more specific type info\n            newBindings = TypeBindings.emptyBindings();\n        }\n        return new SimpleType(subclass, newBindings, _superClass, _superInterfaces,\n                _valueHandler, _typeHandler, _asStatic);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}