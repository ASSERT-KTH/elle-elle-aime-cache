{
    "generation": "@Override\nprotected JavaType _narrow(Class<?> subclass) {\n    if (_class == subclass) {\n        return this;\n    }\n    if (!_class.isAssignableFrom(subclass)) {\n        throw new IllegalArgumentException(\"Class \" + subclass.getName() + \" not subtype of \" + _class.getName());\n    }\n    // Re-resolve the type to ensure all properties are correctly set\n    return TypeFactory.defaultInstance().constructSimpleType(subclass, _bindings);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}