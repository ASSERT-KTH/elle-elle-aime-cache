{
    "generation": "   public class JsonMapSchema {\n       private String name;\n\n       // Getter and setter\n       public String getName() {\n           return name;\n       }\n\n       public void setName(String name) {\n           this.name = name;\n       }\n   }\n   ```\n\n2. **Configure Jackson to ignore unknown properties:**\n\n   If you don't want to add the field to the class, you can configure ObjectMapper to ignore unknown properties.\n\n   ```java\n   ObjectMapper mapper = new ObjectMapper();\n   mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n   ```\n\n3. **Use `@JsonIgnoreProperties` annotation:**\n\n   You can annotate the `JsonMapSchema` class to ignore unknown properties.\n\n   ```java\n   @JsonIgnoreProperties(ignoreUnknown = true)\n   public class JsonMapSchema {\n       // class fields and methods\n   }\n   ```\n\nGiven that the error is in the test case `testSimple`, and assuming that the `JsonRoot` class contains a list of `JsonMapSchema` objects, you need to ensure that the `JsonMapSchema` class has the necessary fields to match the JSON properties.\n\nHere's an example of how the classes might look:\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}