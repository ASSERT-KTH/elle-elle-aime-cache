{
    "generation": "    @Override\n    protected JavaType _narrow(Class<?> subclass)\n    {\n        if (_class == subclass) {\n            return this;\n        }\n        JavaType newType = new SimpleType(subclass);\n        // Copy over the type bindings and handlers from the original type\n        newType = newType.withHandlersFrom(this);\n        // Also ensure other properties are maintained\n        if (_valueHandler != null) {\n            newType = newType.withValueHandler(_valueHandler);\n        }\n        if (_typeHandler != null) {\n            newType = newType.withTypeHandler(_typeHandler);\n        }\n        if (_asStatic) {\n            newType = newType.withStaticTyping();\n        }\n        return newType;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}