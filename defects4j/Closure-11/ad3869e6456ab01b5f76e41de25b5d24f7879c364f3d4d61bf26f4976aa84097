{
    "generation": "  private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n    Node property = n.getLastChild();\n    Node objNode = n.getFirstChild();\n    JSType childType = getJSType(objNode);\n\n    if (childType.isDict()) {\n      report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, \"'.'\", \"dict\");\n    } else if (childType.isNullType() && (!parent.isAssign() || !parent.isName())) {\n      report(t, objNode, TypeValidator.MISSING_NULL_OR_UNDEFINED_PROPERTY, \"null\", property.getString());\n    } else if (validator.expectObjectType(t, n, childType, \"No properties on this expression\")) {\n      checkPropertyAccess(childType, property.getString(), t, n);\n    }\n    ensureTyped(t, n);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}