{
    "generation": "private void visitGetProp(NodeTraversal t, Node n, Node parent) {\n  Node property = n.getLastChild();\n  Node objNode = n.getFirstChild();\n  JSType childType = getJSType(objNode);\n\n  if (childType.isDict()) {\n    report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, \"'.'\", \"dict\");\n  } else if (!(childType.isNull() || childType.isUndefined()) && parent.isAssign()) {\n    return;\n  } else if (validator.expectNotNullOrUndefined(t, n, childType,\n      \"No properties on this expression\", getNativeType(OBJECT_TYPE))) {\n    if (!childType.isDictionary()) {\n      // only check property access if objNode is not a dictionary\n      checkPropertyAccess(childType, property.getString(), t, n);\n    }\n  }\n  ensureTyped(t, n);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}