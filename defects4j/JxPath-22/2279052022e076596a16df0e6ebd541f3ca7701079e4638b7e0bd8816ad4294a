{
    "generation": "/**\n * Get the ns uri of the specified node.\n * @param node Node to check\n * @return String ns uri\n */\npublic static String getNamespaceURI(Node node) {\n    if (node instanceof Document) {\n        node = ((Document) node).getDocumentElement();\n    }\n\n    Element element = (Element) node;\n\n    String uri = element.getNamespaceURI();\n    if (uri == null) {\n        String prefix = getPrefix(node);\n        if (prefix == null || prefix.isEmpty()) { // Check for empty prefix\n            // Handle default namespace (no prefix) separately\n            NamedNodeMap attributes = node.getAttributes();\n            for (int i = 0; i < attributes.getLength(); i++) {\n                Node attr = attributes.item(i);\n                if (attr.getNodeName().equals(\"xmlns\")) {\n                    return attr.getNodeValue();\n                }\n            }\n        } else {\n            String qname = \"xmlns:\" + prefix;\n    \n            Node aNode = node;\n            while (aNode!= null) {\n                if (aNode.getNodeType() == Node.ELEMENT_NODE) {\n                    Attr attr = ((Element) aNode).getAttributeNode(qname);\n                    if (attr!= null) {\n                        return attr.getValue();\n                    }\n                }\n                aNode = aNode.getParentNode();\n            }\n        }\n        return null; // or a default value, if applicable\n    }\n    return uri;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}