{
    "generation": "public void head(org.jsoup.nodes.Node source, int depth) {\n    namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack\n    if (source instanceof org.jsoup.nodes.Element) {\n        org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;\n\n        String prefix = updateNamespaces(sourceEl);\n        String namespace = namespacesStack.peek().get(prefix);\n        String tagName = sourceEl.tagName();\n\n        Element el;\n        if (namespace != null) {\n            el = doc.createElementNS(namespace, prefix + \":\" + tagName);\n        } else {\n            el = doc.createElement(tagName);\n        }\n        copyAttributes(sourceEl, el);\n        if (dest == null) { // sets up the root\n            doc.appendChild(el);\n        } else {\n            dest.appendChild(el);\n        }\n        dest = el; // descend\n    } else if (source instanceof org.jsoup.nodes.TextNode) {\n        org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;\n        Text text = doc.createTextNode(sourceText.getWholeText());\n        dest.appendChild(text);\n    } else if (source instanceof org.jsoup.nodes.Comment) {\n        org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;\n        Comment comment = doc.createComment(sourceComment.getData());\n        dest.appendChild(comment);\n    } else if (source instanceof org.jsoup.nodes.DataNode) {\n        org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;\n        Text node = doc.createTextNode(sourceData.getWholeData());\n        dest.appendChild(node);\n    } else {\n        // unhandled\n    }\n}\n\nprivate String updateNamespaces(org.jsoup.nodes.Element element) {\n    // This method should handle namespace declarations and updates\n    // It should return the prefix if any, and update the namespacesStack accordingly\n    // Implementation depends on how namespaces are being managed in the class\n    // For example:\n    String prefix = null;\n    for (org.jsoup.nodes.Attribute attr : element.attributes()) {\n        if (attr.getKey().startsWith(\"xmlns\")) {\n            if (\"xmlns\".equals(attr.getKey())) {\n                namespacesStack.peek().put(\"\", attr.getValue());\n            } else {\n                prefix = attr.getKey().substring(6); // remove 'xmlns:'\n                namespacesStack.peek().put(prefix, attr.getValue());\n            }\n        }\n    }\n    // Determine the prefix for the element, if any\n    int colonIndex = element.tagName().indexOf(':');\n    if (colonIndex > 0) {\n        prefix = element.tagName().substring(0, colonIndex);\n    }\n    return prefix;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}