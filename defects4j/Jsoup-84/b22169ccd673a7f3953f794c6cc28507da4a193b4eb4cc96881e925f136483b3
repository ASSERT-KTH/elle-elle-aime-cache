{
    "generation": "public void head(org.jsoup.nodes.Node source, int depth) {\n    namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack\n    if (source instanceof org.jsoup.nodes.Element) {\n        org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;\n\n        String prefix = updateNamespaces(sourceEl);\n        Map<String, String> currentNamespaces = namespacesStack.peek();\n        String tagName = sourceEl.tagName();\n\n        String namespace = currentNamespaces.get(prefix);\n        String localName = tagName;\n\n        // If the prefix is not declared, treat it as no namespace\n        if (prefix != null && !prefix.isEmpty() && namespace == null) {\n            namespace = null;\n            localName = tagName; // Use the full tag name as local name\n        } else {\n            // Extract local name if a namespace is present\n            int colonIndex = tagName.indexOf(':');\n            if (colonIndex > -1) {\n                localName = tagName.substring(colonIndex + 1);\n            }\n        }\n\n        Element el = doc.createElementNS(namespace, localName);\n        copyAttributes(sourceEl, el);\n        if (dest == null) { // sets up the root\n            doc.appendChild(el);\n        } else {\n            dest.appendChild(el);\n        }\n        dest = el; // descend\n    } else if (source instanceof org.jsoup.nodes.TextNode) {\n        org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;\n        Text text = doc.createTextNode(sourceText.getWholeText());\n        dest.appendChild(text);\n    } else if (source instanceof org.jsoup.nodes.Comment) {\n        org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;\n        Comment comment = doc.createComment(sourceComment.getData());\n        dest.appendChild(comment);\n    } else if (source instanceof org.jsoup.nodes.DataNode) {\n        org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;\n        Text node = doc.createTextNode(sourceData.getWholeData());\n        dest.appendChild(node);\n    } else {\n        // unhandled\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}