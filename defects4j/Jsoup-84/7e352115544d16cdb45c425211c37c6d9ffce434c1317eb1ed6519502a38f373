{
    "generation": "public void head(org.jsoup.nodes.Node source, int depth) {\n    namespacesStack.push(new HashMap<>(namespacesStack.peek())); // inherit from above on the stack\n    if (source instanceof org.jsoup.nodes.Element) {\n        org.jsoup.nodes.Element sourceEl = (org.jsoup.nodes.Element) source;\n\n        String prefix = sourceEl.prefix();\n        String namespace = sourceEl.namespaceURI();\n        String tagName = sourceEl.tagName();\n\n        if (prefix.isEmpty()) {\n            // No prefix, no namespace\n            Element el = doc.createElement(tagName);\n            copyAttributes(sourceEl, el);\n            if (dest == null) { // sets up the root\n                doc.appendChild(el);\n            } else {\n                dest.appendChild(el);\n            }\n            dest = el; // descend\n        } else {\n            // Prefix found, check if namespace is declared\n            if (!namespacesStack.peek().containsKey(prefix)) {\n                // Namespace is not declared, treat it as local name\n                String nodeName = prefix + \":\" + tagName;\n                Element el = doc.createElement(nodeName);\n                copyAttributes(sourceEl, el);\n                if (dest == null) { // sets up the root\n                    doc.appendChild(el);\n                } else {\n                    dest.appendChild(el);\n                }\n                dest = el; // descend\n            } else {\n                // Namespace is declared, use namespace and local name\n                Element el = doc.createElementNS(namespace, tagName);\n                copyAttributes(sourceEl, el);\n                if (dest == null) { // sets up the root\n                    doc.appendChild(el);\n                } else {\n                    dest.appendChild(el);\n                }\n                dest = el; // descend\n            }\n        }\n    } else if (source instanceof org.jsoup.nodes.TextNode) {\n        org.jsoup.nodes.TextNode sourceText = (org.jsoup.nodes.TextNode) source;\n        Text text = doc.createTextNode(sourceText.getWholeText());\n        dest.appendChild(text);\n    } else if (source instanceof org.jsoup.nodes.Comment) {\n        org.jsoup.nodes.Comment sourceComment = (org.jsoup.nodes.Comment) source;\n        Comment comment = doc.createComment(sourceComment.getData());\n        dest.appendChild(comment);\n    } else if (source instanceof org.jsoup.nodes.DataNode) {\n        org.jsoup.nodes.DataNode sourceData = (org.jsoup.nodes.DataNode) source;\n        Text node = doc.createTextNode(sourceData.getWholeData());\n        dest.appendChild(node);\n    } else {\n        // unhandled\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}