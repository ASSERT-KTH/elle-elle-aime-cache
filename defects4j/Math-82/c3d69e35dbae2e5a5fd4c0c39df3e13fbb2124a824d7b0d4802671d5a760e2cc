{
    "generation": "    /**\n     * Returns the row with the minimum ratio as given by the minimum ratio test (MRT).\n     * @param tableau simple tableau for the problem\n     * @param col the column to test the ratio of.  See {@link #getPivotColumn(SimplexTableau)}\n     * @return row with the minimum ratio\n     */\n    private Integer getPivotRow(final int col, final SimplexTableau tableau) {\n        double minRatio = Double.MAX_VALUE;\n        Integer minRatioPos = null;\n        for (int i = tableau.getNumObjectiveFunctions(); i < tableau.getHeight(); i++) {\n            final double rhs = tableau.getEntry(i, tableau.getWidth() - 1);\n            final double entry = tableau.getEntry(i, col);\n            if (MathUtils.compareTo(entry, 0, epsilon) > 0) {\n                final double ratio = rhs / entry;\n                if (ratio < minRatio) {\n                    minRatio = ratio;\n                    minRatioPos = i; \n                }\n            } else if (MathUtils.compareTo(entry, 0, epsilon) == 0) {\n                // If the entry is zero, we should consider it as a potential pivot\n                // if the right-hand side is non-negative\n                if (MathUtils.compareTo(rhs, 0, epsilon) >= 0) {\n                    // Assign a very large ratio for zero entries with non-negative RHS\n                    final double ratio = Double.MAX_VALUE;\n                    if (ratio < minRatio) {\n                        minRatio = ratio;\n                        minRatioPos = i;\n                    }\n                }\n            }\n        }\n        return minRatioPos;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}