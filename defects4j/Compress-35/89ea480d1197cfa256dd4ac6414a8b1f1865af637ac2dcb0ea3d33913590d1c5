{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    long storedSum = 0;\n    long unsignedSum = 0;\n    long signedSum = 0;\n\n    int digits = 0;\n    for (int i = 0; i < header.length; i++) {\n        byte b = header[i];\n        if (CHKSUM_OFFSET <= i && i < CHKSUM_OFFSET + CHKSUMLEN) {\n            if ('0' <= b && b <= '7' && digits < 6) {\n                storedSum = storedSum * 8 + b - '0';\n                digits++;\n            } else if (digits > 0) {\n                digits = 6;\n            }\n            b = ' ';\n        }\n        unsignedSum += b & 0xff;\n        signedSum += b;\n    }\n\n    // Convert storedSum to the same range as unsignedSum and signedSum\n    long storedSumUnsigned = storedSum & 0xFFFFFFFFL;\n    long storedSumSigned = (storedSum << 24) >> 24; // Sign extend to 32 bits\n\n    // Check if the stored sum matches either the unsigned or signed sum\n    return storedSumUnsigned == unsignedSum || storedSumSigned == signedSum;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}