{
    "generation": "public static boolean verifyCheckSum(byte[] header) {\n    if (header.length < CHKSUM_OFFSET + CHKSUMLEN) {\n        return false; // Header is too short to contain the checksum\n    }\n\n    // Calculate the unsigned and signed sums\n    long unsignedSum = 0;\n    long signedSum = 0;\n\n    for (int i = 0; i < header.length; i++) {\n        byte b = header[i];\n        if (i >= CHKSUM_OFFSET && i < CHKSUM_OFFSET + CHKSUMLEN) {\n            // Replace checksum bytes with spaces for sum calculation\n            b = ' ';\n        }\n        unsignedSum += (0xFF & b); // Convert to unsigned\n        signedSum += b;\n    }\n\n    // Extract the stored checksum from the header\n    long storedSum = 0;\n    int digits = 0;\n    for (int i = CHKSUM_OFFSET; i < CHKSUM_OFFSET + CHKSUMLEN; i++) {\n        byte b = header[i];\n        if ('0' <= b && b <= '7' && digits < 6) {\n            storedSum = storedSum * 8 + (b - '0');\n            digits++;\n        } else if (digits > 0) {\n            break; // Stop processing once non-octal digit is encountered after some digits\n        }\n    }\n\n    // Check if either the unsigned or signed sum matches the stored sum\n    return storedSum == unsignedSum || storedSum == signedSum;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}