{
    "generation": "public Object answer(InvocationOnMock invocation) {\n    if (methodsGuru.isToString(invocation.getMethod())) {\n        Object mock = invocation.getMock();\n        MockName name = mockUtil.getMockName(mock);\n        if (name.isDefault()) {\n            return \"Mock for \" + mockUtil.getMockName(mock) + \", hashCode: \" + mock.hashCode();\n        } else {\n            return name.toString();\n        }\n    } else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {\n        // See issue 184.\n        // Mocks should return 0 when compared to themselves, otherwise some other value.\n        Object argument = invocation.getArguments()[0];\n        if (invocation.getMock() == argument) {\n            return 0;\n        } else {\n            // Return 1 (or any other value) if the references are not the same.\n            return 1;\n        }\n    }\n\n    Class<?> returnType = invocation.getMethod().getReturnType();\n    return returnValueFor(returnType);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}