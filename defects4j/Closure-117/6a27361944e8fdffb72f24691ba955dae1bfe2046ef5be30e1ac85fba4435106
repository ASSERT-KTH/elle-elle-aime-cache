{
    "generation": "if (objectType != null && !objectType.hasOwnProperty(propName)) {\n  if (objectType.getConstructor() != null && objectType.getConstructor().isInterface()) {\n    objectType = FunctionType.getTopDefiningInterface(objectType, propName);\n  } else {\n    // classes\n    ObjectType originalType = objectType;\n    while (objectType != null && !objectType.hasOwnProperty(propName)) {\n      objectType = objectType.getImplicitPrototype();\n    }\n    if(objectType == null) { // No property found in prototype chain. Revert to original type\n      objectType = originalType;\n    }\n  }\n  // ... The rest of the function remains unchanged\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}