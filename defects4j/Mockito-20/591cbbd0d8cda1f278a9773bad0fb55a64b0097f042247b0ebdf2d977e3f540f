{
    "generation": "    public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\n        if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n            throw new MockitoException(\"Serialization across classloaders not yet supported with ByteBuddyMockMaker\");\n        }\n        Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(\n                settings.getTypeToMock(),\n                settings.getExtraInterfaces()\n        );\n        T mockInstance = null;\n        try {\n            // Handle constructor settings\n            Constructor<?> constructor = getConstructor(mockedProxyType, settings);\n            if (constructor != null) {\n                Object[] args = getConstructorArguments(constructor, settings);\n                mockInstance = (T) constructor.newInstance(args);\n            } else {\n                mockInstance = classInstantiator.instantiate(mockedProxyType);\n            }\n            MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;\n            mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));\n\n            return ensureMockIsAssignableToMockedType(settings, mockInstance);\n        } catch (ClassCastException cce) {\n            throw new MockitoException(join(\n                    \"ClassCastException occurred while creating the mockito mock :\",\n                    \"  class to mock : \" + describeClass(mockedProxyType),\n                    \"  created class : \" + describeClass(settings.getTypeToMock()),\n                    \"  proxy instance class : \" + describeClass(mockInstance),\n                    \"  instance creation by : \" + classInstantiator.getClass().getSimpleName(),\n                    \"\",\n                    \"You might experience classloading issues, please ask the mockito mailing-list.\",\n                    \"\"\n            ), cce);\n        } catch (InstantiationException | IllegalAccessException | InvocationTargetException | NoSuchMethodException e) {\n            throw new MockitoException(\"Unable to create mock instance of type '\" + mockedProxyType.getSuperclass().getSimpleName() + \"'\", e);\n        }\n    }\n\n    private Constructor<?> getConstructor(Class<?> clazz, MockCreationSettings<?> settings) throws NoSuchMethodException {\n        if (settings.getConstructorArgs().length > 0) {\n            Class<?>[] parameterTypes = settings.getConstructorArgTypes();\n            return clazz.getConstructor(parameterTypes);\n        }\n        if (isInnerClass(clazz)) {\n            return clazz.getDeclaredConstructor(settings.getOuterClass().getClass());\n        }\n        return clazz.getDeclaredConstructor();\n    }\n\n    private Object[] getConstructorArguments(Constructor<?> constructor, MockCreationSettings<?> settings) {\n        if (settings.getConstructorArgs().length > 0) {\n            return settings.getConstructorArgs();\n        }\n        if (constructor.getParameterCount() == 1 && isInnerClass(constructor.getDeclaringClass())) {\n            return new Object[]{settings.getOuterInstance()};\n        }\n        return new Object[0];\n    }\n\n    private boolean isInnerClass(Class<?> clazz) {\n        return clazz.isMemberClass() && !Modifier.isStatic(clazz.getModifiers());\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}