{
    "generation": "@Override\npublic CollectionDeserializer createContextual(DeserializationContext ctxt,\n        BeanProperty property) throws JsonMappingException\n{\n    // Attempt to resolve types for delegate-based creators if applicable:\n    JsonDeserializer<Object> delegateDeser = null;\n    if (_valueInstantiator != null) {\n        if (_valueInstantiator.canCreateUsingDelegate()) {\n            JavaType delegateType = _valueInstantiator.getDelegateType(ctxt.getConfig());\n            if (delegateType == null) {\n                throw new IllegalArgumentException(\"Invalid delegate-creator definition for \"+_collectionType\n                        +\": value instantiator (\"+_valueInstantiator.getClass().getName()\n                        +\") returned true for 'canCreateUsingDelegate()', but null for 'getDelegateType()'\");\n            }\n            delegateDeser = findDeserializer(ctxt, delegateType, property);\n        }\n    }\n\n    // Evaluate the per-property allow-wrapping override:\n    Boolean unwrapSingle = findFormatFeature(ctxt, property, _collectionType.getRawClass(),\n            JsonFormat.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY);\n\n    // Attempt to resolve value deserializer:\n    JsonDeserializer<?> valueDeser = _valueDeserializer;\n    valueDeser = findConvertingContentDeserializer(ctxt, property, valueDeser);\n    final JavaType vt = _collectionType.getContentType();\n    if (valueDeser == null) {\n        valueDeser = ctxt.findContextualValueDeserializer(vt, property);\n    } else {\n        valueDeser = ctxt.handleSecondaryContextualization(valueDeser, property, vt);\n    }\n\n    // Resolve type deserializer in context:\n    TypeDeserializer valueTypeDeser = _valueTypeDeserializer;\n    if (valueTypeDeser != null) {\n        valueTypeDeser = valueTypeDeser.forProperty(property);\n    }\n\n    // Handle special cases for unmodifiable collections\n    if (Collection.class.isAssignableFrom(_collectionType.getRawClass()) && \n        _valueInstantiator != null && \n        _valueInstantiator.getCreatorType() == ValueInstantiator.CreatorProperty.DELEGATE) {\n        // Unmodifiable collections delegate use a specialized instantiation strategy\n        delegateDeser = new UnmodifiableCollectionDeserializer(delegateDeser, valueDeser, valueTypeDeser);\n    }\n\n    return withResolved(delegateDeser, valueDeser, valueTypeDeser, unwrapSingle);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}