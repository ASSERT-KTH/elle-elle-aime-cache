{
    "generation": "@Override\npublic CollectionDeserializer createContextual(DeserializationContext ctxt,\n                                               BeanProperty property) throws JsonMappingException\n{\n   JsonDeserializer<Object> delegateDeser = null;\n\n   // If valueInstantiator is null or can't create using delegate, just use the default behavior\n   if (_valueInstantiator != null && _valueInstantiator.canCreateUsingDelegate()) {\n       JavaType delegateType = _valueInstantiator.getDelegateType(ctxt.getConfig());\n       requireNonNull(delegateType, \"Invalid delegate-creator definition for \" + _collectionType\n           + \": value instantiator (\" + _valueInstantiator.getClass().getName()\n           + \") returned true for 'canCreateUsingDelegate()', but null for 'getDelegateType()'\");\n\n       delegateDeser = findDeserializer(ctxt, delegateType, property);\n   }\n\n   Boolean unwrapSingle = findFormatFeature(ctxt, property, Collection.class,\n       JsonFormat.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY);\n\n   JsonDeserializer<?> valueDeser = _valueDeserializer;\n\n   valueDeser = findConvertingContentDeserializer(ctxt, property, valueDeser);\n   final JavaType vt = _collectionType.getContentType();\n   if (valueDeser == null) {\n       if (ctxt.getTypeFactory().constructType(Collections.unmodifiableSet(Collections.emptySet())).equals(vt)) {\n           // we need to explicitly create UnmodifiableSet from the deserialized delegate\n           valueDeser = new JsonDeserializer<Set<?>>() {\n               @Override\n               public Set<?> deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException {\n                   Set<Object> delegateSet = jp.readValueAs(Set.class);\n                   return Collections.unmodifiableSet(delegateSet);\n               }\n           };\n       } else {\n           valueDeser = ctxt.findContextualValueDeserializer(vt, property);\n       }\n   } else { // if directly assigned, probably not yet contextual, so:\n       valueDeser = ctxt.handleSecondaryContextualization(valueDeser, property, vt);\n   }\n\n   TypeDeserializer valueTypeDeser = _valueTypeDeserializer;\n   if (valueTypeDeser != null) {\n       valueTypeDeser = valueTypeDeserializer.forProperty(property);\n   }\n\n   return withResolved(delegateDeser, valueDeser, valueTypeDeser, unwrapSingle);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}