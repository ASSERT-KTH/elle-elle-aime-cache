{
    "generation": "Object returnValueFor(Class<?> type) {\n    if (Primitives.isPrimitiveOrWrapper(type)) {\n        return Primitives.defaultValueForPrimitiveOrWrapper(type);\n    } else if (type.isAssignableFrom(Collection.class) || type.isAssignableFrom(Iterable.class)) {\n        return Collections.emptyList();\n    } else if (type.isAssignableFrom(Set.class)) {\n        return Collections.emptySet();\n    } else if (type.isAssignableFrom(SortedSet.class)) {\n        return Collections.emptySortedSet();\n    } else if (type.isAssignableFrom(List.class)) {\n        return Collections.emptyList();\n    } else if (type.isAssignableFrom(Map.class)) {\n        return Collections.emptyMap();\n    } else if (type.isAssignableFrom(SortedMap.class)) {\n        return Collections.emptySortedMap();\n    }\n    // Let's not care about the rest of collections.\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}