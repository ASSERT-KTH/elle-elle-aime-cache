{
    "generation": "Object returnValueFor(Class<?> type) {\n    if (Primitives.isPrimitiveOrWrapper(type)) {\n        return Primitives.defaultValueForPrimitiveOrWrapper(type);\n    } else if (type == Collection.class || Iterable.class.isAssignableFrom(type)) {\n        return Collections.emptyList();\n    } else if (type == Set.class || HashSet.class.isAssignableFrom(type)) {\n        return Collections.emptySet();\n    } else if (type == SortedSet.class || TreeSet.class.isAssignableFrom(type)) {\n        return Collections.emptySortedSet();\n    } else if (type == LinkedHashSet.class) {\n        return Collections.emptySet(); // LinkedHashSet is a HashSet\n    } else if (type == List.class || LinkedList.class.isAssignableFrom(type) || ArrayList.class.isAssignableFrom(type)) {\n        return Collections.emptyList();\n    } else if (type == Map.class || HashMap.class.isAssignableFrom(type)) {\n        return Collections.emptyMap();\n    } else if (type == SortedMap.class || TreeMap.class.isAssignableFrom(type)) {\n        return Collections.emptySortedMap();\n    } else if (type == LinkedHashMap.class) {\n        return Collections.emptyMap(); // LinkedHashMap is a HashMap\n    }\n    // Let's not care about the rest of collections.\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}