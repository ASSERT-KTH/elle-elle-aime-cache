{
    "generation": "Object returnValueFor(Class<?> type) {\n    if (Primitives.isPrimitiveOrWrapper(type)) {\n        return Primitives.defaultValueForPrimitiveOrWrapper(type);\n    } else if (type.isAssignableFrom(Collection.class)) {\n        if (type.isAssignableFrom(List.class)) {\n            return new ArrayList<Object>();\n        } else if (type.isAssignableFrom(Set.class)) {\n            return new HashSet<Object>();\n        } else if (type.isAssignableFrom(SortedSet.class)) {\n            return new TreeSet<Object>();\n        } else {\n            return new LinkedList<Object>();\n        }\n    } else if (type.isAssignableFrom(Map.class)) {\n        if (type.isAssignableFrom(SortedMap.class)) {\n            return new TreeMap<Object, Object>();\n        } else {\n            return new HashMap<Object, Object>();\n        }\n    } else if (type == Iterable.class) {\n        return Collections.emptyList();\n    }\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}