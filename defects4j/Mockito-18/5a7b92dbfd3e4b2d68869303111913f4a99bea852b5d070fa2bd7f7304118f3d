{
    "generation": "Object returnValueFor(Class<?> type) {\n    if (Primitives.isPrimitiveOrWrapper(type)) {\n        return Primitives.defaultValueForPrimitiveOrWrapper(type);\n    } else if (type == Collection.class || type == List.class || type == Iterable.class) {\n        return new LinkedList<Object>();\n    } else if (type == Set.class || type == HashSet.class) {\n        return new HashSet<Object>();\n    } else if (type == SortedSet.class || type == TreeSet.class) {\n        return new TreeSet<Object>();\n    } else if (type == LinkedHashSet.class) {\n        return new LinkedHashSet<Object>();\n    } else if (type == LinkedList.class) {\n        return new LinkedList<Object>();\n    } else if (type == ArrayList.class) {\n        return new ArrayList<Object>();\n    } else if (type == Map.class || type == HashMap.class) {\n        return new HashMap<Object, Object>();\n    } else if (type == SortedMap.class || type == TreeMap.class) {\n        return new TreeMap<Object, Object>();\n    } else if (type == LinkedHashMap.class) {\n        return new LinkedHashMap<Object, Object>();\n    }\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}