{
    "generation": "private Attribute parseAttribute() {\n    tq.consumeWhitespace();\n    String key = tq.consumeAttributeKey();\n    String value = \"\";\n    tq.consumeWhitespace();\n    if (tq.matchChomp(\"=\")) {\n        tq.consumeWhitespace();\n\n        if (tq.matchChomp(TokenQueue.SQ)) {\n            value = tq.chompTo(TokenQueue.SQ);\n        } else if (tq.matchChomp(TokenQueue.DQ)) {\n            value = tq.chompTo(TokenQueue.DQ);\n        } else {\n            StringBuilder valueAccum = new StringBuilder();\n            // no ' or \" to look for, so scan to end tag or space (or end of stream)\n            while (!tq.matchesAny(\"<\", \"/>\", \">\") && !tq.matchesWhitespace() && !tq.isEmpty()) {\n                valueAccum.append(tq.consume());\n            }\n            value = valueAccum.toString();\n        }\n        tq.consumeWhitespace();\n    }\n    if (key.isEmpty())\n        key = \"unknown\";  // add this line to fix the issue\n    return Attribute.createFromEncoded(key, value);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}