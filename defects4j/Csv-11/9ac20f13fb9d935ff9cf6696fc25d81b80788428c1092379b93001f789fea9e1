{
    "generation": "private Map<String, Integer> initializeHeader() throws IOException {\n    Map<String, Integer> hdrMap = null;\n    final String[] formatHeader = this.format.getHeader();\n    if (formatHeader != null) {\n        hdrMap = new LinkedHashMap<String, Integer>();\n\n        String[] headerRecord = null;\n        if (formatHeader.length == 0) {\n            // read the header from the first line of the file\n            final CSVRecord nextRecord = this.nextRecord();\n            if (nextRecord != null) {\n                headerRecord = nextRecord.values();\n            }\n        } else {\n            if (this.format.getSkipHeaderRecord()) {\n                this.nextRecord();\n            }\n            headerRecord = formatHeader;\n        }\n\n        // handle the case where headerRecord is null\n        if (headerRecord == null) {\n            throw new IOException(\"Failed to read a header record\");\n        }\n\n        for (int i = 0; i < headerRecord.length; i++) {\n            final String header = headerRecord[i];\n            if (this.format.getTrim()) {\n                header = header.trim();\n            }\n            if (this.format.getIgnoreEmptyHeaders() && header.isEmpty()) {\n                continue;\n            }\n            if (hdrMap.containsKey(header)) {\n                throw new IllegalArgumentException(\"The header contains a duplicate name: \\\"\" + header +\n                        \"\\\" in \" + Arrays.toString(headerRecord));\n            }\n            hdrMap.put(header, Integer.valueOf(i));\n        }\n    }\n    return hdrMap;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}