{
    "generation": "public static Number createNumber(String val) throws NumberFormatException {\n    // Previous code...\n\n    //Requesting a specific type..\n    boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n    switch (lastChar) {\n        case 'l' :\n        case 'L' :\n            String numericL = val.substring(0, val.length() - 1);\n            if (dec == null\n                && exp == null\n                && (numericL.charAt(0) == '-' && isDigits(numericL.substring(1)) || isDigits(numericL))) {\n                    try {\n                        return createLong(numericL);\n                    } catch (NumberFormatException nfe) {\n                        //Too big for a long\n                    }\n                    return createBigInteger(numericL);\n            }\n            throw new NumberFormatException(val + \" is not a valid number.\");\n        case 'f' :\n        case 'F' :\n            String numericF = val.substring(0, val.length() - 1);\n            // Rest of the case 'f' and 'F'...\n        case 'd' :\n        case 'D' :\n            String numericD = val.substring(0, val.length() - 1);\n            // Rest of the case 'd' and 'D'...\n        default :\n            throw new NumberFormatException(val + \" is not a valid number.\");\n    }\n    // Rest of the function...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}