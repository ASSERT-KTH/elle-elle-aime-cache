{
    "generation": "    /**\n     * Checks whether the given column is basic.\n     * @param col index of the column to check\n     * @return the row that the variable is basic in.  null if the column is not basic\n     */\n    private Integer getBasicRow(final int col) {\n        Integer row = null;\n        for (int i = getNumObjectiveFunctions(); i < getHeight(); i++) {\n            if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && MathUtils.equals(sumRowExcludingColumn(i, col), 0.0, epsilon)) {\n                if (row == null) {\n                    row = i;\n                } else {\n                    return null;\n                }\n            }\n        }\n        return row;\n    }\n\n    /**\n     * Sums all elements in a row excluding the element in the specified column.\n     * @param row index of the row to sum\n     * @param col index of the column to exclude\n     * @return the sum of the row elements excluding the specified column\n     */\n    private double sumRowExcludingColumn(int row, int col) {\n        double sum = 0.0;\n        for (int j = 0; j < getWidth(); j++) {\n            if (j != col) {\n                sum += getEntry(row, j);\n            }\n        }\n        return sum;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}