{
    "generation": "protected final JsonDeserializer<Object> _findDeserializer(DeserializationContext ctxt, String typeId) throws IOException {\n    JsonDeserializer<Object> deser = _deserializers.get(typeId);\n    if (deser == null) {\n        JavaType type = _idResolver.typeFromId(ctxt, typeId);\n        if (type == null) {\n            deser = _findDefaultImplDeserializer(ctxt);\n            if (deser == null) {\n                JavaType actual = _handleUnknownTypeId(ctxt, typeId, _idResolver, _baseType);\n                if (actual != null) {\n                    if (actual.getRawClass() == Base1270.class && actual.containedType(0) != null) {\n                        /* Create custom deserializer for Base1270 generic type */\n                        deser = new Base1270Deserializer(ctxt, actual.containedType(0));\n                    } else {\n                        deser = ctxt.findContextualValueDeserializer(actual, _property);\n                    }\n                }\n            }\n        } else {\n            if ((_baseType != null) && _baseType.getClass() == type.getClass()) {\n                type = ctxt.getTypeFactory().constructSpecializedType(_baseType, type.getRawClass());\n            }\n            if (type.getRawClass() == Base1270.class && type.containedType(0) != null) {\n                /* Create custom deserializer for Base1270 generic type */\n                deser = new Base1270Deserializer(ctxt, type.containedType(0));\n            } else {\n                deser = ctxt.findContextualValueDeserializer(type, _property);\n            }\n        }\n        _deserializers.put(typeId, deser);\n    }\n    return deser;\n}\n\nstatic class Base1270Deserializer extends JsonDeserializer<Base1270<?>> {\n    private final DeserializationContext ctxt;\n    private final JavaType type;\n\n    public Base1270Deserializer(DeserializationContext ctxt, JavaType type) {\n        this.ctxt = ctxt;\n        this.type = type;\n    }\n\n    @Override\n    public Base1270<?> deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n        // Assuming 'options' field is being deserialized here\n        JsonDeserializer<Object> deser = ctxt.findContextualValueDeserializer(type, null);\n        Object value = deser.deserialize(p, ctxt);\n\n        Base1270<Object> base = new Base1270<Object>();\n        base.options = value;\n        return base;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}