{
    "generation": "public final void translate(CharSequence input, Writer out) throws IOException {\n    if (out == null) {\n        throw new IllegalArgumentException(\"The Writer must not be null\");\n    }\n    if (input == null) {\n        return;\n    }\n    int pos = 0;\n    int len = input.length();\n    while (pos < len) {\n        int consumed = translate(input, pos, out);\n        if (consumed == 0) {\n            int codePoint = Character.codePointAt(input, pos);\n            // Write the code point directly to the writer\n            out.write(Character.toChars(codePoint));\n            // Move past this code point\n            pos += Character.charCount(codePoint);\n        } else {\n            // Assume that the translate method has written the appropriate characters\n            // and consumed the specified number of code points.\n            // Adjust pos based on the number of consumed code points.\n            for (int i = 0; i < consumed; i++) {\n                pos += Character.charCount(Character.codePointAt(input, pos));\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}