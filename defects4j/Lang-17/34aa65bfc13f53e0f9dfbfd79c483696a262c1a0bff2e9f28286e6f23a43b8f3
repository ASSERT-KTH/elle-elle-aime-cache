{
    "generation": "public final void translate(CharSequence input, Writer out) throws IOException {\n    if (out == null) {\n        throw new IllegalArgumentException(\"The Writer must not be null\");\n    }\n    if (input == null) {\n        return;\n    }\n    int pos = 0;\n    int len = Character.codePointCount(input, 0, input.length());\n    while (pos < len) {\n        int consumed = translate(input, pos, out);\n        if (consumed == 0) {\n            char[] c = Character.toChars(Character.codePointAt(input, pos));\n            out.write(c);\n        }\n        else {\n//          // contract with translators is that they have to understand codepoints\n//          // and they just took care of a surrogate pair\n            pos += consumed;\n        }\n        // Increment pos only if it's not already at the end of the input string\n        if(pos < len - 1) {\n            pos++;\n        } else {\n            break;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}