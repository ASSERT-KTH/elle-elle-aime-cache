{
    "generation": "@Override\npublic byte[] getBinaryValue(Base64Variant b64variant)\n    throws IOException, JsonParseException\n{\n    JsonNode n = currentNode();\n    if (n!= null) {\n        if (n.isTextual()) {\n            String text = n.asText();\n            if (!text.isEmpty()) {\n                try {\n                    return b64variant.decode(text);\n                } catch (JsonParseException e) {\n                    throw JsonParseException.from(getCurrentLocation(), String.format(\n                            \"Cannot access contents of TextNode as binary due to broken %s encoding\",\n                            b64variant), e);\n                }\n            }\n        }\n        // First simple, exact matches:\n        if (n.isBinary()) {\n            return n.binaryValue();\n        }\n        if (n.isPojo()) {\n            Object ob = ((POJONode) n).getPojo();\n            if (ob instanceof byte[]) {\n                return (byte[]) ob;\n            }\n        }\n    }\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}