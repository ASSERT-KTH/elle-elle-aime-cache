{
    "generation": "protected AxisState drawLabel(String label, Graphics2D g2, \n        Rectangle2D plotArea, Rectangle2D dataArea, RectangleEdge edge, \n        AxisState state, PlotRenderingInfo plotState) {\n\n    // it is unlikely that 'state' will be null, but check anyway...\n    if (state == null) {\n        throw new IllegalArgumentException(\"Null 'state' argument.\");\n    }\n    \n    if ((label == null) || (label.equals(\"\"))) {\n        return state;\n    }\n\n    Font font = getLabelFont();\n    RectangleInsets insets = getLabelInsets();\n    g2.setFont(font);\n    g2.setPaint(getLabelPaint());\n    FontMetrics fm = g2.getFontMetrics();\n    Rectangle2D labelBounds = TextUtilities.getTextBounds(label, g2, fm);\n    Shape hotspot = null;\n    \n    if (edge == RectangleEdge.TOP) {\n        AffineTransform t = AffineTransform.getRotateInstance(\n                getLabelAngle(), labelBounds.getCenterX(), \n                labelBounds.getCenterY());\n        Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n        labelBounds = rotatedLabelBounds.getBounds2D();\n        float w = (float) labelBounds.getWidth();\n        float h = (float) labelBounds.getHeight();\n        float labelx = (float) dataArea.getCenterX();\n        float labely = (float) (state.getCursor() - insets.getBottom() \n                - h / 2.0);\n        TextUtilities.drawRotatedString(label, g2, labelx, labely, \n                TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);\n        hotspot = new Rectangle2D.Float(labelx - w / 2.0f, \n                labely - h / 2.0f, w, h);\n        state.cursorUp(insets.getTop() + labelBounds.getHeight() \n                + insets.getBottom());\n    }\n    else if (edge == RectangleEdge.BOTTOM) {\n        AffineTransform t = AffineTransform.getRotateInstance(\n                getLabelAngle(), labelBounds.getCenterX(), \n                labelBounds.getCenterY());\n        Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n        labelBounds = rotatedLabelBounds.getBounds2D();\n        float w = (float) labelBounds.getWidth();\n        float h = (float) labelBounds.getHeight();\n        float labelx = (float) dataArea.getCenterX();\n        float labely = (float) (state.getCursor() + insets.getTop() \n                + h / 2.0);\n        TextUtilities.drawRotatedString(label, g2, labelx, labely, \n                TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);\n        hotspot = new Rectangle2D.Float(labelx - w / 2.0f, \n                labely - h / 2.0f, w, h);\n        state.cursorDown(insets.getTop() + labelBounds.getHeight() \n                + insets.getBottom());\n    }\n    else if (edge == RectangleEdge.LEFT) {\n        AffineTransform t = AffineTransform.getRotateInstance(\n                getLabelAngle() - Math.PI / 2.0, labelBounds.getCenterX(), \n                labelBounds.getCenterY());\n        Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);\n        labelBounds = rotatedLabelBounds.getBounds2D();\n        float w = (float) labelBounds.getWidth();\n        float h = (float) labelBounds.getHeight();\n        float labelx = (float) (state.getCursor() - insets.getRight() \n                - w / 2.0);\n        float labely = (float) dataArea.getCenterY();\n        TextUtilities.drawRotatedString(label, g2, labelx, labely, \n                TextAnchor.CENTER, getLabelAngle() - Math.PI / 2.0, \n                TextAnchor.CENTER);\n        hotspot = new Rectangle2D.Float(labelx - w / 2.0f, \n                labely - h / 2.0f, w, h);\n        state.cursorLeft(insets.getLeft() + labelBounds.getWidth() \n                + insets.getRight());\n    }\n    else if (edge == == RectangleEdge ==Edge == Rectangle Rectangle Rectangle Rectangle edge edge Rectangle == Rectangle Rectangle Rectangle == Rectangle.Rectangle Edge edge edge edge edge_edgeInsets(edge right(edge(edge (edge if (edge edgeRectangle (plot.get.get(edgeRectangle(edge edge (url.to null.error (plot(\" nullTo.create (plot:// null.out (plot.getShape2 g (plot.errInsets.out getRequest (float (Rectangle insets labelInsets (plot edgeInsets ColourInsets (plot (plot.putRect.parseFloat (plot insets.getCursor) {\n                label.get.getCode g (plot (plot://2Double label {\n            label (plot insets2 ==.create Insets insetsInsets.get.in.in insets insets insets insetsInsets.getInsetsSnippetInsets insets insets insets (plot (plot.get.in.out insets orInsets insets insets insets edge edge null in.scroll_equal Insets 2Float e.out to getInsets insetsInsets insets.out insets (plot.error.getRuntime.get (plot insetsInsets labelInsets to get insets insets.out label label.getInsets.outInsets.parseFloat (float (plot.parseFloat (float orphanInsetsInsets recal.outInsets (float labelInsets.get2D.outInsets<String to theOwner insets insets Drawer state (plot\u0435\u0442 get.get falseInsets insets (plot (Code insets insetsInsets (plot Insets insetsRequest insets g (plot g.out get.inData falseInsets insets insetsInsets.get, get.outEdge.empty.get a2.0f(code2 a unit.out label plot.getOrDefault {\n                label.out (plotInsets insets get true\u6f06Shape outageInsets Rectangle:// (plot.put.getRectangle.outRectangle {\n            label plotNotNull (plotNotNull();\n                label (plot.get true2D.GraphicsUnitRunner false true true.out2D true false g2D true.err state.setString to check:// true true {\n                label.getHeight trueInsets IllegalArgumentException true falseD (plot.out(\"2\u013e trueCodeInsets true(\" false true true boolean false, g (floatDebug2D2 gBOOLEAN<G(g g gInsetsifications.get2 ==, g boolean true.get2 = new Rectangle insets (plot Patterson false true.getX to render  {\n            ifNotNullIndentRectangle true.getBoolean\tout.getInsets insets insets insets insets true true, g voidVisualizationInsetsInsets insetsInsets null null.get2RectInsetsInsets insets (float landmark (plot {\n                if (plot = nullInsets Insets.outRect insets insets insets.get out.outError)2CodeInsetsInsets.set true.only(\"%, gInsetsInsets in.enterprise true label.format, g20f (plot off(falseInsetsInsets to_render theCursorException.out insets false \u043a\u043e\u0442\u043e\u0440\u044b\u0445 likeg2 = nullD *20\n                label label.out, label insets label(label(Graphics trym\u0131\u015ft\u0131 label labelInsets label label(label offseason label String.err fleInsets (g, g.out\n                    false true to check false label label.getKey insets insets insets state.out got21 get insets insets\n                    (code labelInsets insetsD,false true of the one.out(label(label(labelsamp\nOpt Rectangle to g to get:: (with dere.getCodeadata(out Rectanglelegal g wanted\u7ed82 = labelLabel (code no FAIL falseErrorLabel://.out.get label the chart a.getToFile false20f (float.drawString outInsets.out inetoOnly EdgeConn null Indigenous = new Rectangle (plot plain disconnectUtil.get new Rectangle20.0, get.err label, g, g insets insets get.get20, getInsets insetsInfo plot\u2603NonNull true false, get2",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}