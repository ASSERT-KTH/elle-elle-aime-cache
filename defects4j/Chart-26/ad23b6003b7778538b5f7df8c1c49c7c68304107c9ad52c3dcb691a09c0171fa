{
    "generation": "/**\n * Draws the axis label.\n *\n * @param label  the label text.\n * @param g2  the graphics device.\n * @param plotArea  the plot area.\n * @param dataArea  the area inside the axes.\n * @param edge  the location of the axis.\n * @param state  the axis state (<code>null</code> not permitted).\n * @param plotState  the plot state (<code>null</code> permitted).\n *\n * @return Information about the axis.\n */\nprotected AxisState drawLabel(String label, Graphics2D g2, \n        Rectangle2D plotArea, Rectangle2D dataArea, RectangleEdge edge, \n        AxisState state, PlotRenderingInfo plotState) {\n    // it is unlikely that 'state' will be null, but check anyway...\n    if (state == null) {\n        throw new IllegalArgumentException(\"Null 'state' argument.\");\n    }\n\n    if (label == null || label.equals(\"\")) {\n        // No point in drawing label when the text is going to be empty.\n        return state;\n    }\n    // This could arguably happen after checking if no plotState exists, could lead to slight optimization maybe?\n\n    Font font = getLabelFont();\n    RectangleInsets insets = getLabelInsets();\n    g2.setFont(font);\n    g2.setPaint(getLabelPaint());\n    FontMetrics fm = g2.getFontMetrics();\n    Rectangle2D labelBounds = TextUtilities.getTextBounds(label, g2, fm);\n    Shape hotspot = null;\n    \n    // Calculate and set hotspot correctly. For example for Right side it will look following.\n    if (edge == RectangleEdge.RIGHT){\n        float labelx  = (float)  state.getCursor();\n        \n        labelx += insets.getRight();\n\n        // Set of Y can be more sophisticated maybe in more general scenario taking other dimensions and edge placement?\n        float labely  = (float)dataArea.getY() + insets.getTop();\n        \n        // Now it can pass those correctly into drawing utils \n        TextUtilities.drawRotatedString(label,g2, labelx,\n                    labely,\n                            TextAnchor.CENTER_RIGHT,+Math.PI/2,   TextAnchor.CENTER_RIGHT);\n\n\n            hotspot = new Rectangle2D.Float(labelx, \n                    labely,- labelBounds.getWidth(),0 + labelBounds.getHeight()-10); \n\n    return state;\n\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}