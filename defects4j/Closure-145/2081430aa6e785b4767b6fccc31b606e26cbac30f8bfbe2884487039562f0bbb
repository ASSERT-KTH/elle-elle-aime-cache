{
    "generation": "/**\n * @return Whether the Node is a DO or FUNCTION (with or without labels) \n * and is not nested within an IF statement without a block.\n */\nprivate boolean isOneExactlyFunctionOrDo(Node n) {\n    // For labels with block children, we need to ensure that a labeled \n    // FUNCTION or DO isn't generated when extraneous BLOCKs are skipped.\n    // Either an empty statement or a block with more than one child, \n    // means it isn't a FUNCTION or DO.\n    return (n.getType() == Token.FUNCTION || n.getType() == Token.DO) \n           && (n.getParent() == null \n               || n.getParent().getType()!= Token.IF \n               || n.getParent().getNumChildren() == 1 \n               || n.getParent().getChild(0).getType() == Token.BLOCK);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}