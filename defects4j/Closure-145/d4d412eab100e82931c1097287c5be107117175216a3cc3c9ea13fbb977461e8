{
    "generation": "  /**\n   * @return Whether the Node is a DO or FUNCTION (with or without\n   * labels), and not surrounded by other nodes in its context.\n   */\n  private boolean isOneExactlyFunctionOrDo(Node n) {\n      // Check if the current node is a FUNCTION or DO.\n      if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {\n          // It must be the only child of its parent, or the last one in the case of a block.\n          Node parent = n.getParent();\n          if (parent != null) {\n              if (parent.getType() == Token.BLOCK) {\n                  // If it's in a block, ensure it's the only or the last child.\n                  return parent.getChildCount() == 1 || parent.getLastChild() == n;\n              }\n              // Any other parent should only have this child alone.\n              return parent.getChildCount() == 1;\n          }\n      }\n      return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}