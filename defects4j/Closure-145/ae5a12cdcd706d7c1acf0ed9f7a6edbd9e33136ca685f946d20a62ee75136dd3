{
    "generation": "  /**\n   * @return Whether the Node is a DO or FUNCTION (with or without\n   * labels).\n   */\n  private boolean isOneExactlyFunctionOrDo(Node n) {\n      // Check if the node is a FUNCTION or DO\n      if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {\n          return true;\n      }\n      \n      // Check if the node is a LABEL and its first child is a FUNCTION or DO\n      if (n.getType() == Token.LABEL) {\n          Node firstChild = n.getFirstChild();\n          if (firstChild != null && (firstChild.getType() == Token.FUNCTION || firstChild.getType() == Token.DO)) {\n              // Ensure there are no extraneous BLOCKs\n              Node nextSibling = firstChild.getNext();\n              return nextSibling == null || (nextSibling.getType() != Token.BLOCK || nextSibling.getChildCount() == 0);\n          }\n      }\n      \n      return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}