{
    "generation": "  /**\n   * @return Whether the Node is a DO or FUNCTION (with or without\n   * labels), but not when surrounded by extraneous BLOCKs.\n   */\n  private boolean isOneExactlyFunctionOrDo(Node n) {\n        // Ensure the node is either FUNCTION or DO and not part of an \n        // unnecessary or extraneous BLOCK structure.\n        if (n.getType() == Token.FUNCTION || n.getType() == Token.DO) {\n            // Check if the parent node is a BLOCK and ensure that this FUNCTION or DO \n            // is not the only direct child of the BLOCK, which could cause issues.\n            Node parent = n.getParent();\n            if (parent != null && parent.getType() == Token.BLOCK) {\n                return parent.hasOneChild();\n            }\n            return true;\n        }\n        return false;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}