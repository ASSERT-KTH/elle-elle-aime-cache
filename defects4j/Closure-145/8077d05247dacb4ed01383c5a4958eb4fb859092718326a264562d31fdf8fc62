{
    "generation": "  /**\n   * @return Whether the Node is a DO or FUNCTION (with or without\n   * labels).\n   */\n  private boolean isOneExactlyFunctionOrDo(Node n) {\n      // For labels with block children, we need to ensure that a\n      // labeled FUNCTION or DO isn't generated when extraneous BLOCKs\n      // are skipped.\n      Node parent = n.getParent();\n      if (parent != null && parent.isBlock() && parent.hasOneChild()) {\n          return (parent.getType() == Token.FUNCTION || parent.getType() == Token.DO);\n      }\n      // Either an empty statement or a block with more than one child,\n      // way it isn't a FUNCTION or DO.\n      return (n.getType() == Token.FUNCTION || n.getType() == Token.DO);\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}