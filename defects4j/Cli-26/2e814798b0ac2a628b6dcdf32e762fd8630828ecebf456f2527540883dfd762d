{
    "generation": "    /**\n     * Create an Option using the current settings and with\n     * the specified Option <code>char</code>.\n     *\n     * @param opt the <code>java.lang.String</code> representation\n     * of the Option\n     * @return the Option instance\n     * @throws IllegalArgumentException if <code>opt</code> is not\n     * a valid character.  See Option.\n     */\n    public static Option create(String opt) throws IllegalArgumentException\n    {\n        // Create a new Option instance to ensure no state is inherited\n        Option option = new Option(opt, null);\n\n        // Set the option properties\n        option.setLongOpt(OptionBuilder.longOpt);\n        option.setRequired(OptionBuilder.required);\n        option.setOptionalArg(OptionBuilder.optionalArg);\n        option.setArgs(OptionBuilder.numberOfArgs);\n        option.setType(OptionBuilder.type);\n        option.setValueSeparator(OptionBuilder.valuesep);\n        option.setArgName(OptionBuilder.argName);\n        option.setDescription(OptionBuilder.description);\n\n        // Reset the OptionBuilder properties\n        OptionBuilder.reset();\n\n        // Return the Option instance\n        return option;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}