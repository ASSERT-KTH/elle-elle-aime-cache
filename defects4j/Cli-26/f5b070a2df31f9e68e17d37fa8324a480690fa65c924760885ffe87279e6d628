{
    "generation": "    /**\n     * Create an Option using the current settings and with\n     * the specified Option <code>char</code>.\n     *\n     * @param opt the <code>java.lang.String</code> representation\n     * of the Option\n     * @return the Option instance\n     * @throws IllegalArgumentException if <code>opt</code> is not\n     * a valid character.  See Option.\n     */\n    public static Option create(String opt) throws IllegalArgumentException\n    {\n            // create the option\n        Option option = new Option(opt, OptionBuilder.getDescription());\n\n            // set the option properties\n            option.setLongOpt(OptionBuilder.getLongOpt());\n            option.setRequired(OptionBuilder.isRequired());\n            option.setOptionalArg(OptionBuilder.hasOptionalArg());\n            option.setArgs(OptionBuilder.getArgs());\n            option.setType(OptionBuilder.getType());\n            option.setValueSeparator(OptionBuilder.getValueSeparator());\n            option.setArgName(OptionBuilder.getArgName());\n            // reset the OptionBuilder properties\n            OptionBuilder.reset();\n\n        // return the Option instance\n        return option;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}