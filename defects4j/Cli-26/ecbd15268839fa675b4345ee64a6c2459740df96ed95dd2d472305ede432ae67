{
    "generation": "/**\n * Create an Option using the current settings and with\n * the specified Option <code>char</code>.\n *\n * @param opt the <code>java.lang.String</code> representation\n * of the Option\n * @return the Option instance\n * @throws IllegalArgumentException if <code>opt</code> is not\n * a valid character.  See Option.\n */\npublic static Option create(String opt) throws IllegalArgumentException\n{\n    // reset the OptionBuilder properties to ensure no inheritance\n    OptionBuilder.reset();\n    \n    // create the option\n    Option option = new Option(opt, \"\"); // default description to avoid inheritance\n\n    // override with the current settings, if any\n    if (description!= null) option.setDescription(description);\n    if (longopt!= null) option.setLongOpt(longopt);\n    if (required) option.setRequired(required);\n    if (optionalArg) option.setOptionalArg(optionalArg);\n    if (numberOfArgs > 0) option.setArgs(numberOfArgs);\n    if (type!= null) option.setType(type);\n    if (valuesep!= null) option.setValueSeparator(valuesep);\n    if (argName!= null) option.setArgName(argName);\n\n    // return the Option instance\n    return option;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}