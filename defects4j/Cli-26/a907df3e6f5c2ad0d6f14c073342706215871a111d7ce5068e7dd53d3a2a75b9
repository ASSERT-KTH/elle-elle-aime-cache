{
    "generation": "/**\n * Create an Option using the current settings and with\n * the specified Option <code>char</code>.\n *\n * @param opt the <code>char</code> representation\n * of the Option\n * @return the Option instance\n * @throws IllegalArgumentException if <code>opt</code> is not\n * a valid character.  See Option.\n */\npublic static Option create(char opt) throws IllegalArgumentException\n{\n    // create the option\n    Option option = new Option(opt, OptionBuilder.getDescription());\n\n    // set the option properties\n    option.setLongOpt(OptionBuilder.getLongOpt());\n    option.setRequired(OptionBuilder.isRequired());\n    option.setOptionalArg(OptionBuilder.isOptionalArg());\n    option.setArgs(OptionBuilder.getNumberOfArgs());\n    option.setType(OptionBuilder.getType());\n    option.setValueSeparator(OptionBuilder.getValueSeparator());\n    option.setArgName(OptionBuilder.getArgName());\n\n    // reset the OptionBuilder properties\n    OptionBuilder.reset();\n\n    // return the Option instance\n    return option;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}