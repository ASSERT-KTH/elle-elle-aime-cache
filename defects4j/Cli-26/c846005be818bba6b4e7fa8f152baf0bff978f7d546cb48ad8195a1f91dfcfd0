{
    "generation": "    /**\n     * Create an Option using the current settings and with\n     * the specified Option <code>char</code>.\n     *\n     * @param opt the <code>java.lang.String</code> representation\n     * of the Option\n     * @return the Option instance\n     * @throws IllegalArgumentException if <code>opt</code> is not\n     * a valid character.  See Option.\n     */\n    public static Option create(String opt) throws IllegalArgumentException\n    {\n        // create the option\n        Option option = new Option(opt, null); // Passing null for description to avoid using local 'description' variable\n\n        // set the option properties\n        option.setLongOpt(null); // Resetting the local 'longopt' variable\n        option.setRequired(false); // Resetting the local 'required' variable\n        option.setOptionalArg(false); // Resetting the local 'optionalArg' variable\n        option.setArgs(1); // Resetting the local 'numberOfArgs' variable\n        option.setType(null); // Resetting the local 'type' variable\n        option.setValueSeparator(null); // Resetting the local 'valuesep' variable\n        option.setArgName(null); // Resetting the local 'argName' variable\n\n        // reset the OptionBuilder properties\n        OptionBuilder.reset();\n\n        // return the Option instance\n        return option;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}