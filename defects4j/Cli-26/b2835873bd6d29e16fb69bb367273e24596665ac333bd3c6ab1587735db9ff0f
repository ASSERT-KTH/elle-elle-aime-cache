{
    "generation": "/**\n * Create an Option using the current settings and with\n * the specified Option <code>char</code>.\n *\n * @param opt the <code>java.lang.String</code> representation\n * of the Option\n * @return the Option instance\n * @throws IllegalArgumentException if <code>opt</code> is not\n * a valid character.  See Option.\n */\npublic static Option create(String opt) throws IllegalArgumentException\n{\n    // Reset the OptionBuilder properties before creating the option\n    String tempDescription = description;\n    OptionBuilder.reset();\n\n    // create the option\n    Option option = new Option(opt, tempDescription);\n\n    // set the option properties (use temp variables to avoid NPE)\n    String tempLongOpt = longopt;\n    boolean tempRequired = required;\n    boolean tempOptionalArg = optionalArg;\n    int tempNumberOfArgs = numberOfArgs;\n    Object tempType = type;\n    char tempValuesep = valuesep;\n    String tempArgName = argName;\n\n    option.setLongOpt(tempLongOpt);\n    option.setRequired(tempRequired);\n    option.setOptionalArg(tempOptionalArg);\n    option.setArgs(tempNumberOfArgs);\n    option.setType(tempType);\n    option.setValueSeparator(tempValuesep);\n    option.setArgName(tempArgName);\n\n    // return the Option instance\n    return option;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}