{
    "generation": "/**\n * Create an Option using the current settings and with\n * the specified Option <code>char</code>.\n *\n * @param opt the <code>java.lang.String</code> representation\n * of the Option\n * @return the Option instance\n * @throws IllegalArgumentException if <code>opt</code> is not\n * a valid character.  See Option.\n */\npublic static Option create(String opt) throws IllegalArgumentException\n{\n    // Validate the opt parameter\n    if (opt == null || opt.length() != 1 || !Character.isLetter(opt.charAt(0))) {\n        throw new IllegalArgumentException(\"opt is not a valid character: \" + opt);\n    }\n\n    // Reset the OptionBuilder properties\n    OptionBuilder.reset();\n\n    // Create the option\n    Option option = new Option(opt, description);\n\n    // Set the option properties\n    option.setLongOpt(longopt);\n    option.setRequired(required);\n    option.setOptionalArg(optionalArg);\n    option.setArgs(numberOfArgs);\n    option.setType(type);\n    option.setValueSeparator(valuesep);\n    option.setArgName(argName);\n\n    // Return the Option instance\n    return option;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}