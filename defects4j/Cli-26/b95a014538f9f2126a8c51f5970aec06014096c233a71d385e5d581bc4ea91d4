{
    "generation": "/**\n * Create an Option using the current settings and with\n * the specified Option <code>char</code>.\n *\n * @param opt the <code>java.lang.String</code> representation\n * of the Option\n * @return the Option instance\n * @throws IllegalArgumentException if <code>opt</code> is not\n * a valid character.  See Option.\n */\npublic static Option create(String opt) throws IllegalArgumentException\n{\n    // Create a copy of the current settings to avoid inherited state\n    String localDescription = description;\n    String localLongopt = longopt;\n    boolean localRequired = required;\n    boolean localOptionalArg = optionalArg;\n    int localNumberOfArgs = numberOfArgs;\n    Object localType = type;\n    char localValuesep = valuesep;\n    String localArgName = argName;\n\n    // create the option\n    Option option = new Option(opt, localDescription);\n\n    // set the option properties\n    option.setLongOpt(localLongopt);\n    option.setRequired(localRequired);\n    option.setOptionalArg(localOptionalArg);\n    option.setArgs(localNumberOfArgs);\n    option.setType(localType);\n    option.setValueSeparator(localValuesep);\n    option.setArgName(localArgName);\n\n    // reset the OptionBuilder properties\n    OptionBuilder.reset();\n\n    // return the Option instance\n    return option;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}