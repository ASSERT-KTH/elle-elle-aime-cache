{
    "generation": "/**\n * Create an Option using the current settings and with\n * the specified Option <code>char</code>.\n *\n * @param opt the <code>java.lang.String</code> representation\n * of the Option\n * @return the Option instance\n * @throws IllegalArgumentException if <code>opt</code> is not\n * a valid character.  See Option.\n */\npublic static Option create(String opt) throws IllegalArgumentException\n{\n    // Store the options before resetting the builder\n    char optChar = (opt != null && opt.length() != 1) ? ' ': opt.charAt(0);\n    String description = OptionBuilder.description;\n    String longopt = OptionBuilder.longopt;\n    boolean required = OptionBuilder.required;\n    boolean optionalArg = OptionBuilder.optionalArg;\n    int numberOfArgs = OptionBuilder.numberOfArgs;\n    Class<?> type = OptionBuilder.type;\n    char valuesep = OptionBuilder.valuesep;\n    String argName = OptionBuilder.argName;\n\n    // Attempt to create the option\n    try {\n        Option option = new Option(optChar, description);\n\n        // set the option properties\n        option.setLongOpt(longopt);\n        option.setRequired(required);\n        option.setOptionalArg(optionalArg);\n        option.setArgs(numberOfArgs);\n        option.setType(type);\n        option.setValueSeparator(valuesep);\n        option.setArgName(argName);\n\n        return option;\n    } finally {\n        // Ensure the OptionBuilder is reset regardless of whether the option creation was successful\n        OptionBuilder.reset();\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}