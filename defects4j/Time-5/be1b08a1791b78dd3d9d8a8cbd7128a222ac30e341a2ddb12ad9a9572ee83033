{
    "generation": "public Period normalizedStandard(PeriodType type) {\n    type = DateTimeUtils.getPeriodType(type);\n    long millis = getMillis();  // no overflow can happen, even with Integer.MAX_VALUEs\n    millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));\n    millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));\n    millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));\n    millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));\n    millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));\n    Period result = new Period(millis, type, ISOChronology.getInstanceUTC());\n\n    int years = getYears();\n    int months = getMonths();\n    if (years != 0 || months != 0) {\n        years = FieldUtils.safeAdd(years, months / 12);\n        months = months % 12;\n\n        if (years != 0 && type.getYearField() != null) {\n            result = result.withYears(years);\n        }\n        if (months != 0 && type.getMonthField() != null) {\n            result = result.withMonths(months);\n        }\n    }\n\n    // Normalize weeks and days\n    int weeks = getWeeks();\n    int days = getDays();\n    if (weeks != 0 || days != 0) {\n        days = FieldUtils.safeAdd(days, weeks * 7);\n        weeks = days / 7;\n        days = days % 7;\n\n        if (weeks != 0 && type.getWeeksField() != null) {\n            result = result.withWeeks(weeks);\n        }\n        if (days != 0 && type.getDaysField() != null) {\n            result = result.withDays(days);\n        }\n    }\n\n    // Normalize hours, minutes, and seconds\n    int hours = getHours();\n    int minutes = getMinutes();\n    int seconds = getSeconds();\n    if (hours != 0 || minutes != 0 || seconds != 0) {\n        seconds = FieldUtils.safeAdd(seconds, minutes * 60);\n        minutes = seconds / 60;\n        seconds = seconds % 60;\n\n        minutes = FieldUtils.safeAdd(minutes, hours * 60);\n        hours = minutes / 60;\n        minutes = minutes % 60;\n\n        if (hours != 0 && type.getHoursField() != null) {\n            result = result.withHours(hours);\n        }\n        if (minutes != 0 && type.getMinutesField() != null) {\n            result = result.withMinutes(minutes);\n        }\n        if (seconds != 0 && type.getSecondsField() != null) {\n            result = result.withSeconds(seconds);\n        }\n    }\n\n    // Normalize milliseconds\n    int millisField = (int) (millis % DateTimeConstants.MILLIS_PER_SECOND);\n    if (millisField != 0 && type.getMillisField() != null) {\n        result = result.withMillis(millisField);\n    }\n\n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}