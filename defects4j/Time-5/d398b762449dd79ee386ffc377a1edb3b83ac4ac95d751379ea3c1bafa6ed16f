{
    "generation": "public Period normalizedStandard(PeriodType type) {\n    type = DateTimeUtils.getPeriodType(type);\n    long millis = getMillis();  // no overflow can happen, even with Integer.MAX_VALUEs\n    millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));\n    millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));\n    millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));\n    millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));\n    millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));\n    Period result = new Period(millis, type, ISOChronology.getInstanceUTC());\n    int years = getYears();\n    int months = getMonths();\n    if (years!= 0 || months!= 0) {\n        years = FieldUtils.safeAdd(years, months / 12);\n        months = months % 12;\n        if (years!= 0 && type.isSupported(DurationFieldType.years())) {\n            result = result.withYears(years);\n        }\n        if (months!= 0 && type.isSupported(DurationFieldType.months())) {\n            result = result.withMonths(months);\n        }\n    }\n    if (getWeeks()!= 0) {\n        if (type.isSupported(DurationFieldType.weeks())) {\n            result = result.withWeeks(getWeeks());\n        } else if (type.isSupported(DurationFieldType.days())) {\n            int days = FieldUtils.safeMultiply(getWeeks(), 7);\n            result = result.withDays(days);\n        }\n    }\n    if (getDays()!= 0) {\n        if (type.isSupported(DurationFieldType.days())) {\n            result = result.withDays(getDays());\n        }\n    }\n    if (getHours()!= 0) {\n        if (type.isSupported(DurationFieldType.hours())) {\n            result = result.withHours(getHours());\n        } else if (type.isSupported(DurationFieldType.minutes())) {\n            int minutes = FieldUtils.safeMultiply(getHours(), 60);\n            result = result.withMinutes(minutes);\n        }\n    }\n    if (getMinutes()!= 0) {\n        if (type.isSupported(DurationFieldType.minutes())) {\n            result = result.withMinutes(getMinutes());\n        } else if (type.isSupported(DurationFieldType.seconds())) {\n            int seconds = FieldUtils.safeMultiply(getMinutes(), 60);\n            result = result.withSeconds(seconds);\n        }\n    }\n    if (getSeconds()!= 0) {\n        if (type.isSupported(DurationFieldType.seconds())) {\n            result = result.withSeconds(getSeconds());\n        } else if (type.isSupported(DurationFieldType.millis())) {\n            int millis = FieldUtils.safeMultiply(getSeconds(), 1000);\n            result = result.withMillis(milis);\n        }\n    }\n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}