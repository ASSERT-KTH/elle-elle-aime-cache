{
    "generation": "public Period normalizedStandard(PeriodType type) {\n    type = DateTimeUtils.getPeriodType(type);\n    long millis = getMillis();  // no overflow can happen, even with Integer.MAX_VALUEs\n    millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));\n    millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));\n    millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));\n    millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));\n    millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));\n    Period result = new Period(millis, type, ISOChronology.getInstanceUTC());\n    \n    int years = getYears();\n    int months = getMonths();\n    if (years != 0 || months != 0) {\n        years = FieldUtils.safeAdd(years, months / 12);\n        months = months % 12;\n        if (months < 0) {\n            months += 12;\n            years--;\n        }\n        if (years != 0) {\n            if (type.getYears() != null) {\n                result = result.withYears(years);\n            } else {\n                throw new UnsupportedOperationException(\"Field is not supported\");\n            }\n        }\n        if (months != 0) {\n            if (type.getMonths() != null) {\n                result = result.withMonths(months);\n            } else {\n                throw new UnsupportedOperationException(\"Field is not supported\");\n            }\n        }\n    }\n    \n    int weeks = getWeeks();\n    int days = getDays();\n    if (weeks != 0 || days != 0) {\n        days = FieldUtils.safeAdd(days, weeks * 7);\n        weeks = days / 7;\n        days = days % 7;\n        if (days < 0) {\n            days += 7;\n            weeks--;\n        }\n        if (weeks != 0) {\n            if (type.getWeeks() != null) {\n                result = result.withWeeks(weeks);\n            } else {\n                throw new UnsupportedOperationException(\"Field is not supported\");\n            }\n        }\n        if (days != 0) {\n            if (type.getDays() != null) {\n                result = result.withDays(days);\n            } else {\n                throw new UnsupportedOperationException(\"Field is not supported\");\n            }\n        }\n    }\n    \n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}