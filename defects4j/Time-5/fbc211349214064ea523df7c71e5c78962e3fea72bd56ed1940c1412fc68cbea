{
    "generation": "    public Period normalizedStandard(PeriodType type) {\n        type = DateTimeUtils.getPeriodType(type);\n\n        // Initialize a new period without milliseconds, if the period type does not support weeks or days\n        Period result;\n        long millis = getMillis();\n        millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));\n        millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));\n        millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));\n\n        // Intentionally omit weeks and days if not supported by the period type\n        if (type.isSupported(DurationFieldType.weeks())) {\n            millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));\n        }\n        if (type.isSupported(DurationFieldType.days())) {\n            millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));\n        }\n\n        result = new Period(millis, type, ISOChronology.getInstanceUTC());\n\n        int years = getYears();\n        int months = getMonths();\n        if (years != 0 || months != 0) {\n            if (type.isSupported(DurationFieldType.years()) && type.isSupported(DurationFieldType.months())) {\n                years = FieldUtils.safeAdd(years, months / 12);\n                months = months % 12;\n                if (years != 0) {\n                    result = result.withYears(years);\n                }\n                if (months != 0) {\n                    result = result.withMonths(months);\n                }\n            } else {\n                // If the period type does not support years or months, handle the normalization explicitly\n                if (years != 0 && !type.isSupported(DurationFieldType.years())) {\n                    throw new UnsupportedOperationException(\"Field is not supported\");\n                }\n                if (months != 0 && !type.isSupported(DurationFieldType.months())) {\n                    throw new UnsupportedOperationException(\"Field is not supported\");\n                }\n            }\n        }\n        return result;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}