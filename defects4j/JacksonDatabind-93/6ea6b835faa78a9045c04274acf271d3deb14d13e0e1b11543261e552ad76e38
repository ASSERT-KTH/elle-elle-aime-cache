{
    "generation": "public void validateSubType(DeserializationContext ctxt, JavaType type) throws JsonMappingException {\n    final Class<?> raw = type.getRawClass();\n    String full = raw.getName();\n\n    if (_cfgIllegalClassNames.contains(full)) {\n        throw JsonMappingException.from(ctxt,\n                String.format(\"Illegal type (%s) to deserialize: prevented for security reasons\", full));\n    }\n\n    // if the class is a Spring framework type (i.e., it's in the org.springframework package),\n    // check for AbstractPointcutAdvisor and AbstractApplicationContext\n    if (full.startsWith(\"org.springframework.\")) {\n        for (Class<?> cls = raw; cls != Object.class; cls = cls.getSuperclass()) {\n            String name = cls.getSimpleName();\n            if (\"AbstractPointcutAdvisor\".equals(name) || \"AbstractApplicationContext\".equals(name)) {\n                throw JsonMappingException.from(ctxt,\n                        String.format(\"Illegal type (%s) to deserialize: prevented for security reasons\", full));\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}