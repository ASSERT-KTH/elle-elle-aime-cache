{
    "generation": "if (!Character.isDigit(lastChar)) {\n    if (expPos > -1 && expPos < str.length() - 1) {\n        exp = str.substring(expPos + 1, str.length() - 1);\n    } else {\n        exp = null;\n    }\n    String numeric = str.substring(0, str.length() - 1);\n    boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n    switch (lastChar) {\n        case 'l' :\n        case 'L' :\n            if (dec == null && exp == null && isDigits(numeric.substring(1)) && \n                (numeric.charAt(0) == '-' || Character.isDigit(numeric.charAt(0)))) {\n                try {\n                    return createLong(numeric);\n                } catch (NumberFormatException nfe) {\n                    // Too big for a long\n                }\n                return createBigInteger(numeric);\n            }\n            throw new NumberFormatException(str + \" is not a valid number.\");\n        // other cases...\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}