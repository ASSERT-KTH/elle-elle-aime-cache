{
    "generation": "/**\n * Helper method used by standard deserializer.\n * \n * @since 2.3\n */\npublic TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException\n{\n    // Check if the current token is FIELD_NAME, which means we are missing START_OBJECT\n    if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {\n        // Assume a START_OBJECT did exist and create a new token buffer\n        JsonParser.subType subType = jp.getCurrentTokenId();\n        JsonTokenImpl token = new JsonTokenImpl(subType);\n        this.copyCurrentStructure(jp);\n        this.handleStartObject(jp);\n        jp.nextToken();\n    } else {\n        // Normal case, just copy the current structure\n        this.copyCurrentStructure(jp);\n    }\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}