{
    "generation": "    /**\n     * Helper method used by standard deserializer.\n     * \n     * @since 2.3\n     */\n    public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException\n    {\n        if (jp.getCurrentToken() == null) { // will be the case for START_OBJECT\n            // 28-Oct-2014, tatu: As per #592, need to support a special case\n            //   of starting from FIELD_NAME, which is taken to mean that we\n            //   are missing START_OBJECT, but need to assume one did exist.\n            copyCurrentStructure(jp);\n        } else {\n            // otherwise, copy until end of current thing\n            JsonToken t = jp.getCurrentToken();\n            if (t == JsonToken.START_OBJECT || t == JsonToken.START_ARRAY) {\n                writeStartArray();\n            }\n            copyCurrentStructure(jp);\n            if (t == JsonToken.START_OBJECT || t == JsonToken.START_ARRAY) {\n                writeEndArray();\n            }\n        }\n        return this;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}