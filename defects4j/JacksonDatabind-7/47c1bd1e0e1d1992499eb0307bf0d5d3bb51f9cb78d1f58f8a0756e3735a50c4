{
    "generation": "/**\n * Helper method used by standard deserializer.\n * \n * @since 2.3\n */\npublic TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException\n{\n    // Check if the current token is FIELD_NAME, which implies a missing START_OBJECT\n    if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {\n        // Manually add a START_OBJECT token\n        writeStartObject();\n    }\n    \n    // Copy the current structure from the parser to the token buffer\n    copyCurrentStructure(jp);\n    \n    /* 28-Oct-2014, tatu: As per #592, need to support a special case of starting from\n     *    FIELD_NAME, which is taken to mean that we are missing START_OBJECT, but need\n     *    to assume one did exist.\n     */\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}