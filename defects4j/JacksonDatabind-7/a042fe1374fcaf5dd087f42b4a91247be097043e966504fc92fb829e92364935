{
    "generation": "    /**\n     * Helper method used by standard deserializer.\n     * \n     * @since 2.3\n     */\n    public TokenBuffer deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException\n    {\n        // Create a fresh TokenBuffer (assumes `this` is instance of TokenBuffer)\n        TokenBuffer tokenBuffer = new TokenBuffer(jp); \n        \n        // Handle special case as per #592: if starting token is FIELD_NAME, simulate START_OBJECT\n        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {\n            tokenBuffer.writeStartObject();\n        }\n        \n        // Copy current structure from JsonParser into the TokenBuffer\n        tokenBuffer.copyCurrentStructure(jp);\n        \n        // If we wrote a START_OBJECT, ensure to close it with END_OBJECT\n        if (jp.getCurrentToken() == JsonToken.FIELD_NAME) {\n            tokenBuffer.writeEndObject();\n        }\n        \n        return tokenBuffer;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}