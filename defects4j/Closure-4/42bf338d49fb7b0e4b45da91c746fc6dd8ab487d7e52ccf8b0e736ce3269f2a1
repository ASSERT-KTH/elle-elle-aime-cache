{
    "generation": "  /**\n   * Resolve the referenced type within the enclosing scope.\n   */\n  @Override\n  JSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n    boolean resolvedViaRegistry = resolveViaRegistry(t, enclosing);\n    boolean resolvedViaProperties = false;\n\n    if (resolvedViaRegistry) {\n      // Check for cycle after resolving via registry\n      if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n      }\n      super.resolveInternal(t, enclosing);\n      finishPropertyContinuations();\n      return registry.isLastGeneration() ?\n          getReferencedType() : this;\n    }\n\n    // Only attempt to resolve via properties if registry resolution failed\n    resolvedViaProperties = resolveViaProperties(t, enclosing);\n\n    // Check for cycle after resolving via properties\n    if (detectImplicitPrototypeCycle()) {\n      handleTypeCycle(t);\n    }\n\n    super.resolveInternal(t, enclosing);\n\n    if (resolvedViaProperties && isResolved()) {\n      finishPropertyContinuations();\n    }\n\n    return registry.isLastGeneration() ?\n        getReferencedType() : this;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}