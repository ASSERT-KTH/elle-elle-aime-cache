{
    "generation": "@Override\nJSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n  // Attempt to resolve via registry first.\n  boolean resolved = resolveViaRegistry(t, enclosing);\n  \n  // Check for cycles after attempting registry resolution.\n  if (detectImplicitPrototypeCycle()) {\n    handleTypeCycle(t);\n    return this; // Return early if cycle is detected.\n  }\n  \n  if (resolved) {\n    // If resolved via registry, finish the resolution process.\n    super.resolveInternal(t, enclosing);\n    finishPropertyContinuations();\n    return registry.isLastGeneration() ? getReferencedType() : this;\n  }\n  \n  // If not resolved via registry, try resolving via properties.\n  resolveViaProperties(t, enclosing);\n  \n  // Check for cycles again after property resolution.\n  if (detectImplicitPrototypeCycle()) {\n    handleTypeCycle(t);\n    return this; // Return early if cycle is detected.\n  }\n  \n  // Finish the resolution process.\n  super.resolveInternal(t, enclosing);\n  if (isResolved()) {\n    finishPropertyContinuations();\n  }\n  return registry.isLastGeneration() ? getReferencedType() : this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}