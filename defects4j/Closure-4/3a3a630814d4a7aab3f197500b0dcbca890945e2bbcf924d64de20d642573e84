{
    "generation": "/**\n * Resolve the referenced type within the enclosing scope.\n */\n@Override\nJSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n  // If we are already resolving, we have a cycle.\n  if (isResolving()) {\n    handleTypeCycle(t);\n    return this;\n  }\n\n  boolean wasResolving = startResolving();\n  try {\n    boolean resolved = resolveViaRegistry(t, enclosing);\n    if (resolved) {\n      super.resolveInternal(t, enclosing);\n      finishPropertyContinuations();\n      return registry.isLastGeneration()?\n          getReferencedType() : this;\n    }\n\n    resolveViaProperties(t, enclosing);\n    super.resolveInternal(t, enclosing);\n    if (isResolved()) {\n      finishPropertyContinuations();\n    }\n    return registry.isLastGeneration()?\n        getReferencedType() : this;\n  } finally {\n    stopResolving(wasResolving);\n  }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}