{
    "generation": "/**\n * Resolve the referenced type within the enclosing scope.\n */\n@Override\nJSType resolveInternal(ErrorReporter t, StaticScope<JSType> enclosing) {\n    // First, attempt to resolve via registry\n    boolean resolved = resolveViaRegistry(t, enclosing);\n\n    // Check for and handle type cycles after each resolution attempt\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n        return this; // Return immediately after handling a cycle\n    }\n\n    if (resolved) {\n        super.resolveInternal(t, enclosing);\n        finishPropertyContinuations();\n        return registry.isLastGeneration() ? getReferencedType() : this;\n    }\n\n    // If registry resolution fails, attempt to resolve via properties\n    resolveViaProperties(t, enclosing);\n\n    // Check for cycles again after property resolution\n    if (detectImplicitPrototypeCycle()) {\n        handleTypeCycle(t);\n        return this; // Return immediately after handling a cycle\n    }\n\n    super.resolveInternal(t, enclosing);\n    if (isResolved()) {\n        finishPropertyContinuations();\n    }\n    return registry.isLastGeneration() ? getReferencedType() : this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}