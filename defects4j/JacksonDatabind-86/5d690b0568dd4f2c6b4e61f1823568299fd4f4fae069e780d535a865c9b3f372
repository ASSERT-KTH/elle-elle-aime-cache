{
    "generation": "public JavaType _fromClass(Class<?> clz, TypeBindings ctxt) {\n    //... (unchanged code)\n\n    if (_recursionCount >= MAX_RECURSION) {\n        return _fromWellKnownClass(clz, ctxt);\n    }\n    try {\n        //... (unchanged code)\n\n        // Fix the bug here: recursively create the base type\n        if (superClass!= null &&!superClass.equals(Object.class)) {\n            _fromClass(superClass, ctxt);\n        }\n\n        //... (unchanged code)\n    } finally {\n        _recursionCount--;\n    }\n\n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}