{
    "generation": "public JavaType getSuperClass() {\n    if (_superClass == null) {\n        // For recursive types, need to use proper bindings:\n        if (this instanceof ResolvedRecursiveType) {\n            JavaType selfRef = getSelfReferencedType();\n            if (selfRef!= null) {\n                _superClass = selfRef.getSuperClass();\n            }\n        }\n        if (_superClass == null) {\n            Class<?> raw = _class.getSuperclass();\n            if (raw == null) {\n                return null;\n            }\n            // First: maybe it's cached?\n            _superClass = _typeFactory._fromClass(raw, _typeParameters, _typeFactory._unknownType(), null, null);\n        }\n    }\n    return _superClass;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}