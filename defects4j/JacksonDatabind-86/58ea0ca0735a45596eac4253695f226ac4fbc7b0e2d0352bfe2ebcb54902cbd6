{
    "generation": "public JavaType getSuperClass() {\n    if (_superClass == null) {\n        JavaType superType = _superClassType;\n        if (superType == null) {\n            superType = _class.getGenericSuperclass();\n        }\n        if (superType == null) {\n            return null;\n        }\n        if (superType instanceof ParameterizedType) {\n            _superClass = _typeFactory.constructSpecializedType(superType, _bindings);\n        } else if (superType instanceof Class) {\n            _superClass = _typeFactory.constructType(TypeFactory.rawClass((Class<?>) superType));\n        } else {\n            throw new IllegalArgumentException(\"Unsupported superclass type: \" + superType.getClass().getName());\n        }\n    }\n    return _superClass;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}