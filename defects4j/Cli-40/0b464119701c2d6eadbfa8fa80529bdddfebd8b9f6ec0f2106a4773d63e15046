{
    "generation": "public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException {\n    if (PatternOptionBuilder.STRING_VALUE == clazz) {\n        return clazz.cast(str);\n    } else if (PatternOptionBuilder.OBJECT_VALUE == clazz) {\n        return clazz.cast(createObject(str));\n    } else if (PatternOptionBuilder.NUMBER_VALUE == clazz) {\n        return clazz.cast(createNumber(str));\n    } else if (PatternOptionBuilder.DATE_VALUE == clazz) {\n        return clazz.cast(createDate(str));\n    } else if (PatternOptionBuilder.CLASS_VALUE == clazz) {\n        return clazz.cast(createClass(str));\n    } else if (PatternOptionBuilder.FILE_VALUE == clazz) {\n        return clazz.cast(createFile(str));\n    } else if (PatternOptionBuilder.EXISTING_FILE_VALUE == clazz) {\n        return clazz.cast(openFile(str));\n    } else if (PatternOptionBuilder.FILES_VALUE == clazz) {\n        return clazz.cast(createFiles(str));\n    } else if (PatternOptionBuilder.URL_VALUE == clazz) {\n        return clazz.cast(createURL(str));\n    } else {\n        throw new ParseException(\"Unsupported class type: \" + clazz.getName());\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}