{
    "generation": "public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException {\n    if (String.class.equals(clazz)) {\n        return clazz.cast(str);\n    } else if (PatternOptionBuilder.OBJECT_VALUE.equals(clazz)) {\n        return clazz.cast(createObject(str));\n    } else if (Number.class.isAssignableFrom(clazz)) {\n        return clazz.cast(createNumber(str));\n    } else if (Date.class.equals(clazz)) {\n        return clazz.cast(createDate(str));\n    } else if (Class.class.equals(clazz)) {\n        return clazz.cast(createClass(str));\n    } else if (File.class.equals(clazz)) {\n        return clazz.cast(createFile(str));\n    } else if (File.class.equals(clazz) && PatternOptionBuilder.EXISTING_FILE_VALUE.equals(clazz)) {\n        return clazz.cast(openFile(str));\n    } else if (File[].class.equals(clazz) && PatternOptionBuilder.FILES_VALUE.equals(clazz)) {\n        return clazz.cast(createFiles(str));\n    } else if (URL.class.equals(clazz)) {\n        return clazz.cast(createURL(str));\n    } else {\n        throw new ParseException(\"Unsupported type: \" + clazz.getName());\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}