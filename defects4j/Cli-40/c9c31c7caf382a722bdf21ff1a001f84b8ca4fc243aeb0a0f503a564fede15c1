{
    "generation": "@SuppressWarnings(\"unchecked\") // returned value will have type T because it is fixed by clazz\npublic static <T> T createValue(final String str, final Class<T> clazz) throws ParseException {\n    if (clazz == String.class) {\n        return (T) str;\n    } else if (Number.class.isAssignableFrom(clazz)) {\n        try {\n            Method method = clazz.getMethod(\"valueOf\", String.class);\n            return (T) method.invoke(null, str);\n        } catch (NoSuchMethodException | InvocationTargetException | IllegalAccessException | ClassCastException e) {\n            throw new ParseException(\"Cannot create \" + clazz.getName() + \" from string: \" + str, 0);\n        }\n    } else if (clazz == Date.class) {\n        return (T) createDate(str);\n    } else if (clazz == File.class) {\n        return (T) createFile(str);\n    } else if (clazz == URL.class) {\n        return (T) createURL(str);\n    } else {\n        throw new ParseException(\"Unsupported type: \" + clazz.getName(), 0);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}