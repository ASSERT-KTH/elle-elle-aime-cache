{
    "generation": "    @SuppressWarnings(\"unchecked\") // returned value will have type T because it is fixed by clazz\n    public static <T> T createValue(final String str, final Class<T> clazz) throws ParseException\n    {\n        if (String.class.equals(clazz))\n        {\n            return (T) str;\n        }\n        else if (PatternOptionBuilder.OBJECT_VALUE.equals(clazz))\n        {\n            return (T) createObject(str);\n        }\n        else if (Number.class.isAssignableFrom(clazz))\n        {\n            return (T) createNumber(str);\n        }\n        else if (Date.class.equals(clazz))\n        {\n            return (T) createDate(str);\n        }\n        else if (PatternOptionBuilder.CLASS_VALUE.equals(clazz))\n        {\n            return (T) createClass(str);\n        }\n        else if (PatternOptionBuilder.FILE_VALUE.equals(clazz))\n        {\n            return (T) createFile(str);\n        }\n        else if (PatternOptionBuilder.EXISTING_FILE_VALUE.equals(clazz))\n        {\n            return (T) openFile(str);\n        }\n        else if (PatternOptionBuilder.FILES_VALUE.equals(clazz))\n        {\n            return (T) createFiles(str);\n        }\n        else if (PatternOptionBuilder.URL_VALUE.equals(clazz))\n        {\n            return (T) createURL(str);\n        }\n        else\n        {\n            throw new ParseException(\"Unexpected type: \" + clazz.getName());\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}