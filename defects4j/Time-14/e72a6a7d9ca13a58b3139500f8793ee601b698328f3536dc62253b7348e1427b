{
    "generation": "public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    if (valueToAdd == 0) {\n        return values;\n    }\n    \n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n        \n        // Handle month addition with end-of-month adjustment\n        if (fieldIndex == 1) { // 1 is typically the month field index\n            int year = iChronology.year().get(instant);\n            int month = iChronology.monthOfYear().get(instant);\n            int day = iChronology.dayOfMonth().get(instant);\n            \n            // Calculate new month and year\n            int newMonth = month + valueToAdd;\n            int yearDiff = (newMonth - 1) / 12;\n            newMonth = ((newMonth - 1) % 12) + 1;\n            year += yearDiff;\n            \n            // Get maximum days in new month\n            int maxDay = iChronology.dayOfMonth().getMaximumValue(year, newMonth);\n            if (day > maxDay) {\n                day = maxDay;\n            }\n            \n            // Set new values\n            instant = iChronology.year().set(instant, year);\n            instant = iChronology.monthOfYear().set(instant, newMonth);\n            instant = iChronology.dayOfMonth().set(instant, day);\n            \n            return iChronology.get(partial, instant);\n        }\n        \n        instant = add(instant, valueToAdd);\n        return iChronology.get(partial, instant);\n    } else {\n        return super.add(partial, fieldIndex, values, valueToAdd);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}