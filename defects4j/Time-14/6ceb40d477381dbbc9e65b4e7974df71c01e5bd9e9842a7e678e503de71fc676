{
    "generation": "public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    if (valueToAdd == 0) {\n        return values;\n    }\n\n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n\n        instant = add(instant, valueToAdd);\n\n        // Add this block to handle leap year issues\n        int[] newValues = iChronology.get(partial, instant);\n        if (newValues[0] == 2 && newValues[1] == 29 && (newValues[partial.size() - 1] % 4 != 0 || (newValues[partial.size() - 1] % 100 == 0 && newValues[partial.size() - 1] % 400 != 0))) {\n            newValues[1] = 28;\n        }\n\n        return newValues;\n    } else {\n        return super.add(partial, fieldIndex, values, valueToAdd);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}