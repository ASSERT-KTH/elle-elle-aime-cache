{
    "generation": "public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    if (valueToAdd == 0) {\n        return values;\n    }\n\n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n        instant = add(instant, valueToAdd);\n\n        // Adjusting for leap year and month-end cases\n        int[] newValues = iChronology.get(partial, instant);\n        if (partial.getFieldType(0).getName().equals(\"monthOfYear\") && partial.getFieldType(1).getName().equals(\"dayOfMonth\")) {\n            int month = newValues[0];\n            int day = newValues[1];\n            if (day == 29 && month == 2) {\n                newValues[1] = 28;\n            }\n        }\n        return newValues;\n    } else {\n        return super.add(partial, fieldIndex, values, valueToAdd);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}