{
    "generation": "//-----------------------------------------------------------------------\npublic int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    // overridden as superclass algorithm can't handle\n    // 2004-02-29 + 48 months -> 2008-02-29 type dates\n    if (valueToAdd == 0) {\n        return values;\n    }\n    // month is largest field and being added to, such as month-day\n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n        instant = add(instant, valueToAdd);\n        return iChronology.get(partial, instant);\n    } else {\n        try {\n            return super.add(partial, fieldIndex, values, valueToAdd);\n        } catch (IllegalFieldValueException e) {\n            // Handle the case where day of month is invalid after addition\n            int[] newValues = new int[values.length];\n            for (int i = 0; i < values.length; i++) {\n                newValues[i] = values[i];\n            }\n            newValues[fieldIndex] += valueToAdd;\n            try {\n                iChronology.getDateTime(newValues); // Validate the new values\n            } catch (IllegalFieldValueException ex) {\n                // Adjust day of month to the last day of the month if out of range\n                int dayIndex = partial.getFieldType(1).getRelativeIndex();\n                int monthIndex = partial.getFieldType(0).getRelativeIndex();\n                int year = newValues[partial.getFieldType().getRelativeIndex() == 0 ? 0 : 1];\n                int month = newValues[monthIndex];\n                int day = newValues[dayIndex];\n                int maxDay = iChronology.getMonths().length(year)[month - 1];\n                if (day > maxDay) {\n                    newValues[dayIndex] = maxDay;\n                }\n            }\n            return newValues;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}