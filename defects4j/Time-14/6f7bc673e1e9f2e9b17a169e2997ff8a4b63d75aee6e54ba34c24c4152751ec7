{
    "generation": "public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    // overridden as superclass algorithm can't handle\n    // 2004-02-29 + 48 months -> 2008-02-29 type dates\n    if (valueToAdd == 0) {\n        return values;\n    }\n    // month is largest field and being added to, such as month-day\n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n        instant = add(instant, valueToAdd);\n        // Since MonthDay can't handle invalid dates, we manually adjust the date to the last day of the month.\n        int year = iChronology.year().get(instant);\n        int month = iChronology.monthOfYear().get(instant);\n        int maxDays = iChronology.dayOfMonth().getMaximumvalue(year, month);\n        int day = Math.min(values[1], maxDays);\n        instant = iChronology.dayOfMonth().set(instant, day);\n        return iChronology.get(partial, instant);\n    } else {\n        return super.add(partial, fieldIndex, values, valueToAdd);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}