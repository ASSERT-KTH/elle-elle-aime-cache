{
    "generation": "//-----------------------------------------------------------------------\npublic int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    // followup on superclass algorithm updates since it can't handle 2004-02-29 + 48 months -> 2008-02-29 type dates\n    if (valueToAdd == 0) {\n        return values;\n    }\n\n    // month is largest field and being added to, such as month-day\n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n        instant = add(instant, valueToAdd);\n        int[] result = iChronology.get(partial, instant);\n\n        // if leap year adjustment is necessary, set to end of month (February 28th)\n        if(partial.getChronology().monthOfYear().isLeap(instant) == false && result[partial.getFieldType().indexOf(DateTimeFieldType.monthOfYear())] == 2 && result[partial.getFieldType().indexOf(DateTimeFieldType.dayOfMonth())] == 29) {\n            result[partial.getFieldType().indexOf(DateTimeFieldType.dayOfMonth())] = 28;\n        }\n        return result;\n    } else {\n        return super.add(partial, fieldIndex, values, valueToAdd);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}