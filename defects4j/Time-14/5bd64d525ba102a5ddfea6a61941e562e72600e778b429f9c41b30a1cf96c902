{
    "generation": "//-----------------------------------------------------------------------\npublic int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    // overridden as superclass algorithm can't handle\n    // 2004-02-29 + 48 months -> 2008-02-29 type dates\n    if (valueToAdd == 0) {\n        return values;\n    }\n    // month is largest field and being added to, such as month-day\n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n        instant = add(instant, valueToAdd, fieldIndex); // Pass fieldIndex to handle leap year/day/month adjustments\n        return iChronology.get(partial, instant);\n    } else {\n        return adjustForLeap(super.add(partial, fieldIndex, values, valueToAdd), fieldIndex, partial, iChronology);\n    }\n}\n\n// Helper method to adjust for leap year/day/month\nprivate int[] adjustForLeap(int[] values, int fieldIndex, ReadablePartial partial, Chronology chronology) {\n    if (fieldIndex == DateTimeFieldType.MONTH_OF_YEAR.ordinal() && values[1] > 28) { // Assume day of month is at index 1\n        int daysInMonth = chronology.dayOfMonth().getMaximumValue(values);\n        if (values[1] > daysInMonth) {\n            values[1] = daysInMonth;\n        }\n    }\n    return values;\n}\n\n// Overload add method to handle leap year/day/month adjustments\nprivate long add(long instant, int valueToAdd, int fieldIndex) {\n    if (fieldIndex == DateTimeFieldType.MONTH_OF_YEAR.ordinal()) {\n        return iChronology.month().addField(instant, valueToAdd);\n    } else if (fieldIndex == DateTimeFieldType.DAY_OF_MONTH.ordinal()) {\n        return iChronology.dayOfMonth().addField(instant, valueToAdd);\n    } else {\n        return add(instant, valueToAdd); // Call original add method for other field types\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}