{
    "generation": "public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    if (valueToAdd == 0) {\n        return values;\n    }\n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            int value = values[i];\n            // handle case where day is beyond the end of the month\n            if (i == 1 && value > 28) {\n                int maxDays = iChronology.getDaysInMonth(values[0], partial.getFieldType(0).getField(iChronology));\n                value = Math.min(maxDays, value);\n            }\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, value);\n        }\n        instant = add(instant, valueToAdd);\n        return iChronology.get(partial, instant);\n    } else {\n        return super.add(partial, fieldIndex, values, valueToAdd);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}