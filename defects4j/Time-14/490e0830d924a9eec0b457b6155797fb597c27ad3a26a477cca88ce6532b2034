{
    "generation": "    //-----------------------------------------------------------------------\n    public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n        // overridden as superclass algorithm can't handle\n        // 2004-02-29 + 48 months -> 2008-02-29 type dates\n        if (valueToAdd == 0) {\n            return values;\n        }\n\n        // month is largest field and being added to, such as month-day\n        if (DateTimeUtils.isContiguous(partial)) {\n            long instant = 0L;\n            for (int i = 0, isize = partial.size(); i < isize; i++) {\n                instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n            }\n            \n            // Adjust the instant based on the field being modified\n            if (fieldIndex == 0) { // Month field\n                int monthsToAdd = valueToAdd;\n                int yearsToAdd = 0;\n                \n                // Calculate years and remaining months\n                if (monthsToAdd >= 12 || monthsToAdd <= -12) {\n                    yearsToAdd = monthsToAdd / 12;\n                    monthsToAdd = monthsToAdd % 12;\n                }\n                \n                // First add years, then months\n                instant = iChronology.years().add(instant, yearsToAdd);\n                instant = iChronology.months().add(instant, monthsToAdd);\n            } else { // Day field\n                instant = iChronology.days().add(instant, valueToAdd);\n            }\n\n            // Ensure the result is valid for MonthDay\n            int[] newValues = iChronology.get(partial, instant);\n            int dayOfMonth = newValues[1];\n            int monthOfYear = newValues[0];\n            \n            // If the result is February 29th but the new year is not a leap year, adjust to February 28th\n            if (monthOfYear == 2 && dayOfMonth == 29 && !iChronology.year().isLeap(instant)) {\n                newValues[1] = 28;\n            }\n\n            return newValues;\n        } else {\n            return super.add(partial, fieldIndex, values, valueToAdd);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}