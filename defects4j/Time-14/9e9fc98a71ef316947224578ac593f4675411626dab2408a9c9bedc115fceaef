{
    "generation": "//-----------------------------------------------------------------------\npublic int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    // overridden as superclass algorithm can't handle\n    // 2004-02-29 + 48 months -> 2008-02-29 type dates\n    if (valueToAdd == 0) {\n        return values;\n    }\n    // month is largest field and being added to, such as month-day\n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n        // Handle month/day addition to preserve last day of month if possible\n        if (fieldIndex == partial.indexOf(DateTimeFieldType.monthOfYear()) && \n            values[partial.indexOf(DateTimeFieldType.dayOfMonth())] == \n            iChronology.getMonthOfYear().getMaximumValue(partial.getFieldType(0).getField(iChronology).get(instant))) {\n            instant = handleLastDayOfMonthAddition(instant, valueToAdd, fieldIndex, partial, iChronology);\n        } else {\n            instant = add(instant, valueToAdd);\n        }\n        return iChronology.get(partial, instant);\n    } else {\n        return super.add(partial, fieldIndex, values, valueToAdd);\n    }\n}\n\n// Helper method to handle last day of month addition\nprivate long handleLastDayOfMonthAddition(long instant, int valueToAdd, int fieldIndex, ReadablePartial partial, Chronology iChronology) {\n    int monthsToAdd = valueToAdd;\n    if (fieldIndex == partial.indexOf(DateTimeFieldType.months())) {\n        monthsToAdd = valueToAdd * 12;\n    }\n    while (monthsToAdd!= 0) {\n        int monthsInCurrentYear = (11 - iChronology.getMonthOfYear().get(instant)) + 1;\n        int monthsToEndOfYear = (monthsToAdd > 0)? monthsInCurrentYear : -monthsInCurrentYear;\n        int monthsThisPeriod = (monthsToAdd > 0)? Math.min(monthsToAdd, monthsToEndOfYear) : Math.max(monthsToAdd, monthsToEndOfYear);\n        instant = iChronology.getMonthOfYear().addField(instant, monthsThisPeriod);\n        monthsToAdd -= monthsThisPeriod;\n        if (iChronology.getDayOfMonth().get(instant)!= iChronology.getMonthOfYear().getMaximumValue(instant)) {\n            // Not last day of month anymore, just add the remaining months\n            return add(instant, monthsToAdd);\n        }\n    }\n    return instant;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}