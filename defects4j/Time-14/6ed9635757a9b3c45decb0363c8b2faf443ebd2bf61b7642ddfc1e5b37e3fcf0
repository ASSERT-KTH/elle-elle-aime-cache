{
    "generation": "public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    if (valueToAdd == 0) {\n        return values;\n    }\n    \n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n        \n        // Handle leap year and month-end adjustments\n        DateTimeField field = partial.getFieldType(fieldIndex).getField(iChronology);\n        if (field.getName().equals(\"monthOfYear\")) {\n            int year = iChronology.year().get(instant);\n            int month = values[0];\n            int day = values[1];\n            \n            month += valueToAdd;\n            while (month > 12) {\n                month -= 12;\n                year++;\n            }\n            while (month < 1) {\n                month += 12;\n                year--;\n            }\n            \n            int maxDay = iChronology.dayOfMonth().getMaximumValue(year, month);\n            if (day > maxDay) {\n                day = maxDay;\n            }\n            \n            instant = iChronology.year().set(0, year);\n            instant = iChronology.monthOfYear().set(instant, month);\n            instant = iChronology.dayOfMonth().set(instant, day);\n        } else {\n            instant = field.add(instant, valueToAdd);\n        }\n        \n        return iChronology.get(partial, instant);\n    } else {\n        return super.add(partial, fieldIndex, values, valueToAdd);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}