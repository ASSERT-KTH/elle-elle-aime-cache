{
    "generation": "public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    if (valueToAdd == 0) {\n        return values;\n    }\n    \n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n        instant = add(instant, valueToAdd);\n        int[] newValues = iChronology.get(partial, instant);\n        \n        // Special handling for MonthDay to preserve day in month if possible\n        if (partial instanceof MonthDay) {\n            int originalDay = values[1];\n            int newMonth = newValues[0];\n            int maxDay = iChronology.getDaysInMonthMax(newMonth);\n            if (originalDay > maxDay) {\n                newValues[1] = maxDay;\n            } else {\n                newValues[1] = originalDay;\n            }\n        }\n        \n        return newValues;\n    } else {\n        return super.add(partial, fieldIndex, values, valueToAdd);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}