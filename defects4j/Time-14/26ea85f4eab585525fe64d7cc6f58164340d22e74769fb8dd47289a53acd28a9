{
    "generation": "    public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n        // overridden as superclass algorithm can't handle\n        // 2004-02-29 + 48 months -> 2008-02-29 type dates\n        if (valueToAdd == 0) {\n            return values;\n        }\n        // month is largest field and being added to, such as month-day\n        if (DateTimeUtils.isContiguous(partial)) {\n            int[] newValues = Arrays.copyOf(values, values.length);\n            newValues[fieldIndex] += valueToAdd;\n            // adjust for any out of range values\n            int maxMonth = partial.getChronology().get(partial).getMaximumValue(partial.getFieldType(1));\n            if (newValues[1] > maxMonth) {\n                newValues[0] += newValues[1] / (maxMonth + 1);\n                newValues[1] = (newValues[1] - 1) % maxMonth + 1;\n            }\n            while (newValues[1] <= 0) {\n                newValues[0]--;\n                newValues[1] += maxMonth;\n            }\n            return newValues;\n        } else {\n            return super.add(partial, fieldIndex, values, valueToAdd);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}