{
    "generation": "public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    if (valueToAdd == 0) {\n        return values;\n    }\n    \n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n        instant = add(instant, valueToAdd);\n        int[] newValues = iChronology.get(partial, instant);\n        \n        // Special handling for February 29th\n        if (partial.size() == 2 && partial.getFieldType(0) == DateTimeFieldType.monthOfYear() &&\n            partial.getFieldType(1) == DateTimeFieldType.dayOfMonth()) {\n            int month = newValues[0];\n            int day = newValues[1];\n            if (month == 2 && day == 28 && values[1] == 29) {\n                // If original day was 29 and new day is 28, it means we're in February\n                // and the target year is not a leap year. Keep it as 29.\n                newValues[1] = 29;\n            }\n        }\n        \n        return newValues;\n    } else {\n        return super.add(partial, fieldIndex, values, valueToAdd);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}