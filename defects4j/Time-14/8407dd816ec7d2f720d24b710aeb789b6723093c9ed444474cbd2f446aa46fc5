{
    "generation": "public int[] add(ReadablePartial partial, int fieldIndex, int[] values, int valueToAdd) {\n    // overridden as superclass algorithm can't handle\n    // 2004-02-29 + 48 months -> 2008-02-29 type dates\n    if (valueToAdd == 0) {\n        return values;\n    }\n    // month is largest field and being added to, such as month-day\n    if (DateTimeUtils.isContiguous(partial)) {\n        long instant = 0L;\n        for (int i = 0, isize = partial.size(); i < isize; i++) {\n            instant = partial.getFieldType(i).getField(iChronology).set(instant, values[i]);\n        }\n        instant = add(instant, valueToAdd);\n        \n        // Adjust the day of the month if it's invalid for the resulting month\n        int[] newValues = iChronology.get(partial, instant);\n        int dayOfMonth = newValues[1]; // Assuming day of month is the second value in the array\n        int maxDayOfMonth = iChronology.dayOfMonth().getMaximumValue(iChronology.dayOfMonth().set(instant, dayOfMonth));\n        if (dayOfMonth > maxDayOfMonth) {\n            newValues[1] = maxDayOfMonth;\n        }\n        \n        return newValues;\n    } else {\n        return super.add(partial, fieldIndex, values, valueToAdd);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}