{
    "generation": "/**\n * <p>Test if two <code>Object</code>s are equal using their\n * <code>equals</code> method.</p>\n *\n * @param lhs  the left hand object\n * @param rhs  the right hand object\n * @return EqualsBuilder - used to chain calls.\n */\npublic EqualsBuilder append(Object lhs, Object rhs) {\n    if (isEquals == false) {\n        return this;\n    }\n    if (lhs == rhs) {\n        return this;\n    }\n    if (lhs == null || rhs == null) {\n        this.setEquals(false);\n        return this;\n    }\n    if (lhs.getClass().equals(rhs.getClass())) {\n        try {\n            // The simple case, not an array, just test the element\n            isEquals = lhs.equals(rhs);\n        } catch (ClassCastException e) {\n            // Handle the case where equals method throws a ClassCastException\n            isEquals = false;\n        }\n    } else {\n        this.setEquals(false);\n    }\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}