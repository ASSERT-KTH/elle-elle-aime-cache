{
    "generation": "void read(Tokeniser t, CharacterReader r) {\n    char c = r.consume();\n    switch (c) {\n        case '>':\n            t.tagPending.selfClosing = false; // Reset selfClosing to false initially\n            t.emitTagPending();\n            t.transition(Data);\n            break;\n        case '/':\n            c = r.current(); // Check the next character\n            if (c == '>') {\n                r.advance(); // Consume the '>'\n                t.tagPending.selfClosing = true;\n                t.emitTagPending();\n                t.transition(Data);\n                break;\n            }\n            // If it's not followed by '>', treat '/' as part of the attribute\n        case eof:\n            t.eofError(this);\n            t.transition(Data);\n            break;\n        default:\n            t.error(this);\n            t.transition(BeforeAttributeName);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}