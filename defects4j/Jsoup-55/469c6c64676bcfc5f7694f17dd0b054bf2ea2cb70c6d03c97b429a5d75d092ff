{
    "generation": "        void read(Tokeniser t, CharacterReader r) {\n            char c = r.consume();\n            switch (c) {\n                case '>':\n                    t.tagPending.selfClosing = true;\n                    t.emitTagPending();\n                    t.transition(Data);\n                    break;\n                case '/':\n                    // Consume the next character and stay in this state. If it's '>', we close the tag.\n                    if (r.matches('>')) {\n                        r.consume();\n                        t.tagPending.selfClosing = true;\n                        t.emitTagPending();\n                        t.transition(Data);\n                    } else {\n                        t.error(this); // If it's not '>', report an error.\n                        t.transition(BeforeAttributeName);\n                    }\n                    break;\n                case eof:\n                    t.eofError(this);\n                    t.transition(Data);\n                    break;\n                default:\n                    t.error(this);\n                    t.transition(BeforeAttributeName);\n            }\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}