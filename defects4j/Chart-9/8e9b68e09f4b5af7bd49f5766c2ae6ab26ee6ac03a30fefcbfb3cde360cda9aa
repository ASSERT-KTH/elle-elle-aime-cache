{
    "generation": "public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)\n        throws CloneNotSupportedException {\n\n    if (start == null) {\n        throw new IllegalArgumentException(\"Null 'start' argument.\");\n    }\n    if (end == null) {\n        throw new IllegalArgumentException(\"Null 'end' argument.\");\n    }\n    if (start.compareTo(end) > 0) {\n        throw new IllegalArgumentException(\n                \"Requires start on or before end.\");\n    }\n\n    int startIndex = getIndex(start);\n    int endIndex = getIndex(end);\n\n    if (startIndex < 0) {\n        startIndex = -(startIndex + 1);  // this is first item AFTER start period\n        if (startIndex == this.data.size()) {\n            return (TimeSeries) super.clone();    // start is after last data item\n        }\n    }\n\n    if (endIndex < 0) {\n        endIndex = -(endIndex + 1);      // this is first item AFTER end period\n        endIndex = endIndex - 1;         // so this is last item BEFORE end\n        if (endIndex < 0) {\n            return (TimeSeries) super.clone();    // end is before first data item\n        }\n    }\n\n    return createCopy(startIndex, endIndex);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}