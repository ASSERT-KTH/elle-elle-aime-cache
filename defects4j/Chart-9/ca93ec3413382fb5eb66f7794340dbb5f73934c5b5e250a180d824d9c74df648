{
    "generation": "    public TimeSeries createCopy(RegularTimePeriod start, RegularTimePeriod end)\n        throws CloneNotSupportedException {\n\n        if (start == null) {\n            throw new IllegalArgumentException(\"Null 'start' argument.\");\n        }\n        if (end == null) {\n            throw new IllegalArgumentException(\"Null 'end' argument.\");\n        }\n\n        // The original precondition check was causing issues because an end date before the first data point's date \n        // and after the last date was being interpreted directly as invalid. \n        // Adjust the check to allow start and end to be out of range.\n        \n        boolean emptyRange = false;\n        int startIndex = getIndex(start);\n        if (startIndex < 0) {\n            startIndex = -(startIndex + 1);\n            if (startIndex >= this.data.size()) {\n                emptyRange = true;  // start is after last data item\n            }\n        }\n        int endIndex = getIndex(end);\n        if (endIndex < 0) {             // end period is not in original series\n            endIndex = -(endIndex + 1) - 1; // subtract 1 to move to the last item before end\n        }\n        if (endIndex < 0) {\n            emptyRange = true;  // end is before first data item\n        }\n        if (emptyRange || startIndex > endIndex) {\n            TimeSeries copy = (TimeSeries) super.clone();\n            copy.data = new java.util.ArrayList();\n            return copy;\n        }\n        else {\n            return createCopy(startIndex, endIndex);\n        }\n\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}