{
    "generation": "/**\n * Encodes {@code value}.\n *\n * @param value a numeric value. When lenient, may be {@link Double#isNaN() NaNs} or\n *     {@link Double#isInfinite() infinities}, otherwise must be finite.\n * @return this writer.\n */\npublic JsonWriter value(double value) throws IOException {\n    writeDeferredName();\n    if (!isLenient() && (Double.isNaN(value) || Double.isInfinite(value))) {\n        throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);\n    }\n    beforeValue();\n    out.append(String.valueOf(value)); // toString() is not required, valueOf() handles all cases\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}