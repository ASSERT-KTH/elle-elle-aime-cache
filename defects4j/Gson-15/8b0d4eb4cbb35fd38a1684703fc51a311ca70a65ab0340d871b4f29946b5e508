{
    "generation": "  /**\n   * Encodes {@code value}.\n   *\n   * @param value a finite value. May not be {@link Double#isNaN() NaNs} or\n   *     {@link Double#isInfinite() infinities}.\n   * @return this writer.\n   */\n  public JsonWriter value(double value) throws IOException {\n    writeDeferredName();\n    if (Double.isNaN(value) || Double.isInfinite(value)) {\n      if (!lenient) {\n        throw new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);\n      }\n      String valueString;\n      if (Double.isNaN(value)) {\n        valueString = \"NaN\";\n      } else if (value < 0) {\n        valueString = \"-Infinity\";\n      } else {\n        valueString = \"Infinity\";\n      }\n      out.append(valueString);\n    } else {\n      out.append(Double.toString(value));\n    }\n    beforeValue();\n    return this;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}