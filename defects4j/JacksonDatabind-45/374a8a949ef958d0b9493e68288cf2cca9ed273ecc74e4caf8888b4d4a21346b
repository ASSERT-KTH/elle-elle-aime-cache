{
    "generation": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers,\n        BeanProperty property) throws JsonMappingException {\n    if (property != null) {\n        JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated) property.getMember());\n        if (format != null) {\n\n            JsonFormat.Shape shape = format.getShape();\n            if (shape.isNumeric()) {\n                return withFormat(Boolean.TRUE, null);\n            } else if (shape == JsonFormat.Shape.STRING) {\n                TimeZone tz = format.getTimeZone();\n                final String pattern = format.hasPattern()\n                        ? format.getPattern()\n                        : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                final Locale loc = format.hasLocale()\n                        ? format.getLocale()\n                        : serializers.getLocale();\n                SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                if (tz == null) {\n                    tz = serializers.getTimeZone();\n                }\n                df.setTimeZone(tz);\n                return withFormat(Boolean.FALSE, df);\n            } else if (shape == JsonFormat.Shape.ANY) {\n                // Handle ANY shape based on user config or presence of pattern, locale, timezone\n                if (format.hasPattern() || format.hasLocale() || format.hasTimeZone()) {\n                    // If any of pattern, locale, or timezone is specified, treat as STRING\n                    TimeZone tz = format.getTimeZone();\n                    final String pattern = format.hasPattern()\n                            ? format.getPattern()\n                            : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                    final Locale loc = format.hasLocale()\n                            ? format.getLocale()\n                            : serializers.getLocale();\n                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                    if (tz == null) {\n                        tz = serializers.getTimeZone();\n                    }\n                    df.setTimeZone(tz);\n                    return withFormat(Boolean.FALSE, df);\n                } else {\n                    // No specific format options, fall back to user config\n                    boolean asTimestamp = serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n                    return withFormat(Boolean.valueOf(asTimestamp), null);\n                }\n            }\n        }\n    }\n    // Default behavior if no format is specified\n    boolean asTimestamp = serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);\n    return withFormat(Boolean.valueOf(asTimestamp), null);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}