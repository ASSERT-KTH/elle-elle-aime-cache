{
    "generation": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException\n{\n    if (property!= null) {\n        JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());\n        if (format!= null) {\n\n            // Simple case first: serialize as numeric timestamp?\n            JsonFormat.Shape shape = format.getShape();\n            if (shape == JsonFormat.Shape.NUMERIC) {\n                return withFormat(Boolean.TRUE, null);\n            }\n\n            if (format.getShape() == JsonFormat.Shape.STRING) {\n                TimeZone tz = format.getTimeZone();\n                final String pattern = format.hasPattern()\n                               ? format.getPattern()\n                                : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                final Locale loc = format.hasLocale()\n                               ? format.getLocale()\n                                : serializers.getLocale();\n                SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                if (tz == null) {\n                    tz = serializers.getTimeZone();\n                }\n                df.setTimeZone(tz);\n                return withFormat(Boolean.FALSE, df);\n            }\n\n            // if shape is JsonFormat.Shape.ANY, it defaults to STRING shape, \n            // regardless of user config if pattern, locale or timezone is specified\n            if (shape == JsonFormat.Shape.ANY && (format.hasPattern() || format.hasLocale() || format.getTimeZone()!= null)) {\n                final String pattern = format.hasPattern()\n                               ? format.getPattern()\n                                : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                final Locale loc = format.hasLocale()\n                               ? format.getLocale()\n                                : serializers.getLocale();\n                TimeZone tz = format.getTimeZone();\n                if (tz == null) {\n                    tz = serializers.getTimeZone();\n                }\n                SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                df.setTimeZone(tz);\n                return withFormat(Boolean.FALSE, df);\n            }\n        }\n    }\n    // if @JsonFormat is not present or shape is JsonFormat.Shape.ANY without pattern, locale or timezone,\n    // default to user config\n    return serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)\n           ? withFormat(Boolean.TRUE, null)\n            : withFormat(Boolean.FALSE, null);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}