{
    "generation": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers,\n        BeanProperty property) throws JsonMappingException\n{\n    if (property!= null) {\n        JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated)property.getMember());\n        if (format!= null) {\n            // If format has shape, use it\n            JsonFormat.Shape shape = format.getShape();\n            if (shape!= null) {\n                if (shape.isNumeric()) {\n                    return withFormat(Boolean.TRUE, null);\n                }\n                if (shape == JsonFormat.Shape.STRING) {\n                    TimeZone tz = format.getTimeZone();\n                    final String pattern = format.hasPattern()\n                                   ? format.getPattern()\n                                    : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                    final Locale loc = format.hasLocale()\n                                   ? format.getLocale()\n                                    : serializers.getLocale();\n                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                    if (tz == null) {\n                        tz = serializers.getTimeZone();\n                    }\n                    df.setTimeZone(tz);\n                    return withFormat(Boolean.FALSE, df);\n                }\n            }\n            // If format has pattern, locale, or timezone but no shape, use string shape\n            else if (format.hasPattern() || format.hasLocale() || format.getTimeZone()!= null) {\n                TimeZone tz = format.getTimeZone();\n                final String pattern = format.hasPattern()\n                               ? format.getPattern()\n                                : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                final Locale loc = format.hasLocale()\n                               ? format.getLocale()\n                                : serializers.getLocale();\n                SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                if (tz == null) {\n                    tz = serializers.getTimeZone();\n                }\n                df.setTimeZone(tz);\n                return withFormat(Boolean.FALSE, df);\n            }\n            // If format has no shape, pattern, locale, or timezone, use user config\n            else {\n                if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {\n                    return withFormat(Boolean.TRUE, null);\n                } else {\n                    final String pattern = StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                    final Locale loc = serializers.getLocale();\n                    SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                    df.setTimeZone(serializers.getTimeZone());\n                    return withFormat(Boolean.FALSE, df);\n                }\n            }\n        } else {\n            // If no format annotation, use user config\n            if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {\n                return withFormat(Boolean.TRUE, null);\n            } else {\n                final String pattern = StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                final Locale loc = serializers.getLocale();\n                SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                df.setTimeZone(serializers.getTimeZone());\n                return withFormat(Boolean.FALSE, df);\n            }\n        }\n    }\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}