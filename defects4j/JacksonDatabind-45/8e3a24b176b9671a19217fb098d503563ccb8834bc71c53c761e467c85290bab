{
    "generation": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException\n{\n    if (property != null) {\n        JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated) property.getMember());\n        if (format != null) {\n            JsonFormat.Shape shape = format.getShape();\n\n            if (shape.isNumeric()) {\n                // Serialize as numeric timestamp\n                return withFormat(Boolean.TRUE, null);\n            } else if (shape == JsonFormat.Shape.STRING || shape == JsonFormat.Shape.ANY && format.hasPattern()) {\n                TimeZone tz = format.getTimeZone();\n                final String pattern = format.hasPattern() ? format.getPattern() : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                final Locale loc = format.hasLocale() ? format.getLocale() : serializers.getLocale();\n                SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                if (tz == null) {\n                    tz = serializers.getTimeZone();\n                }\n                df.setTimeZone(tz);\n                return withFormat(Boolean.FALSE, df);\n            }\n        }\n    }\n    // Default serialization\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}