{
    "generation": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers,\n        BeanProperty property) throws JsonMappingException {\n    if (property != null) {\n        JsonFormat.Value format = serializers.getAnnotationIntrospector().findFormat((Annotated) property.getMember());\n        if (format != null) {\n            // Determine the serialization shape\n            JsonFormat.Shape shape = format.getShape();\n            if (shape.isNumeric()) {\n                // Serialize as numeric timestamp\n                return withFormat(Boolean.TRUE, null);\n            } else if (shape == JsonFormat.Shape.STRING) {\n                // Serialize as string with specified format\n                TimeZone tz = format.getTimeZone();\n                String pattern = format.hasPattern() ? format.getPattern() : StdDateFormat.DATE_FORMAT_STR_ISO8601;\n                Locale loc = format.hasLocale() ? format.getLocale() : serializers.getLocale();\n                SimpleDateFormat df = new SimpleDateFormat(pattern, loc);\n                if (tz == null) {\n                    tz = serializers.getTimeZone();\n                }\n                df.setTimeZone(tz);\n                return withFormat(Boolean.FALSE, df);\n            } else if (shape == JsonFormat.Shape.ANY) {\n                // Fall back to user configuration\n                if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {\n                    return withFormat(Boolean.TRUE, null);\n                } else {\n                    // Default to string serialization with ISO8601 format\n                    SimpleDateFormat df = new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601, serializers.getLocale());\n                    df.setTimeZone(serializers.getTimeZone());\n                    return withFormat(Boolean.FALSE, df);\n                }\n            }\n        } else {\n            // No JsonFormat annotation, use user configuration\n            if (serializers.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS)) {\n                return withFormat(Boolean.TRUE, null);\n            } else {\n                // Default to string serialization with ISO8601 format\n                SimpleDateFormat df = new SimpleDateFormat(StdDateFormat.DATE_FORMAT_STR_ISO8601, serializers.getLocale());\n                df.setTimeZone(serializers.getTimeZone());\n                return withFormat(Boolean.FALSE, df);\n            }\n        }\n    }\n    // Fallback to default behavior\n    return this;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}