{
    "generation": "    /**\n     * Creates a new timeseries by copying a subset of the data in this time\n     * series.\n     *\n     * @param start  the index of the first time period to copy.\n     * @param end  the index of the last time period to copy.\n     *\n     * @return A series containing a copy of this times series from start until\n     *         end.\n     *\n     * @throws CloneNotSupportedException if there is a cloning problem.\n     */\n    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.data = new java.util.ArrayList();\n        copy.minY = Double.NaN; // Reset minY\n        copy.maxY = Double.NaN; // Reset maxY\n        if (this.data.size() > 0) {\n            for (int index = start; index <= end; index++) {\n                TimeSeriesDataItem item\n                        = (TimeSeriesDataItem) this.data.get(index);\n                TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n                try {\n                    copy.add(clone);\n                } \n                catch (SeriesException e) {\n                    e.printStackTrace();\n                }\n\n                // Update minY and maxY for the copy\n                double yValue = clone.getValue().doubleValue();\n                if (!Double.isNaN(yValue)) {\n                    if (Double.isNaN(copy.minY) || yValue < copy.minY) {\n                        copy.minY = yValue;\n                    }\n                    if (Double.isNaN(copy.maxY) || yValue > copy.maxY) {\n                        copy.maxY = yValue;\n                    }\n                }\n            }\n        }\n        return copy;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}