{
    "generation": "    public TimeSeries createCopy(int start, int end)\n            throws CloneNotSupportedException {\n        if (start < 0) {\n            throw new IllegalArgumentException(\"Requires start >= 0.\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"Requires start <= end.\");\n        }\n        if (end >= this.data.size()) {\n            throw new IllegalArgumentException(\"End index exceeds data size.\");\n        }\n        TimeSeries copy = (TimeSeries) super.clone();\n        copy.data = new java.util.ArrayList();\n      \n        for (int index = start; index <= end; index++) {\n            TimeSeriesDataItem item = (TimeSeriesDataItem) this.data.get(index);\n            TimeSeriesDataItem clone = (TimeSeriesDataItem) item.clone();\n            try {\n                copy.add(clone);\n            } catch (SeriesException e) {\n                e.printStackTrace();\n            }\n        }\n      \n        copy.minY = Double.MAX_VALUE;\n        copy.maxY = Double.MIN_VALUE;\n        for (int index = start; index <= end; index++) {\n            Number y = ((TimeSeriesDataItem) this.data.get(index)).getValue();\n            double yy = y.doubleValue();\n            if (yy < copy.minY) {\n                copy.minY = yy;\n            }\n            if (yy > copy.maxY) {\n                copy.maxY = yy;\n            }\n        }\n      \n        return copy;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}