{
    "generation": "private boolean isInlinableObject(List<Reference> refs) {\n    boolean ret = false;\n    boolean hasMultipleAssignments = false;\n    boolean hasReassignments = false;\n    Set<String> properties = new HashSet<>();\n\n    for (Reference ref : refs) {\n        Node name = ref.getNode();\n        Node parent = ref.getParent();\n        Node gramps = ref.getGrandparent();\n\n        if (parent.isGetProp()) {\n            Preconditions.checkState(parent.getFirstChild() == name);\n            if (gramps.isCall() && gramps.getFirstChild() == parent) {\n                return false;\n            }\n            // Check for references to undefined properties\n            if (!properties.contains(parent.getString())) {\n                return false;\n            }\n            continue;\n        }\n\n        if (!isVarOrAssignExprLhs(name)) {\n            return false;\n        }\n\n        Node val = ref.getAssignedValue();\n        if (val == null) {\n            continue;\n        }\n\n        if (!val.isObjectLit()) {\n            return false;\n        }\n\n        for (Node child = val.getFirstChild(); child != null; child = child.getNext()) {\n            if (child.isGetterDef() || child.isSetterDef()) {\n                return false;\n            }\n\n            Node childVal = child.getFirstChild();\n            properties.add(child.getString());\n\n            for (Reference t : refs) {\n                Node refNode = t.getParent();\n                while (!NodeUtil.isStatementBlock(refNode)) {\n                    if (refNode == childVal) {\n                        return false;\n                    }\n                    refNode = refNode.getParent();\n                }\n            }\n        }\n\n        if (ret) {\n            hasMultipleAssignments = true;\n        }\n        ret = true;\n    }\n\n    // Check for reassignments\n    for (Reference ref : refs) {\n        Node name = ref.getNode();\n        Node parent = ref.getParent();\n        if (parent.isAssign()) {\n            Node rhs = parent.getLastChild();\n            if (!rhs.isObjectLit()) {\n                hasReassignments = true;\n                break;\n            }\n        }\n    }\n\n    return ret && !hasMultipleAssignments && !hasReassignments;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}