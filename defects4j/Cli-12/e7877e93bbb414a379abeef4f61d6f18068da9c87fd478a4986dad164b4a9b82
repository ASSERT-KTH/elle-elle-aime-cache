{
    "generation": "    protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)\n    {\n        List tokens = new ArrayList();\n\n        for (int i = 0; i < arguments.length; i++)\n        {\n            String arg = arguments[i];\n\n            if (\"--\".equals(arg))\n            {\n                tokens.add(\"--\");\n                for (i++; i < arguments.length; i++)\n                {\n                    tokens.add(arguments[i]);\n                }\n                break; // break as we've added all the remaining arguments\n            }\n            else if (\"-\".equals(arg))\n            {\n                tokens.add(\"-\");\n            }\n            else if (arg.startsWith(\"--\"))\n            {\n                int eqPos = arg.indexOf('=');\n                if (eqPos != -1) // check for \"--option=argument\" format\n                {\n                    String opt = arg.substring(0, eqPos);\n                    Option option = options.getOption(opt);\n                    if (option != null)\n                    {\n                        tokens.add(opt);\n                        tokens.add(arg.substring(eqPos + 1));\n                        continue;\n                    }\n                    else // handle \"--option=value\" where option has no corresponding short option\n                    {\n                        tokens.add(arg);\n                        continue;\n                    }\n                }\n                else // for \"--option argument\" format\n                {\n                    tokens.add(arg);\n                }\n            }\n            else if (arg.startsWith(\"-\"))\n            {\n                String opt = Util.stripLeadingHyphens(arg);\n\n                // if single letter shorthand is present\n                if (options.hasOption(opt.substring(0, 1)))\n                {\n                    tokens.add(\"-\" + opt.substring(0, 1));\n                    if (opt.length() > 1)\n                    {\n                        tokens.add(\"-\" + opt.substring(1));\n                    }\n                }\n                else // handle \"-Dproperty=value\" format\n                {\n                    int eqPos = arg.indexOf('=');\n                    if (eqPos != -1)\n                    {\n                        tokens.add(arg.substring(0, eqPos + 1)); // -D\n                        tokens.add(arg.substring(eqPos + 1)); // property=value\n                    }\n                    else\n                    {\n                        tokens.add(arg);\n                    }\n                }\n            }\n            else\n            {\n                tokens.add(arg);\n                if (stopAtNonOption)\n                {\n                    break;\n                }\n            }\n        }\n\n        return (String[]) tokens.toArray(new String[0]);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}