{
    "generation": "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption) {\n    List tokens = new ArrayList();\n\n    boolean eatTheRest = false;\n\n    for (int i = 0; i < arguments.length; i++) {\n        String arg = arguments[i];\n\n        if (\"--\".equals(arg)) {\n            eatTheRest = true;\n            tokens.add(\"--\");\n        } else if (\"-\".equals(arg)) {\n            tokens.add(\"-\");\n        } else if (arg.startsWith(\"-\")) {\n            String opt = Util.stripLeadingHyphens(arg);\n            int equalSignIndex = opt.indexOf('=');\n\n            if (equalSignIndex != -1) { // Handle option=value case\n                String optKey = opt.substring(0, equalSignIndex);\n                String optValue = opt.substring(equalSignIndex + 1);\n\n                if (options.hasOption(optKey)) {\n                    tokens.add(arg.substring(0, arg.indexOf('=') + 1)); // Preserve the option key part before \"=\"\n                    tokens.add(optValue); // Add the value as a separate token\n                } else {\n                    tokens.add(arg);\n                }\n            } else if (options.hasOption(opt)) {\n                tokens.add(arg);\n            } else {\n                if (opt.length() > 1 && options.hasOption(arg.substring(0, 2))) {\n                    // Handle special properties option (-Dproperty=value)\n                    tokens.add(arg.substring(0, 2)); // Add the option key (e.g., -D)\n                    tokens.add(arg.substring(2));   // Add the rest as value (e.g., property=value)\n                } else {\n                    eatTheRest = stopAtNonOption;\n                    tokens.add(arg);\n                }\n            }\n        } else {\n            tokens.add(arg);\n        }\n\n        if (eatTheRest) {\n            for (i++; i < arguments.length; i++) {\n                tokens.add(arguments[i]);\n            }\n        }\n    }\n\n    return (String[]) tokens.toArray(new String[tokens.size()]);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}