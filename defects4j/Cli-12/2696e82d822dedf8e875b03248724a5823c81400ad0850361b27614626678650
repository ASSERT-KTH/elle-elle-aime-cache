{
    "generation": "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption) {\n    List<String> tokens = new ArrayList<>();\n\n    for (String arg : arguments) {\n        if (arg.equals(\"--\") || arg.equals(\"-\")) {\n            tokens.add(arg);\n        } else if (arg.startsWith(\"-\")) {\n            if (arg.contains(\"=\") && (arg.startsWith(\"--\") || options.hasOption(arg.substring(0, arg.indexOf(\"=\"))))) {\n                String[] parts = arg.split(\"=\", 2);\n                tokens.add(parts[0]);\n                tokens.add(parts[1]);\n            } else {\n                String opt = arg.replaceFirst(\"-\", \"\");\n                if (options.hasOption(opt)) {\n                    tokens.add(arg);\n                } else {\n                    if (arg.length() > 2 && options.hasOption(opt.substring(0, 1))) {\n                        tokens.add(\"-\" + opt.substring(0, 1));\n                        tokens.add(opt.substring(1));\n                    } else if (stopAtNonOption) {\n                        for (int j = tokens.size() - 1; j >= 0; j--) {\n                            if (tokens.get(j).startsWith(\"-\")) {\n                                tokens.remove(j);\n                            }\n                        }\n                        tokens.add(arg);\n                    } else {\n                        tokens.add(arg);\n                    }\n                }\n            }\n        } else {\n            tokens.add(arg);\n        }\n    }\n\n    return tokens.toArray(new String[0]);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}