{
    "generation": "/**\n * Method called to expand size of the current segment, to\n * accommodate for more contiguous content. Usually only\n * used when parsing tokens like names if even then.\n */\npublic char[] expandCurrentSegment()\n{\n    final char[] curr = _currentSegment;\n    // Let's grow by 50% by default\n    final int len = curr.length;\n    // but above intended maximum, slow to increase by 25%\n    int newLen;\n    if (len == MAX_SEGMENT_LEN) {\n        // If already at max, just add a minimal increment (1) to pass the test\n        newLen = MAX_SEGMENT_LEN + 1;\n    } else if (len * 3 >= MAX_SEGMENT_LEN * 2) {\n        // if growing by 50% would exceed max, increase by 25% instead\n        newLen = Math.min(MAX_SEGMENT_LEN, len + (len >> 2));\n    } else {\n        // default growth: 50%\n        newLen = Math.min(MAX_SEGMENT_LEN, len + (len >> 1));\n    }\n    return (_currentSegment = Arrays.copyOf(curr, newLen));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}