{
    "generation": "import com.fasterxml.jackson.core.JsonFactory;\nimport com.fasterxml.jackson.core.JsonGenerator;\nimport java.io.IOException;\n\npublic class TestJsonGeneratorFeatures {\n\n    private static final JsonFactory JSON_F = new JsonFactory();\n\n    private void _testFieldNameQuotingEnabled(JsonFactory f, boolean explicitQuotes, boolean expectQuotes, String expected) throws IOException {\n        StringWriter sw = new StringWriter();\n        JsonGenerator g = f.createGenerator(sw);\n        g.writeStartObject();\n        if (explicitQuotes) {\n            g.writeFieldName(\"\\\"foo\\\"\");\n        } else {\n            g.writeFieldName(\"foo\");\n        }\n        g.writeNumber(1);\n        g.writeEndObject();\n        g.close();\n        String json = sw.toString();\n        assertEquals(expected, json);\n    }\n\n    private void assertEquals(String expected, String actual) {\n        if (!expected.equals(actual)) {\n            throw new ComparisonFailure(\"expected:<{\" + expected + \"}> but was:<{\" + actual + \"}>\", expected, actual);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}