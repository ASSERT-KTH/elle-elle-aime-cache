{
    "generation": "public static long safeMultiply(long val1, int val2) {\n    switch (val2) {\n        case 0:\n            return 0L;\n        case 1:\n            return val1;\n        case -1:\n            if (val1 == Long.MIN_VALUE) {\n                throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n            }\n            return -val1;\n        default:\n            long product = val1 * val2;\n            if (val2 > 0) {\n                if (product >= val1) {\n                    return product;\n                }\n            } else {\n                if (product <= val1) {\n                    return product;\n                }\n            }\n            throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}