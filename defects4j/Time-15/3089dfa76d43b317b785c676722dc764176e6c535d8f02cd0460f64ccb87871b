{
    "generation": "/**\n * Multiply two values throwing an exception if overflow occurs.\n * \n * @param val1 the first value (long)\n * @param val2 the second value (int)\n * @return the new total\n * @throws ArithmeticException if the value is too big or too small\n * @since 1.2\n */\npublic static long safeMultiply(long val1, int val2) {\n    if (val2 == 0) {\n        return 0L;\n    }\n    if (val2 == 1) {\n        return val1;\n    }\n    if (val2 == -1) {\n        return -val1;\n    }\n    \n    long total = val1 * val2;\n    \n    // Check for overflow by dividing the result back by val2 and seeing if it matches val1\n    if (val2 != 0 && total / val2 != val1) {\n        throw new ArithmeticException(\"Multiplication overflows a long: \" + val1 + \" * \" + val2);\n    }\n    \n    return total;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}