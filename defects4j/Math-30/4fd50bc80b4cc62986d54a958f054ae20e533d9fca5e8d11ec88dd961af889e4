{
    "generation": "\nprivate double calculateAsymptoticPValue(final double Umin,\n\n                                         final int n1,\n\n                                         final int n2)\n\n    throws ConvergenceException, MaxCountExceededException {\n\n    final int n1n2prod = n1 * n2;\n\n    final double EU = n1n2prod / 2.0;\n\n    final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;\n\n    final double z = (Umin - EU) / FastMath.sqrt(VarU);\n\n    final NormalDistribution standardNormal = new NormalDistribution(0, 1);\n\n    if (z < 0) {\n\n        return 2 * standardNormal.cumulativeProbability(z);\n\n    } else {\n\n        return 2 * (1 - standardNormal.cumulativeProbability(z));\n\n    }\n\n}\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}