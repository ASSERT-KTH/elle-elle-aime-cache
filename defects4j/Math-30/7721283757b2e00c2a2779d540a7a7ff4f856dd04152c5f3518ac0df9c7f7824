{
    "generation": "    private double calculateAsymptoticPValue(final double Umin,\n                                             final int n1,\n                                             final int n2)\n        throws ConvergenceException, MaxCountExceededException {\n\n        final int n1n2prod = n1 * n2;\n\n        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation\n        final double EU = n1n2prod / 2.0;\n        final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;\n\n        final double z = (Umin - EU) / Math.sqrt(VarU);\n\n        NormalDistribution standardNormal = new NormalDistribution(0, 1);\n\n        // Make sure that the cumulative probability is not greater than 1 due to precision errors\n        double pValue = 2 * standardNormal.cumulativeProbability(z);\n        if (pValue > 1.0) {\n            pValue = 1.0;\n        }\n\n        return pValue;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}