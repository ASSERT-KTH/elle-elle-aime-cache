{
    "generation": "    private double calculateAsymptoticPValue(final double Umin,\n                                             final int n1,\n                                             final int n2)\n        throws ConvergenceException, MaxCountExceededException {\n\n        final int n1n2prod = n1 * n2;\n\n        // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation\n        final double EU = n1n2prod / 2.0;\n        final double VarU = (n1n2prod * (n1 + n2 + 1)) / 12.0;\n\n        final double z;\n        if (VarU == 0) {\n            z = 0; // VarU being zero means all input ranks are tied, arbitrary z assignment\n        } else {\n            z = (Umin - EU) / FastMath.sqrt(VarU);\n        }\n\n        final NormalDistribution standardNormal = new NormalDistribution(0, 1);\n\n        return 2 * (1 - standardNormal.cumulativeProbability(Math.abs(z)));\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}