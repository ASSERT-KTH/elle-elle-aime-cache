{
    "generation": "import java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Map;\nimport java.io.IOException;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\n\npublic class MultiValueMap<K, V> extends AbstractMultiValuedMap<K, V> {\n    \n    public MultiValueMap() {\n        super(new HashMap<K, Collection<V>>());\n    }\n\n    //-----------------------------------------------------------------------\n    private void readObject(ObjectInputStream ois) throws IOException, ClassNotFoundException {\n        ois.defaultReadObject();\n        doReadObject(ois);\n    }\n\n    private void writeObject(ObjectOutputStream oos) throws IOException {\n        oos.defaultWriteObject();\n        doWriteObject(oos);\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    private void doReadObject(ObjectInputStream ois) throws IOException, ClassNotFoundException {\n        Object obj = ois.readObject();\n        if (obj instanceof Class == false) {\n            throw new UnsupportedOperationException(\"Class is not serializable\");\n        }\n        Class<?> clazz = (Class<?>) obj;\n        if (clazz.equals(ArrayList.class) == false) {\n            throw new UnsupportedOperationException(\"Unsupported class: \" + clazz.getName());\n        }\n        obj = ois.readObject();\n        if (obj instanceof Map == false) {\n            throw new UnsupportedOperationException(\"Map is not serializable\");\n        }\n        map = (Map<K, Collection<V>>) obj;\n    }\n\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}