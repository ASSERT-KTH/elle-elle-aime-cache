{
    "generation": "public class MultiValueMap implements Serializable {\n    private Map<K, Collection<V>> map;\n    private transient Class<? extends Collection> collectionClass;\n\n    // other methods...\n\n    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n        in.defaultReadObject();\n        Object obj = in.readObject();\n        if (obj instanceof Class<?>) {\n            Class<?> clazz = (Class<?>) obj;\n            if (safeCollectionClasses.contains(clazz)) {\n                this.collectionClass = (Class<? extends Collection>) clazz;\n            } else {\n                throw new UnsupportedOperationException(\"Unsafe collection class: \" + clazz.getName());\n            }\n        } else {\n            throw new UnsupportedOperationException(\"Expected a class but got: \" + obj);\n        }\n    }\n\n    private static final Set<Class<?>> safeCollectionClasses = new HashSet<>(Arrays.asList(\n        ArrayList.class, LinkedList.class, HashSet.class, TreeSet.class\n    ));\n\n    // other methods...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}