{
    "generation": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchLength = searchChars.length;\n    for (int i = 0; i < csLength; ) {\n        char ch = cs.charAt(i);\n        if (Character.isHighSurrogate(ch) && i + 1 < csLength) {\n            char low = cs.charAt(i + 1);\n            if (Character.isLowSurrogate(low)) {\n                // Check the supplementary character\n                for (int j = 0; j < searchLength; j++) {\n                    if (Character.isHighSurrogate(searchChars[j]) && j + 1 < searchLength) {\n                        char lowSearch = searchChars[j + 1];\n                        if (Character.isLowSurrogate(lowSearch) && Character.toCodePoint(ch, low) == Character.toCodePoint(searchChars[j], lowSearch)) {\n                            return true;\n                        }\n                    }\n                }\n                i += 2; // Move past the surrogate pair\n                continue;\n            }\n        }\n        for (int j = 0; j < searchLength; j++) {\n            if (searchChars[j] == ch) {\n                return true;\n            }\n        }\n        i++;\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}