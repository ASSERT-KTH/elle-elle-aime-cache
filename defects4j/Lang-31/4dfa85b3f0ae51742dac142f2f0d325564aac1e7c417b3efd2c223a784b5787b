{
    "generation": "    public static boolean containsAny(CharSequence cs, char[] searchChars) {\n        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n            return false;\n        }\n        int csLength = cs.length();\n        int searchLength = searchChars.length;\n        for (int i = 0; i < csLength; i++) {\n            char ch = cs.charAt(i);\n            // Check for surrogate pairs\n            if (Character.isHighSurrogate(ch)) {\n                if (i + 1 < csLength && Character.isLowSurrogate(cs.charAt(i + 1))) {\n                    int codePoint = Character.toCodePoint(ch, cs.charAt(i + 1));\n                    for (int j = 0; j < searchLength; j++) {\n                        if (codePoint == searchChars[j]) {\n                            return true;\n                        }\n                    }\n                    i++; // Skip the low surrogate\n                }\n            } else {\n                for (int j = 0; j < searchLength; j++) {\n                    if (searchChars[j] == ch) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}