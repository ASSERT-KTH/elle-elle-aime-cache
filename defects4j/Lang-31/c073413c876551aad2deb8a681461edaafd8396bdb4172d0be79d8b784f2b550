{
    "generation": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchLength = searchChars.length;\n    for (int i = 0; i < csLength; i++) {\n        char ch = cs.charAt(i);\n        // Check for supplementary character\n        if (Character.isHighSurrogate(ch) && i + 1 < csLength && Character.isLowSurrogate(cs.charAt(i + 1))) {\n            int codePoint = Character.toCodePoint(ch, cs.charAt(i + 1));\n            for (int j = 0; j < searchLength; j++) {\n                char searchChar = searchChars[j];\n                // Check if searchChars contains a supplementary character\n                if (Character.isHighSurrogate(searchChar) && j + 1 < searchLength && Character.isLowSurrogate(searchChars[j + 1])) {\n                    int searchCodePoint = Character.toCodePoint(searchChar, searchChars[j + 1]);\n                    if (searchCodePoint == codePoint) {\n                        return true;\n                    }\n                    j++; // Skip the low surrogate of the search character\n                }\n            }\n            i++; // Skip the low surrogate of the current character\n        } else {\n            for (int j = 0; j < searchLength; j++) {\n                if (searchChars[j] == ch) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}