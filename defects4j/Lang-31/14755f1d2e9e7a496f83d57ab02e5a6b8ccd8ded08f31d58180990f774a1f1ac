{
    "generation": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchLength = searchChars.length;\n    for (int i = 0; i < csLength; i++) {\n        char ch = cs.charAt(i);\n        for (int j = 0; j < searchLength; j++) {\n            if (searchChars[j] == ch) {\n                if (Character.isHighSurrogate(ch) && i + 1 < csLength) {\n                    char nextChar = cs.charAt(i + 1);\n                    if (Character.isLowSurrogate(nextChar)) {\n                        int codePoint = Character.toCodePoint(ch, nextChar);\n                        for (int k = 0; k < searchLength; k++) {\n                            if (k + 1 < searchLength && Character.isHighSurrogate(searchChars[k]) && Character.isLowSurrogate(searchChars[k + 1])) {\n                                int searchCodePoint = Character.toCodePoint(searchChars[k], searchChars[k + 1]);\n                                if (searchCodePoint == codePoint) {\n                                    return true;\n                                }\n                                k++; // Skip the next char as it's part of a surrogate pair\n                            }\n                        }\n                        i++; // Skip the next char as it's part of a surrogate pair in cs\n                    }\n                }\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}