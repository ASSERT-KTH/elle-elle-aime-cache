{
    "generation": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchLength = searchChars.length;\n    for (int i = 0; i < csLength; i++) {\n        char ch = cs.charAt(i);\n        if (Character.isHighSurrogate(ch) && i + 1 < csLength) {\n            char low = cs.charAt(i + 1);\n            if (Character.isLowSurrogate(low)) {\n                int supplementary = Character.toCodePoint(ch, low);\n                for (int j = 0; j < searchLength; j++) {\n                    if (Character.toCodePoint(searchChars[j], searchChars[j + 1]) == supplementary) {\n                        return true;\n                    }\n                }\n                i++; // Skip the second surrogate pair\n            }\n        } else {\n            for (int j = 0; j < searchLength; j++) {\n                if (searchChars[j] == ch) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}