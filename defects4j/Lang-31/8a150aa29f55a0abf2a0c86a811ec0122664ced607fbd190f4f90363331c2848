{
    "generation": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    \n    // Create a set of code points from the searchChars array\n    Set<Integer> searchCodePoints = new HashSet<>();\n    int searchLen = searchChars.length;\n    int i = 0;\n    while (i < searchLen) {\n        char ch = searchChars[i];\n        if (Character.isHighSurrogate(ch) && i + 1 < searchLen && Character.isLowSurrogate(searchChars[i + 1])) {\n            int codePoint = Character.toCodePoint(ch, searchChars[i + 1]);\n            searchCodePoints.add(codePoint);\n            i += 2;\n        } else {\n            int codePoint = Character.codePointValue(ch);\n            searchCodePoints.add(codePoint);\n            i += 1;\n        }\n    }\n    \n    // Iterate over the code points in the CharSequence and check for any match in the search set\n    int csLen = cs.length();\n    int index = 0;\n    while (index < csLen) {\n        int codePoint = cs.codePointAt(index);\n        if (searchCodePoints.contains(codePoint)) {\n            return true;\n        }\n        index += Character.charCount(codePoint);\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}