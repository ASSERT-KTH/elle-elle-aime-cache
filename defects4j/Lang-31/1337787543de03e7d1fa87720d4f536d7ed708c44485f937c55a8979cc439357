{
    "generation": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchLength = searchChars.length;\n    outer:\n    for (int i = 0; i < csLength; i++) {\n        char ch = cs.charAt(i);\n        if (Character.isHighSurrogate(ch)) {\n            if (++i < csLength) {\n                char ch2 = cs.charAt(i);\n                if (Character.isLowSurrogate(ch2)) {\n                    for (int j = 0; j < searchLength; j++) {\n                        if (ch == searchChars[j] && i + 1 < csLength && ch2 == cs.charAt(i + 1)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        } else {\n            for (int j = 0; j < searchLength; j++) {\n                if (ch == searchChars[j]) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}