{
    "generation": "/**\n * <p>Checks if the CharSequence contains any character in the given\n * set of characters.</p>\n *\n * <p>A <code>null</code> CharSequence will return <code>false</code>.\n * A <code>null</code> or zero length search array will return <code>false</code>.</p>\n *\n * <pre>\n * StringUtils.containsAny(null, *)                = false\n * StringUtils.containsAny(\"\", *)                  = false\n * StringUtils.containsAny(*, null)                = false\n * StringUtils.containsAny(*, [])                  = false\n * StringUtils.containsAny(\"zzabyycdxx\",['z','a']) = true\n * StringUtils.containsAny(\"zzabyycdxx\",['b','y']) = true\n * StringUtils.containsAny(\"aba\", ['z'])           = false\n * </pre>\n *\n * @param cs  the CharSequence to check, may be null\n * @param searchChars  the chars to search for, may be null\n * @return the <code>true</code> if any of the chars are found,\n * <code>false</code> if no match or null input\n * @since 2.4\n */\npublic static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchLength = searchChars.length;\n    for (int i = 0; i < csLength; i++) {\n        int ch = cs.charAt(i);\n        // Check if current character is a supplementary character\n        if (Character.isHighSurrogate((char) ch) && i + 1 < csLength) {\n            char lowSurrogate = cs.charAt(i + 1);\n            if (Character.isLowSurrogate(lowSurrogate)) {\n                // Combine the high and low surrogates\n                ch = Character.toCodePoint((char) ch, lowSurrogate);\n                // Skip the low surrogate in the iteration\n                i++;\n            }\n        }\n        for (int j = 0; j < searchLength; j++) {\n            int searchCh = searchChars[j];\n            // Similarly, handle supplementary characters in the search array\n            if (Character.isHighSurrogate((char) searchCh) && j + 1 < searchLength) {\n                char lowSurrogate = searchChars[j + 1];\n                if (Character.isLowSurrogate(lowSurrogate)) {\n                    // Combine the high and low surrogates\n                    searchCh = Character.toCodePoint((char) searchCh, lowSurrogate);\n                    // Continue the loop to avoid skipping the combined character\n                    j++;\n                }\n            }\n            if (searchCh == ch) {\n                return true;\n            }\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}