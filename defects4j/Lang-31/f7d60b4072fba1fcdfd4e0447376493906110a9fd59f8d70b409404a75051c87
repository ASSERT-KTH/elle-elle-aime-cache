{
    "generation": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchLength = searchChars.length;\n    for (int i = 0; i < csLength; i++) {\n        char ch = cs.charAt(i);\n        if (Character.isSupplementaryCodePoint(ch)) {\n            if (containsSupplementaryCodePoint(cs, searchChars, i)) {\n                return true;\n            }\n            i++; // Skip the second part of the supplementary code point\n        } else {\n            for (int j = 0; j < searchLength; j++) {\n                if (searchChars[j] == ch) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\n// Helper method to check for supplementary code points\nprivate static boolean containsSupplementaryCodePoint(CharSequence cs, char[] searchChars, int index) {\n    int codePoint = Character.codePointAt(cs, index);\n    for (char searchChar : searchChars) {\n        int searchCodePoint = searchChar;\n        if (Character.isSupplementaryCodePoint(searchCodePoint) && codePoint == Character.codePointAt(String.valueOf(searchChar), 0)) {\n            return true;\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}