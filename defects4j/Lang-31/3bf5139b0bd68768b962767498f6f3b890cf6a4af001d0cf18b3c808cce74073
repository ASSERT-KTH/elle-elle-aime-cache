{
    "generation": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchLength = searchChars.length;\n    for (int i = 0; i < csLength; i++) {\n        char ch = cs.charAt(i);\n        // Check if it's a high surrogate\n        if (Character.isHighSurrogate(ch) && i + 1 < csLength) {\n            char nextCh = cs.charAt(i + 1);\n            if (Character.isLowSurrogate(nextCh)) {\n                // Form the supplementary character\n                int codePoint = Character.toCodePoint(ch, nextCh);\n                // Check if the supplementary character is in the search array\n                for (int j = 0; j < searchLength; j++) {\n                    if (Character.isHighSurrogate(searchChars[j]) && j + 1 < searchLength) {\n                        int searchCodePoint = Character.toCodePoint(searchChars[j], searchChars[j + 1]);\n                        if (searchCodePoint == codePoint) {\n                            return true;\n                        }\n                        j++; // Skip the low surrogate\n                    }\n                }\n                i++; // Skip the low surrogate\n            }\n        } else {\n            // Normal character check\n            for (int j = 0; j < searchLength; j++) {\n                if (searchChars[j] == ch) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}