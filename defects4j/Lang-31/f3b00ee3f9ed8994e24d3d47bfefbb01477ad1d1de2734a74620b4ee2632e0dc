{
    "generation": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\n    if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n        return false;\n    }\n    int csLength = cs.length();\n    int searchLength = searchChars.length;\n    for (int i = 0; i < csLength; i++) {\n        char ch = cs.charAt(i);\n        if (Character.isHighSurrogate(ch)) {\n            if (i + 1 < csLength) {\n                char ch2 = cs.charAt(i + 1);\n                if (Character.isLowSurrogate(ch2)) {\n                    i++;\n                    int codePoint = Character.toCodePoint(ch, ch2);\n                    for (int j = 0; j < searchLength; j++) {\n                        int codePoint2;\n                        if (Character.isHighSurrogate(searchChars[j])) {\n                            if (j + 1 < searchLength) {\n                                if (Character.isLowSurrogate(searchChars[j + 1])) {\n                                    codePoint2 = Character.toCodePoint(searchChars[j], searchChars[j + 1]);\n                                    if (codePoint == codePoint2) {\n                                        return true;\n                                    }\n                                }\n                            }\n                        } else {\n                            codePoint2 = searchChars[j];\n                            if (codePoint == codePoint2) {\n                                return true;\n                            }\n                        }\n                    }\n                }\n            }\n        } else {\n            for (int j = 0; j < searchLength; j++) {\n                if (searchChars[j] == ch) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}