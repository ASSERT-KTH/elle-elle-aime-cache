{
    "generation": "public List getValues(final Option option,\n                      List defaultValues) {\n    // initialize the return list\n    List valueList = (List) values.get(option);\n\n    // grab the correct default values\n    if ((valueList == null) || valueList.isEmpty()) {\n        valueList = defaultValues;\n    }\n\n    // augment the list with the default values\n    if (valueList == null) {\n        valueList = new ArrayList();\n    }\n    List defaultValueList = (List) this.defaultValues.get(option);\n    if (defaultValueList!= null &&!defaultValueList.isEmpty()) {\n        int minValues = option.getArgument().getMinimum();\n        while (valueList.size() < minValues && defaultValueList.size() > 0) {\n            valueList.add(defaultValueList.remove(0));\n        }\n    }\n\n    return valueList.isEmpty()? Collections.EMPTY_LIST : valueList;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}