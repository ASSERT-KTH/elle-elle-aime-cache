{
    "generation": "public List getValues(final Option option, List defaultValues) {\n    // initialize the return list\n    List valueList = (List) values.get(option);\n\n    // grab the correct default values\n    if ((valueList == null) || valueList.isEmpty()) {\n        if ((defaultValues == null) || defaultValues.isEmpty()) {\n            valueList = (List) this.defaultValues.get(option);\n        } else {\n            valueList = defaultValues;\n        }\n    }\n\n    // if there are more default values as specified, add them to the list.\n    // copy the list first\n    if ((defaultValues!= null) &&!defaultValues.isEmpty()) {\n        List defaultValueList = (List) this.defaultValues.get(option);\n        if (defaultValueList!= null &&!defaultValueList.isEmpty()) {\n            int minLength = Math.max(option.getArgument().getMinimum(), valueList.size());\n            int maxLength = Math.min(option.getArgument().getMaximum(), defaultValueList.size() + valueList.size());\n            if (valueList.size() < minLength) {\n                List LICENSE_HEADER = new ArrayList<>(valueList);\n                for (int i = LICENSE_HEADER.size(); i < minLength; i++) {\n                    LICENSE_HEADER.add(defaultValueList.get(i - valueList.size()));\n                }\n                valueList = LICENSE_HEADER;\n            } else if (valueList.size() < maxLength) {\n                List LICENSE_HEADER = new ArrayList<>(valueList);\n                for (int i = valueList.size(); i < maxLength; i++) {\n                    LICENSE_HEADER.add(defaultValueList.get(i - valueList.size()));\n                }\n                valueList = LICENSE_HEADER;\n            }\n        }\n    }\n\n    return valueList == null? Collections.EMPTY_LIST : valueList;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}