{
    "generation": "    public List getValues(final Option option,\n                          List defaultValues) {\n        // initialize the return list\n        List valueList = (List) values.get(option);\n\n        // grab the correct default values\n        if ((valueList == null) || valueList.isEmpty()) {\n            valueList = defaultValues;\n        }\n\n        // augment the list with the default values\n        if (valueList!= null) {\n            List defaultOptionValues = (List) this.defaultValues.get(option);\n            if (defaultOptionValues!= null &&!defaultOptionValues.isEmpty()) {\n                // Make a copy of the value list before adding default option values\n                valueList = new ArrayList(valueList);\n                int minimumToCopy = Math.min(option.getArgument().getMaximum(), \n                        valueList.size() + defaultOptionValues.size()) - valueList.size();\n                for (int i = 0; i < minimumToCopy && i < defaultOptionValues.size(); i++) {\n                    valueList.add(defaultOptionValues.get(i));\n                }\n            }\n        } else {\n            valueList = (List) this.defaultValues.get(option);\n        }\n\n        return valueList == null? Collections.EMPTY_LIST : valueList;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}