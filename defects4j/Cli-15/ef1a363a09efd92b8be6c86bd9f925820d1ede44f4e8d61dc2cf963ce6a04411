{
    "generation": "public List getValues(final Option option, List defaultValues) {\n    // initialize the return list\n    List valueList = (List) values.get(option);\n\n    // grab the correct default values\n    if ((valueList == null) || valueList.isEmpty()) {\n        valueList = defaultValues;\n    }\n\n    // augment the list with the default values\n    List defaultValueList = (List) this.defaultValues.get(option);\n    if (defaultValueList!= null &&!defaultValueList.isEmpty()) {\n        if (valueList == null) {\n            valueList = new ArrayList();\n        }\n        int numDefaultsToAdd = Math.min(defaultValueList.size(), option.getArgument().getMaximum() - valueList.size());\n        for (int i = 0; i < numDefaultsToAdd; i++) {\n            valueList.add(defaultValueList.get(i));\n        }\n    }\n\n    return valueList == null? Collections.EMPTY_LIST : valueList;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}