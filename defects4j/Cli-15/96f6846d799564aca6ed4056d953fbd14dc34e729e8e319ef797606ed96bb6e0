{
    "generation": "    public List getValues(final Option option, List defaultValues) {\n        // initialize the return list\n        List valueList = (List) values.get(option);\n\n        // if no values are provided in the command line, utilize default values\n        if ((valueList == null) || valueList.isEmpty()) {\n            if (defaultValues != null && !defaultValues.isEmpty()) {\n                valueList = new ArrayList(defaultValues);\n            } else {\n                valueList = (List) this.defaultValues.get(option);\n            }\n        } else {\n            // augment with the default values if there are unused default values\n            List optionDefaultValues = (List) this.defaultValues.get(option);\n            if (optionDefaultValues != null && !optionDefaultValues.isEmpty()) {\n                for (Object defaultValue : optionDefaultValues) {\n                    if (!valueList.contains(defaultValue)) {\n                        valueList.add(defaultValue);\n                    }\n                }\n            }\n        }\n\n        return valueList == null ? Collections.EMPTY_LIST : valueList;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}