{
    "generation": "    public List getValues(final Option option,\n                          List defaultValues) {\n        // initialize the return list\n        List valueList = (List) values.get(option);\n\n        // grab the correct default values\n        if ((valueList == null) || valueList.isEmpty()) {\n            valueList = new ArrayList(defaultValues);\n        }\n\n        // augment the list with the default values from this.defaultValues\n        if ((valueList == null) || valueList.isEmpty()) {\n            valueList = (List) this.defaultValues.get(option);\n        }\n\n        // if there are more default values as specified, add them to the list.\n        if (valueList != null && this.defaultValues.containsKey(option)) {\n            List additionalDefaults = (List) this.defaultValues.get(option);\n            for (Object defaultValue : additionalDefaults) {\n                if (!valueList.contains(defaultValue)) {\n                    valueList.add(defaultValue);\n                }\n            }\n        }\n\n        // return an empty list if valueList is still null, otherwise return the valueList\n        return valueList == null ? Collections.EMPTY_LIST : valueList;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}