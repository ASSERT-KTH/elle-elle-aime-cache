{
    "generation": "    public List getValues(final Option option,\n                          List defaultValues) {\n        // initialize the return list\n        List valueList = (List) values.get(option);\n\n        // if valueList is null, initialize it as a new LinkedList\n        if (valueList == null) {\n            valueList = new LinkedList();\n        }\n\n        // augment the list with the provided defaultValues if there is room\n        if ((valueList.size() < option.getArgument().getMaximum()) && defaultValues != null) {\n            valueList.addAll(defaultValues);\n        }\n\n        // augment the list with the default values from this.defaultValues if there is room\n        List optionDefaultValues = (List) this.defaultValues.get(option);\n        if ((valueList.size() < option.getArgument().getMaximum()) && optionDefaultValues != null) {\n            valueList.addAll(optionDefaultValues);\n        }\n\n        // return the value list, ensuring it's not null\n        return valueList.isEmpty() ? Collections.EMPTY_LIST : valueList;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}