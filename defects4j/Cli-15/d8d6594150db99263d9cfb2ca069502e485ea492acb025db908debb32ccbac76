{
    "generation": "    public List getValues(final Option option, List defaultValues) {\n        // initialize the return list\n        List valueList = (List) values.get(option);\n\n        // grab the correct default values\n        if (valueList == null || valueList.isEmpty()) {\n            valueList = new ArrayList(defaultValues);\n        }\n\n        // augment the list with the default values\n        if (valueList.isEmpty()) {\n            // default to the option-specific default values if present\n            List optionDefaultValues = (List) this.defaultValues.get(option);\n            if (optionDefaultValues != null) {\n                valueList.addAll(optionDefaultValues);\n            }\n        }\n\n        // if there are more default values as specified, add them to the list\n        else if (valueList.size() < option.getArgument().getMaximum()) {\n            // copy the list first\n            List optionDefaultValues = (List) this.defaultValues.get(option);\n            if (optionDefaultValues != null) {\n                for (Object o : optionDefaultValues) {\n                    if (valueList.size() < option.getArgument().getMaximum()) {\n                        valueList.add(o);\n                    } else {\n                        break;\n                    }\n                }\n            }\n        }\n        \n        return valueList == null ? Collections.EMPTY_LIST : valueList;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}