{
    "generation": "public List getValues(final Option option, List defaultValues) {\n    // initialize the return list\n    List valueList = (List) values.get(option);\n\n    // grab the correct default values\n    if ((valueList == null) || valueList.isEmpty()) {\n        valueList = defaultValues;\n    }\n\n    // augment the list with the default values\n    if ((valueList == null) || valueList.isEmpty()) {\n        valueList = (List) this.defaultValues.get(option);\n    } else if ((List) this.defaultValues.get(option)!= null) {\n        List defaultValueList = (List) this.defaultValues.get(option);\n        int maxArguments = option.getArgument().getMaximum();\n        while (valueList.size() < maxArguments &&!defaultValueList.isEmpty()) {\n            valueList.add(defaultValueList.remove(0));\n        }\n    }\n\n    // if there are more default values as specified, add them to the list.\n    // copy the list first\n\n    return valueList == null? Collections.EMPTY_LIST : valueList;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}