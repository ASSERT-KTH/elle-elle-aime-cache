{
    "generation": "public List getValues(final Option option, List defaultValues) {\n    // initialize the return list\n    List valueList = (List) values.get(option);\n\n    // grab the correct default values\n    if (valueList == null || valueList.isEmpty()) {\n        valueList = new ArrayList(defaultValues);\n    }\n\n    // if there are more default values specified, add them to the list\n    if (valueList.size() < defaultValues.size()) {\n        valueList.addAll(defaultValues.subList(valueList.size(), defaultValues.size()));\n    }\n\n    // also consider default values from the option itself\n    if (valueList == null || valueList.isEmpty()) {\n        valueList = new ArrayList((List) this.defaultValues.get(option));\n    } else {\n        List optionDefaults = (List) this.defaultValues.get(option);\n        if (optionDefaults != null) {\n            valueList.addAll(optionDefaults.subList(valueList.size(), optionDefaults.size()));\n        }\n    }\n\n    return valueList == null ? Collections.EMPTY_LIST : valueList;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}