{
    "generation": "    public List getValues(final Option option,\n                          List defaultValues) {\n        // initialize the return list\n        List valueList = (List) values.get(option);\n\n        // grab the correct default values\n        if ((valueList == null) || valueList.isEmpty()) {\n            valueList = defaultValues;\n        }\n\n        // augment the list with the default values\n        if ((valueList == null) || valueList.isEmpty()) {\n            valueList = (List) this.defaultValues.get(option);\n        }\n\n        // if there are more default values as specified, add them to the list\n        if (valueList != null && defaultValues != null) {\n            valueList = new ArrayList<>(valueList); // copy the list first\n            int requiredSize = option.getArgument().getMaximum();\n            while (valueList.size() < requiredSize && !defaultValues.isEmpty()) {\n                valueList.add(defaultValues.remove(0));\n            }\n        }\n\n        return valueList == null ? Collections.EMPTY_LIST : valueList;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}