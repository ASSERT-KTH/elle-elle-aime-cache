{
    "generation": "public List getValues(final Option option, List defaultValues) {\n    // initialize the return list\n    List valueList = (List) values.get(option);\n\n    // if no values are provided, use the default values\n    if ((valueList == null) || valueList.isEmpty()) {\n        valueList = defaultValues;\n    }\n\n    // if still no values, use the default values from this instance\n    if ((valueList == null) || valueList.isEmpty()) {\n        valueList = (List) this.defaultValues.get(option);\n    }\n\n    // if there are more default values than provided values, append them\n    if (valueList != null && defaultValues != null && valueList.size() < defaultValues.size()) {\n        List augmentedList = new ArrayList(valueList);\n        for (int i = valueList.size(); i < defaultValues.size(); i++) {\n            augmentedList.add(defaultValues.get(i));\n        }\n        valueList = augmentedList;\n    }\n\n    return valueList == null ? Collections.EMPTY_LIST : valueList;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}