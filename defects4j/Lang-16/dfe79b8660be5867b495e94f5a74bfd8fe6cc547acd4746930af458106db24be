{
    "generation": "    public static Number createNumber(String str) throws NumberFormatException {\n        if (str == null) {\n            return null;\n        }\n        if (StringUtils.isBlank(str)) {\n            throw new NumberFormatException(\"A blank string is not a valid number\");\n        }\n        if (str.startsWith(\"--\")) {\n            return null;\n        }\n        if (str.toLowerCase().startsWith(\"0x\") || str.toLowerCase().startsWith(\"-0x\")) {\n            return Integer.decode(str);\n        }\n        char lastChar = str.charAt(str.length() - 1);\n        String numberString = null;\n        if (!Character.isDigit(lastChar)) {\n            numberString = str.substring(0, str.length() - 1);\n            switch (lastChar) {\n                case 'l' :\n                case 'L' :\n                    try {\n                        return createLong(numberString);\n                    } catch (NumberFormatException nfe) {\n                        return createBigInteger(numberString);\n                    }\n                case 'f' :\n                case 'F' :\n                    return createFloat(numberString);\n                case 'd' :\n                case 'D' :\n                    return createDouble(numberString);\n                default :\n                    throw new NumberFormatException(str + \" is not a valid number.\");\n            }\n        } else {\n            numberString = str;\n        }\n        try {\n            return createInteger(numberString);\n        } catch (NumberFormatException nfe) {\n            try {\n                return createLong(numberString);\n            } catch (NumberFormatException nfe2) {\n                try {\n                    return createBigInteger(numberString);\n                } catch (NumberFormatException nfe3) {\n                    try {\n                        return createFloat(numberString);\n                    } catch (NumberFormatException nfe4) {\n                        try {\n                            return createDouble(numberString);\n                        } catch (NumberFormatException nfe5) {\n                            return createBigDecimal(numberString);\n                        }\n                    }\n                }\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}