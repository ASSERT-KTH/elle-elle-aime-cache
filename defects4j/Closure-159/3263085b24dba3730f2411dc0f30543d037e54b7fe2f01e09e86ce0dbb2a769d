{
    "generation": "private void findCalledFunctions(Node node, Set<String> changed) {\n    Preconditions.checkArgument(changed != null);\n    // For each referenced function, add a new reference\n    if (node.getType() == Token.CALL) {\n        Node callee = node.getFirstChild();\n        if (callee.getType() == Token.GETPROP) {\n            Node functionName = callee.getLastChild();\n            if (functionName.getType() == Token.STRING) {\n                changed.add(functionName.getString());\n            }\n        } else if (callee.getType() == Token.NAME) {\n            changed.add(callee.getString());\n        }\n    }\n\n    for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {\n        findCalledFunctions(c, changed);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}