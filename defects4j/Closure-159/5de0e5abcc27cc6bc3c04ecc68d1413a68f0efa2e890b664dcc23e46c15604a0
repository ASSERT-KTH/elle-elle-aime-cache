{
    "generation": "private void findCalledFunctions(\n      Node node, Set<String> changed) {\n    Preconditions.checkArgument(changed != null);\n    // For each referenced function, add a new reference\n    if (node.getType() == Token.CALL) {\n      Node functionName = getFunctionNameNode(node);\n      if (functionName != null) {\n        changed.add(functionName.getString());\n      }\n    }\n\n    for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {\n      findCalledFunctions(c, changed);\n    }\n  }\n\n  private Node getFunctionNameNode(Node node) {\n    Node child = node.getFirstChild();\n    if (child.getType() == Token.NAME && child.getParent().getType() != Token.GETPROP) {\n      return child;\n    }\n    if (child.getType() == Token.GETPROP) {\n      return child.getLastChild();\n    }\n    return null;\n  }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}