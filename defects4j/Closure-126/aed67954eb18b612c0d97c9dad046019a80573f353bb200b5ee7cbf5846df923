{
    "generation": "void tryMinimizeExits(Node n, int exitType, String labelName) {\n\n    // More code...\n\n    if (n.isTry()) {\n        Node tryBlock = NodeUtil.getTryBlock(n);\n        tryMinimizeExits(tryBlock, exitType, labelName);\n        Node allCatchNodes = NodeUtil.getCatchBlock(n);\n        Node finallyBlock = NodeUtil.getFinallyBlock(n);\n\n        if (NodeUtil.hasCatchHandler(allCatchNodes)) {\n            Preconditions.checkState(allCatchNodes.hasOneChild());\n            Node catchNode = allCatchNodes.getFirstChild();\n            Node catchCodeBlock = getLastChildWithType(catchNode, Token.BLOCK);\n            if (catchCodeBlock != null) {\n                tryMinimizeExits(catchCodeBlock, exitType, labelName);\n            }\n        }\n\n        /*\n         * Do minimize the exits of finally blocks because it will not\n         * change the completion type of the finally block.\n         */\n        if (finallyBlock != null) {\n            tryMinimizeExits(finallyBlock, exitType, labelName);\n        }\n    }\n\n    // More code...\n\n    // The rest assumes a block with at least one child, bail on anything else.\n    if (!n.isBlock() || !n.hasChildren()) {\n        return;\n    }\n\n    // Multiple if-exits can be converted in a single pass.\n    // Convert \"if (blah) return;  if (blah2) return; finallyBlock;}\" to\n    // become \"if (blah); else { if (blah2); else { finallyBlock; } }\"\n    for (List<Node> children = n.children(); !children.isEmpty();) {\n\n        // An 'if' block to process below.\n        Node child = children.get(0);\n        if (child.isIf()) {\n            Node ifTree = child;\n            Node trueBlock = getTrueBranch(ifTree);\n            Node falseBlock = getFalseBranch(ifTree);\n\n            if (falseBlock != null) {\n                tryMinimizeIfBlockExits(trueBlock, falseBlock, ifTree, exitType, labelName);\n                tryMinimizeIfBlockExits(falseBlock, trueBlock, ifTree, exitType, labelName);\n            }\n        }\n\n        // Recheck the children since they might have been updated during minimization.\n        if (n.getLastChild() == child) {\n            break;\n        }\n    }\n\n    // More code...\n}\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}