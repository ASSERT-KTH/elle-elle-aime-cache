{
    "generation": "...\nwhile (t == JsonToken.FIELD_NAME) {\n    String propName = p.getCurrentName();\n    // creator property?\n    SettableBeanProperty creatorProp = creator.findCreatorProperty(propName);\n    if (creatorProp != null) {\n        p.nextToken(); // to point to value\n        if (buffer.assignParameter(creatorProp,\n                _deserializeWithErrorWrapping(p, ctxt, creatorProp))) {\n            // All creator properties are handled, now we need to build the bean\n            Object bean;\n            try {\n                bean = creator.build(ctxt, buffer);\n            } catch (Exception e) {\n                bean = wrapInstantiationProblem(e, ctxt);\n            }\n            // Assign current value, before processing remaining properties\n            p.setCurrentValue(bean);\n\n            t = p.nextToken(); // to move to following FIELD_NAME/END_OBJECT\n            // We need to write remaining fields into tokens to be processed later\n            tokens.writeStartObject();\n            while (t == JsonToken.FIELD_NAME) {\n                tokens.copyCurrentStructure(p);\n                t = p.nextToken(); // move to value\n                t = p.nextToken(); // move to next FIELD_NAME or END_OBJECT\n            }\n            tokens.writeEndObject();\n\n            if (bean.getClass() != _beanType.getRawClass()) {\n                ctxt.reportInputMismatch(creatorProp,\n                        \"Cannot create polymorphic instances with unwrapped values\");\n                return null;\n            }\n            return _unwrappedPropertyHandler.processUnwrapped(p, ctxt, bean, tokens);\n        }\n    } else {\n        // If it's not a creator property, then proceed as before\n        p.nextToken(); // to point to value\n        // Object Id property?\n        if (buffer.readIdProperty(propName)) {\n            continue;\n        }\n        // regular property? needs buffering\n        SettableBeanProperty prop = _beanProperties.find(propName);\n        if (prop != null) {\n            buffer.bufferProperty(prop, _deserializeWithErrorWrapping(p, ctxt, prop));\n            continue;\n        }\n        // Ignorable properties and any setter handling\n        // ...\n    }\n}\n...",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}