{
    "generation": "private void traverse(Node node) {\n    // The goal here is to avoid retraversing\n    // the entire AST to catch newly created opportunities.\n    // So we track whether a \"unit of code\" has changed,\n    // and revisit immediately.\n    if (!shouldVisit(node)) {\n        return;\n    }\n\n    int visits = 0;\n    Node current = node;\n    do {\n        Node c = current.getFirstChild();\n        while(c!= null) {\n            traverse(c);\n            c = c.getNext();\n        }\n\n        visit(current);\n        visits++;\n\n        Preconditions.checkState(visits < 10000, \"too many iterations\");\n        current = node;\n    } while (shouldRetraverse(node));\n\n    exitNode(node);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}