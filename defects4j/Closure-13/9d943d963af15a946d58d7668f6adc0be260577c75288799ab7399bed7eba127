{
    "generation": "private void traverse(Node node) {\n    // The goal here is to avoid retraversing\n    // the entire AST to catch newly created opportunities.\n    // So we track whether a \"unit of code\" has changed,\n    // and revisit immediately.\n    if (!shouldVisit(node)) {\n      return;\n    }\n\n    boolean hasChanges;\n    do {\n      hasChanges = false;\n\n      Node c = node.getFirstChild();\n      while(c!= null) {\n        traverse(c);\n        Node next = c.getNext();\n        c = next;\n      }\n\n      if (visit(node)) {\n        hasChanges = true;\n      }\n    } while (hasChanges || shouldRetraverse(node));\n\n    exitNode(node);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}