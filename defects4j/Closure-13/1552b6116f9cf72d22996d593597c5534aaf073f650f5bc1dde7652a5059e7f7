{
    "generation": "private void traverse(Node node) {\n  if (!shouldVisit(node)) {\n    return;\n  }\n\n  int visits = 0;\n  do {\n    // Visit the node before traversing children\n    visit(node);\n    visits++;\n\n    // Traverse children\n    Node c = node.getFirstChild();\n    while(c != null) {\n      traverse(c);\n      Node next = c.getNext();\n      c = next;\n    }\n\n    Preconditions.checkState(visits < 10000, \"too many iterations\");\n\n    // Check if we need to revisit the node\n  } while (shouldRetraverse(node));\n\n  exitNode(node);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}