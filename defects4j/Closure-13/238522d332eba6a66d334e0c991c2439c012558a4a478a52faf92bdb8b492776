{
    "generation": "private void traverse(Node node) {\n    if (!shouldVisit(node)) {\n        return;\n    }\n\n    int visits = 0;\n    boolean shouldRevisit;\n    do {\n        Node c = node.getFirstChild();\n        while (c != null) {\n            traverse(c);\n            c = c.getNext();\n        }\n\n        visit(node);\n        visits++;\n        \n        if (visits >= 10000) {\n            throw new IllegalStateException(\"too many iterations\");\n        }\n        \n        shouldRevisit = shouldRetraverse(node);\n    } while (shouldRevisit);\n\n    exitNode(node);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}