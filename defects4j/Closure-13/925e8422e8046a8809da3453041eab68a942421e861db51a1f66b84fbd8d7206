{
    "generation": "private void traverse(Node node) {\n    // The goal here is to avoid retraversing\n    // the entire AST to catch newly created opportunities.\n    // So we track whether a \"unit of code\" has changed,\n    // and revisit immediately.\n    if (!shouldVisit(node)) {\n        return;\n    }\n\n    boolean retraverse;\n    do {\n        retraverse = false;\n        Node c = node.getFirstChild();\n        while (c != null) {\n            Node next = c.getNext();\n            traverse(c);\n            if (shouldRetraverse(node)) {\n                retraverse = true;\n                break;\n            }\n            c = next;\n        }\n\n        if (!retraverse) {\n            visit(node);\n            retraverse = shouldRetraverse(node);\n        }\n    } while (retraverse);\n\n    exitNode(node);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}