{
    "generation": "private void traverse(Node node) {\n    if (!shouldVisit(node)) {\n        return;\n    }\n\n    int visits = 0;\n    do {\n        // Visit all children of the current node\n        Node child = node.getFirstChild();\n        while (child != null) {\n            traverse(child);\n            child = child.getNext();\n        }\n\n        // Visit the current node\n        visit(node);\n        visits++;\n\n        // Prevent infinite loops\n        Preconditions.checkState(visits < 10000, \"Too many iterations for node: \" + node);\n    } while (shouldRetraverse(node));\n\n    exitNode(node);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}