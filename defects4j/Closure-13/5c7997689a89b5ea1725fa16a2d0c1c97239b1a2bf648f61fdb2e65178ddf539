{
    "generation": "private void traverse(Node node) {\n  if (!shouldVisit(node)) {\n    return;\n  }\n\n  int visits = 0;\n  do {\n    // Make a list of children to traverse\n    List<Node> children = new ArrayList<>();\n    for (Node c = node.getFirstChild(); c != null; c = c.getNext()) {\n      children.add(c);\n    }\n\n    // Traverse each child\n    for (Node c : children) {\n      traverse(c);\n    }\n\n    // Visit the node after traversing its children\n    visit(node);\n    visits++;\n\n    Preconditions.checkState(visits < 10000, \"too many iterations\");\n  } while (shouldRetraverse(node));\n\n  exitNode(node);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}