{
    "generation": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    \n    if (str.charAt(0) == '_') {\n        // Handle strings starting with an underscore\n        if (len < 3) {\n            throw new IllegalArgumentException(\"Must be at least 3 chars if starts with underscore: \" + str);\n        }\n        // Extract country code\n        int countryStart = 1;\n        int countryEnd = 3;\n        if (len < 5 || str.charAt(3) != '_') {\n            // No variant, country code is from index 1 to 3\n            String country = str.substring(countryStart, countryEnd);\n            if (!country.equals(country.toUpperCase())) {\n                throw new IllegalArgumentException(\"Country code must be uppercase: \" + str);\n            }\n            return new Locale(\"\", country);\n        } else {\n            // Variant is present\n            int variantStart = 4;\n            String country = str.substring(countryStart, countryEnd);\n            if (!country.equals(country.toUpperCase())) {\n                throw new IllegalArgumentException(\"Country code must be uppercase: \" + str);\n            }\n            String variant = str.substring(variantStart);\n            return new Locale(\"\", country, variant);\n        }\n    } else {\n        // Original logic for strings not starting with underscore\n        final char ch0 = str.charAt(0);\n        final char ch1 = str.charAt(1);\n        if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 2) {\n            return new Locale(str);\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch3 = str.charAt(3);\n        if (ch3 == '_') {\n            return new Locale(str.substring(0, 2), \"\", str.substring(4));\n        }\n        final char ch4 = str.charAt(4);\n        if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (len == 5) {\n            return new Locale(str.substring(0, 2), str.substring(3, 5));\n        }\n        if (len < 7) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(5) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}