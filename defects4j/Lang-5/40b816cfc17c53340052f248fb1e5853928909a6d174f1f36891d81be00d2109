{
    "generation": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    final int len = str.length();\n    if (len < 3) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    final boolean startsWithUnderscore = str.charAt(0) == '_';\n    final int startIdx = startsWithUnderscore ? 1 : 0;\n    final char ch0 = str.charAt(startIdx);\n    final char ch1 = str.charAt(startIdx + 1);\n    if ((startsWithUnderscore && !Character.isUpperCase(ch0)) || (!startsWithUnderscore && !Character.isLowerCase(ch0)) || !Character.isLowerCase(ch1)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (startsWithUnderscore && len == 3) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (startsWithUnderscore && str.charAt(startIdx + 2) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (startsWithUnderscore && len == 4) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (str.charAt(startIdx + 2) == '_') {\n        return new Locale(\"\", str.substring(startIdx, startIdx + 2), str.substring(startIdx + 3));\n    }\n    final char ch3 = str.charAt(startIdx + 2);\n    if (!Character.isUpperCase(ch3)) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (len == 5) {\n        return new Locale(\"\", str.substring(startIdx, startIdx + 2), str.substring(startIdx + 3));\n    }\n    if (len < 7) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    if (str.charAt(startIdx + 3) != '_') {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n    return new Locale(\"\", str.substring(startIdx, startIdx + 2), str.substring(startIdx + 4));\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}