{
    "generation": "public static Locale toLocale(final String str) {\n    if (str == null) {\n        return null;\n    }\n    final int len = str.length();\n    if (len < 2) {\n        throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n    }\n\n    String language = \"\";\n    String country = \"\";\n    String variant = \"\";\n\n    if (str.charAt(0) == '_') {\n        // Handle strings starting with underscore\n        if (len < 4) {\n            throw new IllegalArgumentException(\"Must be at least 4 chars if starts with underscore: \" + str);\n        }\n        country = str.substring(1, 3);\n        if (!Character.isUpperCase(country.charAt(0)) || !Character.isUpperCase(country.charAt(1))) {\n            throw new IllegalArgumentException(\"Country code must be uppercase letters if starts with underscore: \" + str);\n        }\n        if (len >= 5) {\n            if (str.charAt(3) != '_') {\n                throw new IllegalArgumentException(\"Must have underscore after country if starts with underscore and is at least 5 chars: \" + str);\n            }\n            variant = str.substring(4);\n            // Validate variant characters\n            for (int i = 4; i < len; i++) {\n                char ch = str.charAt(i);\n                if (!Character.isLetterOrDigit(ch) && ch != '_') {\n                    throw new IllegalArgumentException(\"Invalid character in variant part: \" + str);\n                }\n            }\n        }\n        // Else, variant is empty\n    } else {\n        // Handle normal locale strings\n        final char ch0 = str.charAt(0);\n        final char ch1 = str.charAt(1);\n        if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        language = str.substring(0, 2);\n        if (len == 2) {\n            return new Locale(language);\n        }\n        if (len < 5) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(2) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        final char ch3 = str.charAt(3);\n        final char ch4 = str.charAt(4);\n        if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        country = str.substring(3, 5);\n        if (len == 5) {\n            return new Locale(language, country);\n        }\n        if (len < 7) {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        if (str.charAt(5) != '_') {\n            throw new IllegalArgumentException(\"Invalid locale format: \" + str);\n        }\n        variant = str.substring(6);\n    }\n\n    return new Locale(language, country, variant);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}