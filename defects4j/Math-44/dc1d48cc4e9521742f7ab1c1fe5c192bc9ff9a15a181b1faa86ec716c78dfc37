{
    "generation": "// Check whether the step just before event occurs should be included\nfinal double threshold = MathUtils.maxRelative(e, maxCheckIncrement);\nfinal double t1Excluded = eventTime - threshold;\nfinal double t2Excluded = eventTime + threshold;\nfinal int n1Excluded = indexOfPreviousEvent(t1Excluded);\nif (n1Excluded < 0 || time[n1Excluded] <= e) if (n1Excluded < 0 || time[n1Excluded] < eventTime) {\n    // Insert an event at the given time (or change its index)\n    removeEvent(n1Excluded); // Removes this previous duplicate if any\n    time[n1Excluded] = eventTime;\n    addEvent(n1Excluded);\n    return;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}