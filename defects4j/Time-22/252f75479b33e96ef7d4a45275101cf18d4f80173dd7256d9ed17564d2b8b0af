{
    "generation": "/**\n * Creates a period from the given millisecond duration with the standard period type\n * and ISO rules, ensuring that the calculation is performed with the time-only period type.\n * <p>\n * The calculation uses the hour, minute, second and millisecond fields.\n *\n * @param duration  the duration, in milliseconds\n */\nprotected BasePeriod(long duration) {\n    this(duration, PeriodType.standard(), null);\n    // ISO has no daylight saving rules, so the cutover zone can be applied before or after.\n    // The problem here is that the new constructor calls the existing one and still applies\n    // the cutover to the \"standard\" duration, before normalizing it.\n    // But normalizing the duration causes it to change its time zoneillac millis,\n    // to account for DST rules from the cutover zone. If the cutover occurs in DST,\n    // then this causes the millis to effectively end up in standard zone millis.\n    // We correct this by converting to the cutover zone only once we have established\n    // the precise duration in a fixed, non-cutover, zone.\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}