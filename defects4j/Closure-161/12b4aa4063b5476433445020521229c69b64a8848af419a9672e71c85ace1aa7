{
    "generation": "private Node tryFoldArrayAccess(Node n, Node left, Node right) {\n  Node parent = n.getParent();\n\n  if (right.getType() != Token.NUMBER) {\n    return n;\n  }\n\n  double index = right.getDouble();\n  int intIndex = (int) index;\n  if (intIndex != index) {\n    error(INVALID_GETELEM_INDEX_ERROR, right);\n    return n;\n  }\n\n  if (intIndex < 0) {\n    error(INDEX_OUT_OF_BOUNDS_ERROR, right);\n    return n;\n  }\n\n  Node elem = left.getFirstChild();\n  int i;\n  for (i = 0; elem != null && i < intIndex; i++) {\n    elem = elem.getNext();\n  }\n\n  if (elem == null) {\n    // If the index is out of bounds, replace the GETELEM with an EMPTY node instead of returning\n    elem = NodeUtil.newUndefinedNode(right);\n    n.getParent().replaceChild(n, elem);\n    reportCodeChange();\n    return elem;\n  }\n\n  if (elem.getType() == Token.EMPTY) {\n    elem = NodeUtil.newUndefinedNode(elem);\n  } else {\n    left.removeChild(elem);\n  }\n\n  // Replace the entire GETELEM with the value\n  n.getParent().replaceChild(n, elem);\n  reportCodeChange();\n  return elem;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}