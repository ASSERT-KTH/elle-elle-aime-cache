{
    "generation": "    /**\n     * Render the specified text and return the rendered Options\n     * in a StringBuffer.\n     *\n     * @param sb The StringBuffer to place the rendered text into.\n     * @param width The number of characters to display per line\n     * @param nextLineTabStop The position on the next line for the first tab.\n     * @param text The text to be rendered.\n     *\n     * @return the StringBuffer with the rendered Options contents.\n     */\n    protected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                             int nextLineTabStop, String text)\n    {\n        final String padding = createPadding(nextLineTabStop);\n        int startPos = 0;\n\n        while (startPos < text.length()) {\n            int endPos = findWrapPos(text, width, startPos);\n            if (endPos == -1) {\n                endPos = text.length();\n            }\n            sb.append(rtrim(text.substring(startPos, endPos))).append(defaultNewLine);\n            startPos = endPos;\n            if (startPos < text.length()) {\n                sb.append(padding);\n            }\n        }\n\n        return sb;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}