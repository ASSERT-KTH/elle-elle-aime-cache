{
    "generation": "/**\n * Render the specified text and return the rendered Options\n * in a StringBuffer.\n *\n * @param sb The StringBuffer to place the rendered text into.\n * @param width The number of characters to display per line\n * @param nextLineTabStop The position on the next line for the first tab.\n * @param text The text to be rendered.\n *\n * @return the StringBuffer with the rendered Options contents.\n */\nprotected StringBuffer renderWrappedText(StringBuffer sb, int width, \n                                         int nextLineTabStop, String text)\n{\n    int pos = findWrapPos(text, width, 0);\n\n    if (pos == -1)\n    {\n        sb.append(rtrim(text));\n\n        return sb;\n    }\n    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n    // all following lines must be padded with nextLineTabStop space \n    // characters\n    final String padding = createPadding(nextLineTabStop);\n\n    while (true)\n    {\n        int lastPos = pos;\n        // Avoid infinite loop by truncating excessively long text\n        if (text.length() - pos < width) {\n            sb.append(padding).append(rtrim(text.substring(pos)));\n\n            return sb;\n        }\n        text = padding + text.substring(pos).trim();\n        pos = findWrapPos(text, width - nextLineTabStop, 0); // adjust width to account for padding\n\n        if (pos == -1)\n        {\n            sb.append(text);\n\n            return sb;\n        } else if (pos == lastPos)\n        {\n            // Truncate excessively long text to avoid infinite loop\n            sb.append(text.substring(0, width - nextLineTabStop)); // truncate to fit line width\n            sb.append(defaultNewLine);\n\n            // If there's still text left, render the remainder\n            if (text.length() > width - nextLineTabStop) {\n                renderWrappedText(sb, width, nextLineTabStop, text.substring(width - nextLineTabStop));\n            }\n\n            return sb;\n        }\n\n        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}