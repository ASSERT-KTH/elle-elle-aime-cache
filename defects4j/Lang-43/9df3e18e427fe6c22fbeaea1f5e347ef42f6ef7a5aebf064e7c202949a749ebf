{
    "generation": "    private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n            StringBuffer appendTo, boolean escapingOn) {\n        int start = pos.getIndex();\n        char[] c = pattern.toCharArray();\n        \n        if (appendTo == null) {\n            appendTo = new StringBuffer();\n        }\n        \n        int lastHold = start;\n        while (pos.getIndex() < pattern.length()) {\n            int i = pos.getIndex();\n            \n            if (escapingOn && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {\n                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);\n                pos.setIndex(i + ESCAPED_QUOTE.length());\n                lastHold = pos.getIndex();\n                continue;\n            }\n            \n            switch (c[i]) {\n            case QUOTE:\n                next(pos);\n                appendTo.append(c, lastHold, i - lastHold);\n                return appendTo;\n            default:\n                next(pos);\n            }\n        }\n\n        throw new IllegalArgumentException(\n                \"Unterminated quoted string at position \" + start);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}