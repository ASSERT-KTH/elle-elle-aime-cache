{
    "generation": "    private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n            StringBuffer appendTo, boolean escapingOn) {\n        int start = pos.getIndex();\n        char[] c = pattern.toCharArray();\n        int lastHold = start;\n        boolean inQuote = false;\n        \n        for (int i = pos.getIndex(); i < pattern.length(); i++) {\n            if (escapingOn && i < pattern.length() - 1 && c[i] == QUOTE && c[i + 1] == QUOTE) {\n                // Escaped quote\n                if (appendTo != null) {\n                    appendTo.append(c, lastHold, i - lastHold);\n                    appendTo.append(QUOTE);\n                }\n                i++; // Skip the escaped quote\n                lastHold = i + 1;\n                continue;\n            }\n            \n            if (c[i] == QUOTE) {\n                // Toggle quote state\n                inQuote = !inQuote;\n                if (!inQuote) {\n                    // Append the quoted content (if appendTo is provided)\n                    if (appendTo != null) {\n                        appendTo.append(c, lastHold, i - lastHold);\n                    }\n                    pos.setIndex(i + 1);\n                    return appendTo;\n                }\n                // Update lastHold after entering quote\n                lastHold = i + 1;\n            }\n        }\n        \n        throw new IllegalArgumentException(\n                \"Unterminated quoted string at position \" + start);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}