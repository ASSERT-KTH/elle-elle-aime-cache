{
    "generation": "private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n                                        StringBuffer appendTo, boolean escapingOn) {\n    int start = pos.getIndex();\n    char[] c = pattern.toCharArray();\n    int len = pattern.length();\n    boolean inQuote = false;\n\n    if (escapingOn && c[start] == QUOTE) {\n        inQuote = true;\n        pos.setIndex(start + 1);\n    }\n\n    int lastHold = pos.getIndex();\n\n    for (int i = pos.getIndex(); i < len; i++) {\n        if (escapingOn && i < len - 1 && pattern.substring(i, i + 2).equals(ESCAPED_QUOTE)) {\n            if (appendTo != null) {\n                appendTo.append(c, lastHold, i - lastHold).append(QUOTE);\n            }\n            pos.setIndex(i + ESCAPED_QUOTE.length());\n            lastHold = pos.getIndex();\n            i = pos.getIndex() - 1; // adjust loop index\n            continue;\n        }\n        if (c[i] == QUOTE) {\n            if (inQuote) {\n                if (appendTo != null) {\n                    appendTo.append(c, lastHold, i - lastHold);\n                }\n                pos.setIndex(i + 1);\n                return appendTo;\n            } else {\n                inQuote = true;\n                pos.setIndex(i + 1);\n                lastHold = pos.getIndex();\n            }\n        }\n    }\n\n    throw new IllegalArgumentException(\"Unterminated quoted string at position \" + start);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}