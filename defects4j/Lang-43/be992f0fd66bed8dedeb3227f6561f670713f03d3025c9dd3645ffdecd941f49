{
    "generation": "private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n        StringBuffer appendTo, boolean escapingOn) {\n    int start = pos.getIndex();\n    char[] c = pattern.toCharArray();\n    int len = pattern.length();\n\n    // Ensure we start with a quote\n    if (escapingOn && c[start] == QUOTE) {\n        pos.setIndex(start + 1);\n        if (appendTo != null) {\n            appendTo.append(QUOTE);\n        }\n    } else {\n        throw new IllegalArgumentException(\"Expected quoted string at position \" + start);\n    }\n\n    int lastHold = pos.getIndex();\n    for (int i = pos.getIndex(); i < len; i = pos.getIndex()) {\n        if (escapingOn && i + ESCAPED_QUOTE.length() <= len\n                && pattern.startsWith(ESCAPED_QUOTE, i)) {\n            // Append characters before the escaped quote\n            if (appendTo != null) {\n                appendTo.append(c, lastHold, i - lastHold);\n            }\n            // Append the quote represented by the escaped sequence\n            appendTo.append(QUOTE);\n            // Skip past the escaped quote\n            pos.setIndex(i + ESCAPED_QUOTE.length());\n            lastHold = pos.getIndex();\n            continue;\n        }\n\n        if (c[i] == QUOTE) {\n            // Found an unescaped quote, end of the quoted string\n            if (appendTo != null) {\n                appendTo.append(c, lastHold, i - lastHold);\n            }\n            pos.setIndex(i + 1);\n            return appendTo;\n        }\n        next(pos);\n    }\n\n    throw new IllegalArgumentException(\"Unterminated quoted string at position \" + start);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}