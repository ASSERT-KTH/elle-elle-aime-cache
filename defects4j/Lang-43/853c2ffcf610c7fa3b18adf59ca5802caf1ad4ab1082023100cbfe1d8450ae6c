{
    "generation": "    private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n            StringBuffer appendTo, boolean escapingOn) {\n        int start = pos.getIndex();\n        char[] c = pattern.toCharArray();\n        int lastHold = start;\n\n        for (int i = start; i < pattern.length(); i++) {\n            pos.setIndex(i);\n            if (escapingOn && pattern.startsWith(ESCAPED_QUOTE, i)) {\n                // Process escaped quote\n                if (appendTo != null) {\n                    appendTo.append(c, lastHold, i - lastHold).append(QUOTE);\n                }\n                i += ESCAPED_QUOTE.length() - 1; // Move index past escaped quote\n                lastHold = i + 1;\n            } else {\n                if (c[i] == QUOTE) {\n                    // Handle end of quoted string\n                    if (appendTo != null) {\n                        appendTo.append(c, lastHold, i - lastHold);\n                    }\n                    pos.setIndex(i + 1); // Move past closing quote\n                    return appendTo;\n                }\n            }\n        }\n\n        throw new IllegalArgumentException(\n                \"Unterminated quoted string at position \" + start);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}