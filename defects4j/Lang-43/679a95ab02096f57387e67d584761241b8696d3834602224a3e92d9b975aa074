{
    "generation": "private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n        StringBuffer appendTo, boolean escapingOn) {\n    int start = pos.getIndex();\n    char[] c = pattern.toCharArray();\n    if (escapingOn && c[start] == QUOTE) {\n        if (appendTo != null) {\n            appendTo.append(QUOTE);\n        }\n        pos.setIndex(start + 1); // move past the initial quote\n    }\n    int lastHold = pos.getIndex();\n    while (pos.getIndex() < pattern.length()) {\n        if (escapingOn && pattern.substring(pos.getIndex()).startsWith(ESCAPED_QUOTE)) {\n            if (appendTo != null) {\n                appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(QUOTE);\n            }\n            pos.setIndex(pos.getIndex() + ESCAPED_QUOTE.length());\n            lastHold = pos.getIndex();\n        } else if (c[pos.getIndex()] == QUOTE) {\n            if (appendTo != null) {\n                appendTo.append(c, lastHold, pos.getIndex() - lastHold);\n            }\n            pos.setIndex(pos.getIndex() + 1); // move past the closing quote\n            return appendTo;\n        } else {\n            pos.setIndex(pos.getIndex() + 1);\n        }\n    }\n    throw new IllegalArgumentException(\n            \"Unterminated quoted string at position \" + start);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}