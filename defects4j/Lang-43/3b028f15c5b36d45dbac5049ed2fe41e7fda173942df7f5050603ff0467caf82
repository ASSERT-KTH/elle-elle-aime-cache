{
    "generation": "    private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n            StringBuffer appendTo, boolean escapingOn) {\n        int start = pos.getIndex();\n        char[] c = pattern.toCharArray();\n        int lastHold = start;\n\n        for (int i = start; i < pattern.length(); i++) {\n            if (escapingOn && i < pattern.length() - 1 && pattern.substring(i).startsWith(ESCAPED_QUOTE)) {\n                if (appendTo != null) {\n                    appendTo.append(c, lastHold, i - lastHold).append(QUOTE);\n                }\n                i += ESCAPED_QUOTE.length() - 1; // move past escaped quote\n                lastHold = i + 1;\n                pos.setIndex(lastHold);\n                continue;\n            }\n\n            switch (c[i]) {\n            case QUOTE:\n                pos.setIndex(i + 1);\n                if (appendTo != null) {\n                    appendTo.append(c, lastHold, i - lastHold);\n                }\n                return appendTo;\n            default:\n                pos.setIndex(i + 1);\n            }\n        }\n        throw new IllegalArgumentException(\n                \"Unterminated quoted string at position \" + start);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}