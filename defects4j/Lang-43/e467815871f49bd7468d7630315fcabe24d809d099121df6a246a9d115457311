{
    "generation": "    /**\n     * Consume a quoted string, adding it to <code>appendTo</code> if\n     * specified.\n     * \n     * @param pattern pattern to parse\n     * @param pos current parse position\n     * @param appendTo optional StringBuffer to append\n     * @param escapingOn whether to process escaped quotes\n     * @return <code>appendTo</code>\n     */\n    private StringBuffer appendQuotedString(String pattern, ParsePosition pos,\n            StringBuffer appendTo, boolean escapingOn) {\n        int start = pos.getIndex();\n        char[] c = pattern.toCharArray();\n        if (c[start] != QUOTE) {\n            throw new IllegalArgumentException(\"Quoted string must start with a quote at position \" + start);\n        }\n        next(pos); // Move past the starting quote\n        int lastHold = pos.getIndex();\n        boolean insideQuote = true;\n\n        while (pos.getIndex() < pattern.length()) {\n            char currentChar = c[pos.getIndex()];\n\n            if (escapingOn && pattern.startsWith(ESCAPED_QUOTE, pos.getIndex())) {\n                if (appendTo != null) {\n                    appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(QUOTE);\n                }\n                next(pos, ESCAPED_QUOTE.length());\n                lastHold = pos.getIndex();\n                continue;\n            } else if (currentChar == QUOTE) {\n                next(pos); // Move past the closing quote\n                if (pos.getIndex() < pattern.length() && c[pos.getIndex()] == QUOTE) {\n                    // Handle doubled quote (escaped quote)\n                    if (appendTo != null) {\n                        appendTo.append(c, lastHold, pos.getIndex() - lastHold).append(QUOTE);\n                    }\n                    next(pos); // Move past the escaped quote\n                    lastHold = pos.getIndex();\n                } else {\n                    insideQuote = false;\n                    break;\n                }\n            } else {\n                next(pos);\n            }\n        }\n\n        if (insideQuote) {\n            throw new IllegalArgumentException(\"Unterminated quoted string at position \" + start);\n        }\n\n        if (appendTo != null) {\n            appendTo.append(c, lastHold, pos.getIndex() - lastHold);\n        }\n        return appendTo;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}