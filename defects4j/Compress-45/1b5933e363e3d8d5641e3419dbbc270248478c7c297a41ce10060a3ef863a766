{
    "generation": "public static int formatLongOctalOrBinaryBytes(final long value, final byte[] buf, final int offset, final int length) {\n    // Check whether we are dealing with UID/GID or SIZE field\n    final long maxAsOctalChar = length == TarConstants.UIDLEN ? TarConstants.MAXID : TarConstants.MAXSIZE;\n\n    final boolean negative = value < 0;\n\n    // The number of bytes required for the Long.MAX_VALUE in binary format is 9 bytes.\n    // Thus, the buffer length should be at least 10 (9 for the binary string + 1 for the null terminator).\n    if(length < 10) {\n        throw new IllegalArgumentException(\"Buffer is too small to contain Long.MAX_VALUE in binary format.\");\n    }\n\n    if (!negative && value <= maxAsOctalChar) { // OK to store as octal chars\n        return formatLongOctalBytes(value, buf, offset, length);\n    }\n\n    formatLongBinary(value, buf, offset, length, negative);\n\n    buf[offset] = (byte) (negative ? 0xff : 0x80);\n    return offset + length;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}