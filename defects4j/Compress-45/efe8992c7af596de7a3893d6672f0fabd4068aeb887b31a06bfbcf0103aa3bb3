{
    "generation": "public static int formatLongOctalOrBinaryBytes(\n    final long value, final byte[] buf, final int offset, final int length) {\n\n    final long maxAsOctalChar = length != TarConstants.UIDLEN ? TarConstants.MAXSIZE : TarConstants.MAXID;\n\n    final boolean negative = value < 0;\n    if (!negative && value <= maxAsOctalChar) { // OK to store as octal chars\n        return formatLongOctalBytes(value, buf, offset, length);\n    }\n\n    if (length < 9) {\n        throw new IllegalArgumentException(\"Number does not fit into the buffer.\");\n    }\n    formatBigIntegerBinary(value, buf, offset, length, negative);\n\n    buf[offset] = (byte) (negative ? 0xff : 0x80);\n    return offset + length;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}