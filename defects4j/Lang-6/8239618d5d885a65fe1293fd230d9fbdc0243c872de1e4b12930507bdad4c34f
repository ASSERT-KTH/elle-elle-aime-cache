{
    "generation": "public final void translate(CharSequence input, Writer out) throws IOException {\n    if (out == null) {\n        throw new IllegalArgumentException(\"The Writer must not be null\");\n    }\n    if (input == null) {\n        return;\n    }\n    int pos = 0;\n    int len = input.length();\n    while (pos < len) {\n        int consumed = translate(input.subSequence(pos, len), 0, out);\n        if (consumed == 0) {\n            char c = input.charAt(pos);\n            out.write(c);\n            pos++;\n            continue;\n        } else if (Character.isHighSurrogate(input.charAt(pos))\n                   && pos < len - 1\n                   && Character.isLowSurrogate(input.charAt(pos + 1))) {\n            // If the character is a high surrogate and the next character is a low surrogate, write both as a single unit\n            out.write(Character.toChars(Character.codePointAt(input, pos)));\n            pos += 2;\n        } else {\n            pos += consumed;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}