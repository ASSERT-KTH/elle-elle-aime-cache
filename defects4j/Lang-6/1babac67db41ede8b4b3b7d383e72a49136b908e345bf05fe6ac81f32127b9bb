{
    "generation": "    public final void translate(CharSequence input, Writer out) throws IOException {\n        if (out == null) {\n            throw new IllegalArgumentException(\"The Writer must not be null\");\n        }\n        if (input == null) {\n            return;\n        }\n        int pos = 0;\n        int len = input.length();\n        while (pos < len) {\n            int consumed = translate(input, pos, out);\n            if (consumed == 0) {\n                int codePoint = Character.codePointAt(input, pos);\n                char[] c = Character.toChars(codePoint);\n                out.write(c);\n                pos += c.length;\n                continue;\n            }\n            // Ensure the consumed count is processed properly and correctly advances the position\n            for (int pt = 0; pt < consumed; ) {\n                int codePoint = Character.codePointAt(input, pos);\n                pt += Character.charCount(codePoint); // Increment by the number of characters in the code point\n                pos += Character.charCount(codePoint); // Increment position in the input based on code point size\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}