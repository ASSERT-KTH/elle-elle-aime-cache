{
    "generation": "    public final void translate(CharSequence input, Writer out) throws IOException {\n        if (out == null) {\n            throw new IllegalArgumentException(\"The Writer must not be null\");\n        }\n        if (input == null) {\n            return;\n        }\n        int pos = 0;\n        int len = input.length();\n        while (pos < len) {\n            int consumed = translate(input, pos, out);\n            if (consumed == 0) {\n                // Handle surrogate pairs correctly\n                int codePoint = Character.codePointAt(input, pos);\n                char[] chars = Character.toChars(codePoint);\n                out.write(chars, 0, chars.length);\n                pos += chars.length;\n            } else {\n                // Contract with translators is that they have to understand codepoints\n                // and they just took care of a surrogate pair\n                pos += consumed;\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}