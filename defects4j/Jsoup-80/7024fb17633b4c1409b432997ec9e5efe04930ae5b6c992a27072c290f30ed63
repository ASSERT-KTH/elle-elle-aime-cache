{
    "generation": "void insert(Token.Comment commentToken) {\n    Comment comment = new Comment(commentToken.getData());\n    Node insert = comment;\n    if (commentToken.bogus) { // xml declarations are emitted as bogus comments (which is right for html, but not xml)\n        String data = comment.getData();\n        if (data.startsWith \"<?xml\") && data.endsWith(\"?>\")) {\n            Attributes attributes = new Attributes();\n            String content = data.substring(5, data.length() - 2).trim();\n            Matcher m = Pattern.compile(\"(\\\\w+)\\\\s*=\\\\s*([\\\"'])(.*?)(?<=\\\\2)\").matcher(content);\n            while (m.find()) {\n                String name = m.group(1);\n                String value = m.group(3);\n                attributes.put(name, value);\n            }\n            // Handle any unquoted attributes if necessary\n            insert = new XmlDeclaration(\"xml\", false);\n            insert.attributes().addAll(attributes);\n        } else if (data.length() > 1 && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {\n            Document doc = Jsoup.parse(\"<\" + data.substring(1, data.length() -1) + \">\", baseUri, Parser.xmlParser());\n            Element el = doc.child(0);\n            if (el != null) {\n                insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));\n                insert.attributes().addAll(el.attributes());\n            }\n        }\n    }\n    insertNode(insert);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}