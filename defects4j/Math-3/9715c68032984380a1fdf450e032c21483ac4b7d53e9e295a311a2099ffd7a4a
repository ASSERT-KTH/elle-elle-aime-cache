{
    "generation": "public static double linearCombination(final double[] a, final double[] b)\n    throws DimensionMismatchException {\n    if (a == null || b == null) {\n        throw new DimensionMismatchException(a == null ? -1 : a.length, b == null ? -1 : b.length);\n    }\n\n    final int len = a.length;\n    if (len != b.length) {\n        throw new DimensionMismatchException(len, b.length);\n    }\n\n    final double[] prodHigh = new double[len];\n    double prodLowSum = 0;\n\n    for (int i = 0; i < len; i++) {\n        // Rest of the for loop code.\n    }\n\n    final double prodHighCur = prodHigh[0];\n    double prodHighNext;\n    double sHighPrev = prodHighCur;\n    double sLowSum = 0;\n\n    for (int i = 1; i < len; i++) {\n        prodHighNext = prodHigh[i];\n        final double sHighCur = sHighPrev + prodHighNext;\n        sLowSum += (prodHighNext - (sHighCur - sHighPrev)) + (sHighPrev - sHighCur);\n        sHighPrev = sHighCur;\n    }\n\n    double result = sHighPrev + (prodLowSum + sLowSum);\n\n    // Rest of the function code.\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}