{
    "generation": "/**\n * Parse an entry name from a buffer.\n * Parsing stops when a NUL is found\n * or the buffer length is reached.\n *\n * @param buffer The buffer from which to parse.\n * @param offset The offset into the buffer from which to parse.\n * @param length The maximum number of bytes to parse.\n * @return The entry name.\n */\npublic static String parseName(byte[] buffer, final int offset, final int length) {\n    int end = offset + length;\n    int stop = offset;\n\n    // Find the end of the string (NUL character or end of buffer)\n    while (stop < end && buffer[stop] != 0) {\n        stop++;\n    }\n\n    // Use ISO-8859-1 encoding to correctly handle all byte values\n    try {\n        return new String(buffer, offset, stop - offset, \"ISO-8859-1\");\n    } catch (java.io.UnsupportedEncodingException e) {\n        // This should never happen as ISO-8859-1 is a standard encoding\n        throw new RuntimeException(\"ISO-8859-1 encoding not supported\", e);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}