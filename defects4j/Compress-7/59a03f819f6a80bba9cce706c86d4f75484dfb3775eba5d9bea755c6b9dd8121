{
    "generation": "    /**\n     * Parse an entry name from a buffer.\n     * Parsing stops when a NUL is found\n     * or the buffer length is reached.\n     *\n     * @param buffer The buffer from which to parse.\n     * @param offset The offset into the buffer from which to parse.\n     * @param length The maximum number of bytes to parse.\n     * @return The entry name.\n     */\n    public static String parseName(byte[] buffer, final int offset, final int length) {\n        int end = offset + length;\n        int nulIndex = offset;\n\n        // Find the index of the first NUL byte\n        while (nulIndex < end && buffer[nulIndex] != 0) {\n            nulIndex++;\n        }\n\n        // Convert the byte array to a string using ISO-8859-1 charset\n        try {\n            return new String(buffer, offset, nulIndex - offset, \"ISO-8859-1\");\n        } catch (java.io.UnsupportedEncodingException e) {\n            // ISO-8859-1 is a standard charset and should always be supported\n            throw new RuntimeException(\"ISO-8859-1 encoding not supported\", e);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}