{
    "generation": "@Override\npublic JsonSerializer<?> createContextual(SerializerProvider serializers, BeanProperty property) throws JsonMappingException\n{\n    if (property == null) {\n        return this;\n    }\n    JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n    if (format == null) {\n        return this;\n    }\n    // Simple case first: serialize as numeric timestamp?\n    JsonFormat.Shape shape = format.getShape();\n    if (shape.isNumeric()) {\n        return withFormat(Boolean.TRUE, null);\n    }\n\n    // If a custom pattern is set, use it\n    if (format.hasPattern()) {\n        final Locale loc = format.hasLocale() ? format.getLocale() : serializers.getLocale();\n        SimpleDateFormat df = new SimpleDateFormat(format.getPattern(), loc);\n        TimeZone tz = format.hasTimeZone() ? format.getTimeZone() : serializers.getTimeZone();\n        df.setTimeZone(tz);\n        return withFormat(Boolean.FALSE, df);\n    }\n\n    // Otherwise, check if we need to make changes\n    final boolean hasLocale = format.hasLocale();\n    final boolean hasTZ = format.hasTimeZone();\n    final boolean asString = (shape == JsonFormat.Shape.STRING);\n\n    if (!hasLocale && !hasTZ && !asString) {\n        return this;\n    }\n\n    DateFormat df0 = serializers.getConfig().getDateFormat();\n    if (df0 instanceof StdDateFormat) {\n        StdDateFormat std = (StdDateFormat) df0;\n        if (format.hasLocale()) {\n            std = std.withLocale(format.getLocale());\n        }\n        if (format.hasTimeZone()) {\n            std = std.withTimeZone(format.getTimeZone());\n        }\n        return withFormat(Boolean.FALSE, std);\n    }\n\n    if (!(df0 instanceof SimpleDateFormat)) {\n        serializers.reportBadDefinition(handledType(), String.format(\n                \"Configured `DateFormat` (%s) not a `SimpleDateFormat`; cannot configure `Locale` or `TimeZone`\",\n                df0.getClass().getName()));\n    }\n    SimpleDateFormat df = (SimpleDateFormat) df0.clone();\n    if (hasLocale) {\n        df.setLocale(format.getLocale());\n    }\n    if (hasTZ) {\n        df.setTimeZone(format.getTimeZone());\n    }\n    return withFormat(Boolean.FALSE, df);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}