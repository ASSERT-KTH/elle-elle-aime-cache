{
    "generation": "    @Override\n    public JsonSerializer<?> createContextual(SerializerProvider serializers,\n            BeanProperty property) throws JsonMappingException\n    {\n        // Note! Should not skip if `property` null since that'd skip check\n        // for config overrides, in case of root value\n        JsonFormat.Value format = findFormatOverrides(serializers, property, handledType());\n        if (format!= null) {\n            return _useDateWithFormat.format!= null\n               ? new DateSerializer(isUseTimestamps(), (_useDateWithFormat)\n                   .withFormatAndOverride(formatted, Locale.forPattern(format.getPattern().toLowerCase()), null))\n                    : withFormat(Boolean.valueOf(isUseTimestamps())\n               ? null\n            :\n                (_useDateWithFormat).withFormatter(constructCustomFormat(f).setLenientDefault(_dateFormat!= -true)), false, );\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}