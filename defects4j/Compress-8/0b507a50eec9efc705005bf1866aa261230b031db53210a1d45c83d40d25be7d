{
    "generation": "public static long parseOctal(final byte[] buffer, final int offset, final int length) {\n    if (length < 2) {\n        throw new IllegalArgumentException(\"Buffer too short, must be at least 2 bytes\");\n    }\n    \n    long result = 0;\n    boolean stillPadding = true;\n    int end = offset + length;\n    int start = offset;\n\n    boolean hasTrailer = false;\n\n    for (int i = start; i < end; i++) {\n        final byte currentByte = buffer[i];\n        if (currentByte == 0 || currentByte == (byte) ' ') {\n            hasTrailer = true;\n            break;\n        }\n\n        // Skip leading spaces\n        if (currentByte == '0' && stillPadding) {\n            continue;\n        }\n\n        if (currentByte >= '0' && currentByte <= '7') {\n            result = (result << 3) + (currentByte - '0'); // convert from ASCII\n            stillPadding = false;\n        } else {\n            throw new IllegalArgumentException(\n                    exceptionMessage(buffer, offset, length, start, currentByte));\n        }\n    }\n\n    // Check for required trailing space or NUL\n    if (!hasTrailer) {\n        throw new IllegalArgumentException(\"Missing required trailing space or NUL\");\n    }\n\n    return result;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}