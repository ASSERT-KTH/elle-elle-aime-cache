{
    "generation": "/**\n * Handles a goog.require call.\n */\nprivate void processRequireCall(NodeTraversal t, Node n, Node parent) {\n    Node left = n.getFirstChild();\n    Node arg = left.getNext();\n    if (verifyLastArgumentIsString(t, left, arg)) {\n        String ns = arg.getString();\n        \n        // Check if the namespace is in the providedNames map\n        ProvidedName provided = providedNames.get(ns);\n        \n        if (provided == null || !provided.isExplicitlyProvided()) {\n            unrecognizedRequires.add(new UnrecognizedRequire(n, ns, t.getSourceName()));\n        } else {\n            JSModule providedModule = provided.explicitModule;\n            \n            // Ensure providedModule is not null\n            Preconditions.checkNotNull(providedModule);\n            \n            JSModule module = t.getModule();\n            if (moduleGraph != null && module != providedModule &&\n                !moduleGraph.dependsOn(module, providedModule)) {\n                compiler.report(t.makeError(n, XMODULE_REQUIRE_ERROR, ns,\n                                            providedModule.getName(),\n                                            module.getName()));\n            }\n        }\n        \n        // Add nodes to symbol table\n        maybeAddToSymbolTable(left);\n        maybeAddStringNodeToSymbolTable(arg);\n        \n        // Remove the require statement if the namespace is recognized\n        if (provided != null) {\n            parent.detachFromParent();\n            compiler.reportCodeChange();\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}