{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        if (mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).isExactTypeMatch()) {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n            return; // Stop after injecting into the best matching type\n        }\n    }\n    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        if (mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).isAssignableTypeMatch()) {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n            break; // Stop after finding the first assignable match\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}