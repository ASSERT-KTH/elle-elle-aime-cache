{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        // First, try to find an exact type match\n        Object exactMatch = findExactTypeMatch(mocks, field.getType());\n        if (exactMatch!= null) {\n            mockCandidateFilter.inject(field, exactMatch);\n        } else {\n            // If no exact match, fall back to ancestor type matching\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n        }\n    }\n}\n\n// Helper method to find an exact type match\nprivate Object findExactTypeMatch(Set<Object> mocks, Class<?> fieldType) {\n    for (Object mock : mocks) {\n        if (fieldType.isInstance(mock)) {\n            return mock;\n        }\n    }\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}