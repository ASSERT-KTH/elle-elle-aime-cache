{
    "generation": "    private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n        Set<Field> injectedFields = new HashSet<>();\n\n        for (Object mock : mocks) {\n            for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n                if (!injectedFields.contains(field) && field.getType().isInstance(mock)) {\n                    try {\n                        field.setAccessible(true);\n                        field.set(fieldInstance, mock);\n                        injectedFields.add(field);\n                    } catch (IllegalAccessException e) {\n                        throw new RuntimeException(e);\n                    }\n                }\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}