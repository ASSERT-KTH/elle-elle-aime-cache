{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        // First try to inject exact type match\n        for (Object mock : mocks) {\n            if (field.getType().isAssignableFrom(mock.getClass()) && \n                mock.getClass().equals(field.getType())) {\n                mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n                return; // Stop once the exact match is injected\n            }\n        }\n    }\n    // Retry with assignable types if no exact match was injected\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        for (Object mock : mocks) {\n            if (field.getType().isAssignableFrom(mock.getClass())) {\n                mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n                return; // Stop after the first successful injection\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}