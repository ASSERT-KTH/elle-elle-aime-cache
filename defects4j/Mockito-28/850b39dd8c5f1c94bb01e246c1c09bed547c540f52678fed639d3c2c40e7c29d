{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        Object matchedMock = null;\n        for (Object mock : mocks) {\n            if (field.getType().isAssignableFrom(mock.getClass())) {\n                if (matchedMock == null || matchedMock.getClass().isAssignableFrom(mock.getClass())) {\n                    matchedMock = mock;\n                }\n            }\n        }\n        if (matchedMock != null) {\n            mockCandidateFilter.filterCandidate(Collections.singleton(matchedMock), field, fieldInstance).thenInject();\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}