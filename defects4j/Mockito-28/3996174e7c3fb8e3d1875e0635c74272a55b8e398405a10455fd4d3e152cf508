{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        Optional<Object> matchingMock = mocks.stream()\n            .filter(mock -> field.getType().isInstance(mock))\n            .findFirst();\n\n        if (matchingMock.isPresent()) {\n            field.setAccessible(true);\n            try {\n                field.set(fieldInstance, matchingMock.get());\n            } catch (IllegalAccessException e) {\n                throw new RuntimeException(\"Failed to inject mock into field: \" + field.getName(), e);\n            }\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}