{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    List<Field> fields = new ArrayList<>(orderedInstanceFieldsFrom(awaitingInjectionClazz));\n    fields.sort((f1, f2) -> {\n        if (f1.getType().isAssignableFrom(f2.getType())) {\n            return 1; // f2 is more specific than f1, so it should come first\n        } else if (f2.getType().isAssignableFrom(f1.getType())) {\n            return -1; // f1 is more specific than f2, so it should come first\n        }\n        return 0; // types are unrelated, maintain original order\n    });\n    \n    for (Field field : fields) {\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}