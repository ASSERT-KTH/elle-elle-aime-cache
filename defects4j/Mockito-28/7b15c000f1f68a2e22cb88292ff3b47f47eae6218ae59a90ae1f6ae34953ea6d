{
    "generation": "    private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n        // First pass: try exact type matches\n        boolean injected = false;\n        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n            if (mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).isReadyToBeInjected()) {\n                mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n                injected = true;\n                break;\n            }\n        }\n        \n        // Second pass: try ancestor types if no exact match was found\n        if (!injected) {\n            for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n                mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}