{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        FilterResult result = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n        if (result.shouldInject()) {\n            result.inject();\n            break; // Add this line to break the loop once the mock is injected to the best matching type\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}