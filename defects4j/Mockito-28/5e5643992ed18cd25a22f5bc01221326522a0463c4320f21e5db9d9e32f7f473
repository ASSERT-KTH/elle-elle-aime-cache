{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        // Filter mocks for the current field and inject the suitable one\n        MockCandidate filteredMock = mockCandidateFilter.filterCandidate(mocks, field, fieldInstance);\n        if (filteredMock != null) {\n            filteredMock.thenInject();\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}