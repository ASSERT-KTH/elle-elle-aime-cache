{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        Object exactTypeMock = findExactTypeMock(mocks, field.getType());\n        if (exactTypeMock!= null) {\n            mockCandidateFilter.filterCandidate(Collections.singleton(exactTypeMock), field, fieldInstance).thenInject();\n        } else {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n        }\n    }\n}\n\nprivate Object findExactTypeMock(Set<Object> mocks, Class<?> fieldType) {\n    for (Object mock : mocks) {\n        if (fieldType.equals(mock.getClass())) {\n            return mock;\n        }\n    }\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}