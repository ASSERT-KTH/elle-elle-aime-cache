{
    "generation": "    private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n        for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n            if (mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).isEligible()) {\n                field.setAccessible(true);\n                try {\n                    field.set(fieldInstance, mockCandidateFilter.getEligibleMock(mocks, field));\n                } catch (IllegalAccessException e) {\n                    throw new RuntimeException(\"Failed to inject mock into field: \" + field.getName(), e);\n                }\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}