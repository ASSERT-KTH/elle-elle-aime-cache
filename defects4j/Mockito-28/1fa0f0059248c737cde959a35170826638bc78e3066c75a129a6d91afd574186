{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    List<Field> fields = orderedInstanceFieldsFrom(awaitingInjectionClazz);\n    \n    // First pass: inject exact type matches\n    for (Field field : fields) {\n        for (Object mock : mocks) {\n            if (field.getType() == mock.getClass()) {\n                mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n                mocks.remove(mock);\n                break;\n            }\n        }\n    }\n    \n    // Second pass: inject ancestor type matches\n    for (Field field : fields) {\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}