{
    "generation": "    private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n        for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n            List<Object> candidateMocks = new ArrayList<Object>();\n            for (Object mock : mocks) {\n                if (field.getType().isInstance(mock)) {\n                    candidateMocks.add(mock);\n                }\n            }\n            if (!candidateMocks.isEmpty()) {\n                mockCandidateFilter.filterCandidate(new LinkedHashSet<Object>(candidateMocks), field, fieldInstance).thenInject();\n            } else {\n                mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}