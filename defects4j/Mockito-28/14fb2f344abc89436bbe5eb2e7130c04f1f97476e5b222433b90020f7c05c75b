{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for (Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        Optional<Object> bestMatch = mockCandidateFilter.findBestMatch(mocks, field, fieldInstance);\n        bestMatch.ifPresent(mock -> {\n            try {\n                field.set(fieldInstance, mock);\n            } catch (IllegalAccessException e) {\n                throw new RuntimeException(\"Failed to inject mock into field \" + field.getName(), e);\n            }\n        });\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}