{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        Optional<Object> exactMatch = mocks.stream()\n               .filter(mock -> field.getType().equals(mock.getClass()))\n               .findFirst();\n        \n        if (exactMatch.isPresent()) {\n            mockCandidateFilter.filterCandidate(Collections.singleton(exactMatch.get()), field, fieldInstance).thenInject();\n        } else {\n            mockCandidateFilter.filterCandidate(mocks, field, fieldInstance).thenInject();\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}