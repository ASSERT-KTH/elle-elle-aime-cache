{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        Optional<Object> mock = mockCandidateFilter.findBestMockCandidate(mocks, field, fieldInstance);\n        if (mock.isPresent()) {\n            fieldInject.injectMocks(field, fieldInstance, mock.get());\n            break; // Only inject the first matching mock\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}