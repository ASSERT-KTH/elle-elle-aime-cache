{
    "generation": "private void injectMockCandidate(Class<?> awaitingInjectionClazz, Set<Object> mocks, Object fieldInstance) {\n    // First, try exact type matches\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance)\n            .withPriority(MockCandidateFilter.Priorities.EXACT_TYPE)\n            .thenInject();\n    }\n    // Then try ancestor type matches\n    for(Field field : orderedInstanceFieldsFrom(awaitingInjectionClazz)) {\n        mockCandidateFilter.filterCandidate(mocks, field, fieldInstance)\n            .withPriority(MockCandidateFilter.Priorities.ANCESTOR_TYPE)\n            .thenInject();\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}