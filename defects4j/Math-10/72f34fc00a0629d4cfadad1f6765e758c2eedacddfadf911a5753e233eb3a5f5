{
    "generation": "public void atan2(final double[] y, final int yOffset,\n                  final double[] x, final int xOffset,\n                  final double[] result, final int resultOffset) {\n\n    if (Double.isInfinite(y[yOffset]) && Double.isInfinite(x[xOffset])) {\n        if (Double.isInfinite(y[yOffset]) && y[yOffset] == x[xOffset]) {\n            // atan2(\u00b1\u221e, \u00b1\u221e) = \u00b1\u03c0/4\n            result[resultOffset] = y[yOffset] > 0 ? FastMath.PI / 4 : -FastMath.PI / 4;\n        } else if (Double.isInfinite(y[yOffset])) {\n            // atan2(\u00b1\u221e, x) = \u00b1\u03c0/2 for finite x\n            result[resultOffset] = y[yOffset] > 0 ? FastMath.PI / 2 : -FastMath.PI / 2;\n        } else if (Double.isInfinite(x[xOffset])) {\n            // atan2(y, \u00b1\u221e) = \u00b10 for finite y\n            result[resultOffset] = Double.copySign(0.0, y[yOffset]);\n        }\n        return;\n    }\n\n    // rest of the function...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}