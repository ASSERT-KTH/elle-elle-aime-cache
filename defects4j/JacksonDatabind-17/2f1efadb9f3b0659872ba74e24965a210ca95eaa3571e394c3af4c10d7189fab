{
    "generation": "/**\n * Method called to check if the default type handler should be\n * used for given type.\n * Note: \"natural types\" (String, Boolean, Integer, Double) will never\n * use typing; that is both due to them being concrete and final,\n * and since actual serializers and deserializers will also ignore any\n * attempts to enforce typing.\n */\npublic boolean useForType(JavaType t)\n{\n    switch (_appliesFor) {\n    case NON_CONCRETE_AND_ARRAYS:\n        JavaType contentType = t;\n        while (contentType.isArrayType()) {\n            contentType = contentType.getContentType();\n        }\n        return!contentType.isConcrete() || contentType.getRawClass() == Object.class;\n\n    case OBJECT_AND_NON_CONCRETE:\n        return t.isJavaLangObject() ||!t.isConcrete() \n                || TreeNode.class.isAssignableFrom(t.getRawClass());\n\n    case NON_FINAL:\n        JavaType nonFinalContentType = t;\n        while (nonFinalContentType.isArrayType()) {\n            nonFinalContentType = nonFinalContentType.getContentType();\n        }\n        return!nonFinalContentType.isFinal() &&!TreeNode.class.isAssignableFrom(nonFinalContentType.getRawClass());\n\n    case JAVA_LANG_OBJECT:\n        return t.isJavaLangObject();\n    default:\n        return false;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}