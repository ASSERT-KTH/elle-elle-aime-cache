{
    "generation": "public Fraction reduce() {\n    int numerator = this.numerator;\n    int denominator = this.denominator;\n    \n    // If numerator is zero, return 0/1\n    if (numerator == 0) {\n        return Fraction.getFraction(0, 1);\n    }\n    \n    // Calculate GCD of absolute values\n    int gcd = greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));\n    \n    // If GCD is 1, return the current fraction\n    if (gcd == 1) {\n        return this;\n    }\n    \n    // Reduce numerator and denominator by GCD\n    numerator /= gcd;\n    denominator /= gcd;\n    \n    // Ensure the sign is on the numerator\n    if (denominator < 0) {\n        numerator = -numerator;\n        denominator = -denominator;\n    }\n    \n    return Fraction.getFraction(numerator, denominator);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}