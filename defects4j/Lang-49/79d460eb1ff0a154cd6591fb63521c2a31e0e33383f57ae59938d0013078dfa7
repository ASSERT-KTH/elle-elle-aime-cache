{
    "generation": "public Fraction reduce() {\n    int num = numerator;\n    int denom = denominator;\n    \n    // Handle zero numerator\n    if (num == 0) {\n        return Fraction.getFraction(0, 1);\n    }\n    \n    // Compute the greatest common divisor (GCD) of the absolute values\n    int gcd = greatestCommonDivisor(Math.abs(num), Math.abs(denom));\n    \n    // Simplify numerator and denominator by GCD\n    num /= gcd;\n    denom /= gcd;\n    \n    // Ensure the denominator is positive\n    if (denom < 0) {\n        num = -num;\n        denom = -denom;\n    }\n    \n    // Return a new fraction or this if already reduced\n    if (num == numerator && denom == denominator) {\n        return this;\n    } else {\n        return Fraction.getFraction(num, denom);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}