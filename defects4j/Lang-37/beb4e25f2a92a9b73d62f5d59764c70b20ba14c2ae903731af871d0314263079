{
    "generation": "@SuppressWarnings(\"unchecked\")\npublic static <T> T[] addAll(T[] array1, T... array2) {\n    if (array1 == null && array2 == null) {\n        return null;\n    } else if (array1 == null) {\n        return clone(array2);\n    } else if (array2 == null) {\n        return clone(array1);\n    }\n    \n    Class<?> type1 = array1.getClass().getComponentType();\n    Class<?> type2 = array2.getClass().getComponentType();\n    \n    if (!type1.isAssignableFrom(type2)) {\n        throw new IllegalArgumentException(\"Cannot add array of type \" + type2 + \" to array of type \" + type1);\n    }\n    \n    @SuppressWarnings(\"unchecked\")\n    T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\n    System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n    System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n    return joinedArray;\n}\n\nprivate static <T> T[] clone(T[] array) {\n    if (array == null) {\n        return null;\n    }\n    return array.clone();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}