{
    "generation": "@SuppressWarnings(\"unchecked\")\npublic static <T> T[] addAll(T[] array1, T... array2) {\n    if (array1 == null) {\n        return array2 == null ? null : (T[]) clone(array2);\n    } else if (array2 == null) {\n        return (T[]) clone(array1);\n    }\n    \n    // Determine the most specific common supertype\n    final Class<?> commonType = array1.getClass().getComponentType().isAssignableFrom(array2.getClass().getComponentType()) ?\n                                array2.getClass().getComponentType() : array1.getClass().getComponentType();\n\n    // Create new array with the common supertype\n    T[] joinedArray = (T[]) Array.newInstance(commonType, array1.length + array2.length);\n    System.arraycopy(array1, 0, joinedArray, 0, array1.length);\n    System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\n    \n    return joinedArray;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}