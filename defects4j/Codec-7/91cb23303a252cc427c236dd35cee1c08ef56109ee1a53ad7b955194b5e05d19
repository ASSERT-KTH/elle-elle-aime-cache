{
    "generation": "/**\n * Encodes binary data using the base64 algorithm into 76 character blocks separated by CRLF.\n *\n * @param binaryData\n *            binary data to encode\n * @return String containing Base64 characters.\n * @since 1.4\n */    \npublic static String encodeBase64String(byte[] binaryData) {\n    if (binaryData == null) {\n        return null;\n    } else if (binaryData.length == 0) {\n        return \"\";\n    }\n\n    byte[] encodedBinaryData = encodeBase64(binaryData, true);\n    if (encodedBinaryData == null || encodedBinaryData.length == 0) {\n        return \"\";\n    }\n\n    int paddingIndex = encodedBinaryData.length - 1;\n    while (paddingIndex >= 0 && encodedBinaryData[paddingIndex] == '=') {\n        paddingIndex--;\n    }\n\n    if (paddingIndex == encodedBinaryData.length - 1 || encodedBinaryData[encodedBinaryData.length - 1]!= '\\r') {\n        return StringUtils.newStringUtf8(encodedBinaryData);\n    } else {\n        return StringUtils.newStringUtf8(Arrays.copyOfRange(encodedBinaryData, 0, paddingIndex + 1)) + \"\\r\\n\";\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}