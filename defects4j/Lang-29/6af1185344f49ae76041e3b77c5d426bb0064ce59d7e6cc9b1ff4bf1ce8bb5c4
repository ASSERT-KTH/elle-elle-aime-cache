{
    "generation": "static int toJavaVersionInt(String version) {\n    if (version == null || version.isEmpty()) {\n        return 0;\n    }\n    version = version.replaceAll(\"[^0-9.]\", \"\"); // Remove non-numeric and non-dot characters\n    String[] parts = version.split(\"\\\\.\");\n    int major = (parts.length > 0 && !parts[0].isEmpty()) ? Integer.parseInt(parts[0]) : 0;\n    int minor = (parts.length > 1 && !parts[1].isEmpty()) ? Integer.parseInt(parts[1]) : 0;\n    int patch = (parts.length > 2 && !parts[2].isEmpty()) ? Integer.parseInt(parts[2]) : 0;\n\n    // Handle versions such as 1.x properly to match the expected format\n    if (major == 1) {\n        return (major * 100) + (minor * 10) + patch;\n    }\n    return (major * 100) + (minor * 10); // For Java versions like 9, 10, 11, etc.\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": true
}