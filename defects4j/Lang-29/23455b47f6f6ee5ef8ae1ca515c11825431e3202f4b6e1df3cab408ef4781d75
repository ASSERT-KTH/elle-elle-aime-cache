{
    "generation": "    /**\n     * <p>\n     * Converts the given Java version string to an <code>int</code>.\n     * </p>\n     * \n     * <p>\n     * Example return values:\n     * </p>\n     * <ul>\n     * <li><code>120</code> for Java 1.2</li>\n     * <li><code>131</code> for Java 1.3.1</li>\n     * <li><code>160</code> for Java 1.6.0_20</li>\n     * </ul>\n     * \n     * <p>\n     * Patch releases are not reported.\n     * </p>\n     * <p>\n     * This method is package private instead of private to support unit test invocation.\n     * </p>\n     * \n     * @return the version, for example 131 for Java 1.3.1\n     */\n    static int toJavaVersionInt(String version) {\n        if (version == null || version.isEmpty()) {\n            return 0;\n        }\n        \n        String[] parts = version.split(\"\\\\.\");\n        int major = 0;\n        int minor = 0;\n        int patch = 0;\n        \n        // Extract major version\n        for (String part : parts[0].split(\"-\")) {\n            try {\n                major = Integer.parseInt(part);\n                break;\n            } catch (NumberFormatException e) {\n                // Ignore non-numeric parts\n            }\n        }\n        \n        if (parts.length > 1) {\n            // Extract minor version\n            for (String part : parts[1].split(\"-\")) {\n                try {\n                    minor = Integer.parseInt(part);\n                    break;\n                } catch (NumberFormatException e) {\n                    // Ignore non-numeric parts\n                }\n            }\n        }\n        \n        if (parts.length > 2) {\n            // Extract patch version\n            for (String part : parts[2].split(\"-\")) {\n                try {\n                    patch = Integer.parseInt(part);\n                    break;\n                } catch (NumberFormatException e) {\n                    // Ignore non-numeric parts\n                }\n            }\n        }\n        \n        return major * 100 + minor * 10 + patch;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}