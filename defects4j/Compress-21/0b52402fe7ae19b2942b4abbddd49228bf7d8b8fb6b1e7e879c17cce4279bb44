{
    "generation": "/**\n * Writes a BitSet to the output stream as a compact binary representation.\n * \n * @param header the output stream to write to\n * @param bits the BitSet to write\n * @param length the number of bits to write\n * @throws IOException if an I/O error occurs\n */\nprivate void writeBits(final DataOutput header, final BitSet bits, final int length) throws IOException {\n    int cache = 0;\n    int shift = 7;\n    for (int i = 0; i < length; i++) {\n        cache |= ((bits.get(i)? 1 : 0) << shift);\n        --shift;\n        if (shift < 0) { // Change: shift == 0 to shift < 0\n            header.write(cache);\n            shift = 7;\n            cache = 0;\n        }\n    }\n    if (length > 0 && shift!= 7) { // Change: shift > 0 to shift!= 7\n        header.write(cache);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}