{
    "generation": "public static long skip(InputStream input, long numToSkip) throws IOException {\n    long available = numToSkip;\n    byte[] buffer = new byte[8192];\n\n    while (numToSkip > 0) {\n        long skipped;\n        if (input.available() > 0) {\n            skipped = input.skip(numToSkip);\n        } else {\n            skipped = input.read(buffer, 0, (int) Math.min(buffer.length, numToSkip));\n            if (skipped < 0) {\n                break;\n            }\n        }\n\n        if (skipped == 0) {\n            if (input.read() == -1) {\n                break;\n            }\n            numToSkip--;\n        } else {\n            numToSkip -= skipped;\n        }\n    }\n\n    return available - numToSkip;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}