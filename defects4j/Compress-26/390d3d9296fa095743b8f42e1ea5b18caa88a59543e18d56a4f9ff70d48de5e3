{
    "generation": "public static long skip(InputStream input, long numToSkip) throws IOException {\n    long available = numToSkip;\n    while (numToSkip > 0) {\n        long skipped = input.skip(numToSkip);\n        if (skipped == 0) {\n            // Fallback to read if skip returns 0\n            byte[] buffer = new byte[(int) Math.min(numToSkip, 8192)];\n            int read;\n            while ((read = input.read(buffer)) > 0 && numToSkip > 0) {\n                numToSkip -= read;\n            }\n            if (read == -1) {\n                // End of stream reached\n                break;\n            }\n        } else {\n            numToSkip -= skipped;\n        }\n    }\n    return available - numToSkip;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}