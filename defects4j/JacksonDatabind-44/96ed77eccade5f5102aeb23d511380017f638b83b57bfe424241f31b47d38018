{
    "generation": "    @Override\n    @Deprecated\n    protected JavaType _narrow(Class<?> subclass)\n    {\n        if (_class == subclass) {\n            return this;\n        }\n        // Should we check that there is a sub-class relationship?\n        // 15-Jan-2016, tatu: Almost yes, but there are some complications with\n        //    placeholder values (`Void`, `NoClass`), so can not quite do yet.\n        // 21-Dec-2017, tatu: [databind#1735] Need to allow, however\n//        if (!(_class.isAssignableFrom(subclass))) {\n//            throw new IllegalArgumentException(\"Class \"+subclass.getName()+\" not sub-type of \"+_class.getName());\n//        }\n        return new SimpleType(subclass, _bindings, this, _superInterfaces,\n                _valueHandler, _typeHandler, _asStatic);\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}