{
    "generation": "    @Override\n    @Deprecated\n    protected JavaType _narrow(Class<?> subclass)\n    {\n        if (_class == subclass) {\n            return this;\n        }\n        // Check for sub-class relationship, but allow for placeholder values\n        if (!_class.isAssignableFrom(subclass) && \n            !Void.class.equals(subclass) && \n            !NoClass.class.equals(subclass)) {\n            throw new IllegalArgumentException(\"Class \" + subclass.getName() + \" not sub-type of \"\n                    + _class.getName());\n        }\n        return new SimpleType(subclass, _bindings, this, _superInterfaces,\n                _valueHandler, _typeHandler, _asStatic);\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}