{
    "generation": "@Override\n@Deprecated\nprotected JavaType _narrow(Class<?> subclass)\n{\n    if (_class.isAssignableFrom(subclass)) {\n        TypeFactory typeFactory = TypeFactory.defaultInstance();\n        return typeFactory.constructSpecializedType(this, subclass);\n    }\n    throw new IllegalArgumentException(\"Class \"+subclass.getName()+\" not sub-type of \"\n            +_class.getName());\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}