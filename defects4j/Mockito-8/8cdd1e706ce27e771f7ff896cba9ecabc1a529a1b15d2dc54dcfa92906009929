{
    "generation": "    protected void registerTypeVariablesOn(Type classType) {\n        if (!(classType instanceof ParameterizedType)) {\n            return;\n        }\n        ParameterizedType parameterizedType = (ParameterizedType) classType;\n\n        // Convert getRawType() from Type to Class<?> safely\n        Class<?> rawClass = null;\n        if (parameterizedType.getRawType() instanceof Class<?>) {\n            rawClass = (Class<?>) parameterizedType.getRawType();\n        }\n\n        if (rawClass != null) {\n            TypeVariable<?>[] typeParameters = rawClass.getTypeParameters();\n            Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();\n            for (int i = 0; i < actualTypeArguments.length; i++) {\n                TypeVariable<?> typeParameter = typeParameters[i];\n                Type actualTypeArgument = actualTypeArguments[i];\n\n                if (actualTypeArgument instanceof WildcardType) {\n                    contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));\n                } else {\n                    contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n                }\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}