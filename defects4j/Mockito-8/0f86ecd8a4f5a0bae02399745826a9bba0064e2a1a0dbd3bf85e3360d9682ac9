{
    "generation": "protected void registerTypeVariablesOn(Type classType) {\n    if (!(classType instanceof ParameterizedType)) {\n        return;\n    }\n    ParameterizedType parameterizedType = (ParameterizedType) classType;\n    TypeVariable[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();\n    Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();\n    for (int i = 0; i < actualTypeArguments.length; i++) {\n        TypeVariable typeParameter = typeParameters[i];\n        Type actualTypeArgument = actualTypeArguments[i];\n\n        Type resolvedArgument = actualTypeArgument;\n        while (resolvedArgument instanceof WildcardType) {\n            WildcardType wildcardType = (WildcardType) resolvedArgument;\n            resolvedArgument = boundsOf(wildcardType);\n        }\n\n        contextualActualTypeParameters.put(typeParameter, resolvedArgument);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}