{
    "generation": "    protected void registerTypeVariablesOn(Type classType) {\n        if (!(classType instanceof ParameterizedType)) {\n            return;\n        }\n        ParameterizedType parameterizedType = (ParameterizedType) classType;\n        Class<?> rawType = (Class<?>) parameterizedType.getRawType();\n        TypeVariable[] typeParameters = rawType.getTypeParameters();\n        Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();\n        \n        // Early exit if we've already registered these type variables to prevent infinite recursion\n        if (contextualActualTypeParameters.containsKey(typeParameters[0])) {\n            return;\n        }\n        \n        for (int i = 0; i < actualTypeArguments.length; i++) {\n            TypeVariable typeParameter = typeParameters[i];\n            Type actualTypeArgument = actualTypeArguments[i];\n\n            if (actualTypeArgument instanceof WildcardType) {\n                contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));\n            } else {\n                contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n            }\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}