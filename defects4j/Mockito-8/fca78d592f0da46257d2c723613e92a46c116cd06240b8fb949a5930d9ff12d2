{
    "generation": "protected void registerTypeVariablesOn(Type classType) {\n    if (!(classType instanceof ParameterizedType)) {\n        return;\n    }\n    ParameterizedType parameterizedType = (ParameterizedType) classType;\n    TypeVariable<?>[] typeParameters = ((Class<?>) parameterizedType.getRawType()).getTypeParameters();\n    Type[] actualTypeArguments = parameterizedType.getActualTypeArguments();\n    // Avoid infinite recursion by detecting self-referencing types\n    if (contextualActualTypeParameters.containsKey(parameterizedType)) {\n        return;\n    }\n    contextualActualTypeParameters.put(parameterizedType, classType); // Placeholder to detect loops\n\n    for (int i = 0; i < actualTypeArguments.length; i++) {\n        TypeVariable<?> typeParameter = typeParameters[i];\n        Type actualTypeArgument = actualTypeArguments[i];\n\n        if (actualTypeArgument instanceof WildcardType) {\n            contextualActualTypeParameters.put(typeParameter, boundsOf((WildcardType) actualTypeArgument));\n        } else {\n            contextualActualTypeParameters.put(typeParameter, actualTypeArgument);\n        }\n    }\n\n    contextualActualTypeParameters.remove(parameterizedType); // Cleanup after processing\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}