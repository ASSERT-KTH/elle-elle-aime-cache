{
    "generation": "protected StringBuffer renderWrappedText(StringBuffer sb, int width, int nextLineTabStop, String text)\n{\n    int pos = findWrapPos(text, width, 0);\n\n    if (pos == -1)\n    {\n        if (text.length() > width) {\n            sb.append(text.substring(0, width)).append(defaultNewLine);\n            text = text.substring(width);\n            pos = 0;\n        }\n        else {\n            sb.append(rtrim(text));\n            return sb;\n        }\n    }\n\n    sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n\n    if (nextLineTabStop >= width)\n    {\n        nextLineTabStop = width - 1;\n    }\n\n    final String padding = createPadding(nextLineTabStop);\n\n    while (true)\n    {\n        text = padding + text.substring(pos).trim();\n        pos = findWrapPos(text, width, 0);\n\n        if (pos == -1)\n        {\n            if (text.length() > width) {\n                sb.append(text.substring(0, width)).append(defaultNewLine);\n                text = text.substring(width);\n                pos = 0;\n            }\n            else {\n                sb.append(text);\n                return sb;\n            }\n        }\n\n        if ( (text.length() > width) && (pos == nextLineTabStop - 1) )\n        {\n            pos = width;\n        }\n\n        sb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}