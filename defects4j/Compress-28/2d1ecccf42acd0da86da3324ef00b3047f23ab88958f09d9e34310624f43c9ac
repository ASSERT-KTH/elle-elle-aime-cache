{
    "generation": "    @Override\n    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (hasHitEOF || entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if (currEntry == null) {\n            throw new IllegalStateException(\"No current tar entry\");\n        }\n\n        numToRead = Math.min(numToRead, available());\n\n        while (numToRead > 0 && entryOffset < entrySize) {\n            int bytesToRead = Math.min(numToRead, (int) (entrySize - entryOffset));\n            int read = is.read(buf, offset, bytesToRead);\n            if (read == -1) {\n                hasHitEOF = true;\n                if (entryOffset < entrySize) {\n                    throw new IOException(\"Truncated tar entry\");\n                }\n                break;\n            }\n            totalRead += read;\n            numToRead -= read;\n            entryOffset += read;\n            offset += read;\n        }\n\n        count(totalRead);\n\n        return totalRead == 0 ? -1 : totalRead;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}