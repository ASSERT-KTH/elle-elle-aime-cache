{
    "generation": "    @Override\n    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        int totalRead = 0;\n\n        if (hasHitEOF || entryOffset >= entrySize) {\n            return -1;\n        }\n\n        if (currEntry == null) {\n            throw new IllegalStateException(\"No current tar entry\");\n        }\n\n        numToRead = Math.min(numToRead, available());\n\n        int bytesRead;\n        while (totalRead < numToRead && entryOffset < entrySize) {\n            bytesRead = is.read(buf, offset + totalRead, numToRead - totalRead);\n            if (bytesRead == -1) {\n                hasHitEOF = true;\n                break;\n            } else {\n                totalRead += bytesRead;\n                entryOffset += bytesRead;\n            }\n        }\n\n        if (totalRead == 0 && entryOffset >= entrySize) {\n            hasHitEOF = true;\n            throw new IOException(\"Unexpected EOF while reading tar entry\");\n        }\n\n        count(totalRead);\n\n        return totalRead;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}