{
    "generation": "@Override\npublic int read(byte[] buf, int offset, int numToRead) throws IOException {\n    int totalRead = 0;\n\n    if (hasHitEOF || entryOffset >= entrySize) {\n        return -1;\n    }\n\n    if (currEntry == null) {\n        throw new IllegalStateException(\"No current tar entry\");\n    }\n\n    // Ensure we do not attempt to read more than available\n    numToRead = Math.min(numToRead, available());\n\n    int bytesRead = is.read(buf, offset, numToRead);\n    if (bytesRead == -1) {\n        hasHitEOF = true;\n        if (entryOffset < entrySize) {\n            throw new IOException(\"Premature end of archive\");\n        }\n        return -1;\n    }\n\n    count(bytesRead);\n    entryOffset += bytesRead;\n    totalRead += bytesRead;\n\n    // Check if we have read fewer bytes than requested due to EOF\n    if (totalRead < numToRead && entryOffset < entrySize) {\n        throw new IOException(\"Truncated tar entry\");\n    }\n\n    return totalRead;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}