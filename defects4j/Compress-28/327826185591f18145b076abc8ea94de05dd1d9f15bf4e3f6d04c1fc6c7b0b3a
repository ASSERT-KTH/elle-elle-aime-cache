{
    "generation": "    @Override\n    public int read(byte[] buf, int offset, int numToRead) throws IOException {\n        if (hasHitEOF || entryOffset >= entrySize) {\n            if (entryOffset == entrySize && !hasHitEOF) {\n                hasHitEOF = true;\n                return -1;\n            } else if (entryOffset > entrySize && entrySize != 0) {\n                throw new IOException(\"Entry is truncated\");\n            }\n            return -1;\n        }\n\n        if (currEntry == null) {\n            throw new IllegalStateException(\"No current tar entry\");\n        }\n\n        numToRead = Math.min(numToRead, available());\n\n        int bytesRead = is.read(buf, offset, numToRead);\n        count(bytesRead);\n\n        if (bytesRead == -1) {\n            hasHitEOF = true;\n        } else {\n            entryOffset += bytesRead;\n            if (entryOffset > entrySize) {\n                throw new IOException(\"Entry is truncated\");\n            }\n        }\n\n        return bytesRead;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}