{
    "generation": "/**\n * <p>Internal calculation method.</p>\n *\n * @param val  the calendar\n * @param field  the field constant\n * @param round  true to round, false to truncate\n * @throws ArithmeticException if the year is over 280 million\n */\nprivate static void modify(Calendar val, int field, boolean round) {\n    if (val.get(Calendar.YEAR) > 280000000) {\n        throw new ArithmeticException(\"Calendar value too large for accurate calculations\");\n    }\n\n    if (field == Calendar.MILLISECOND) {\n        return;\n    }\n\n    // Get the current time and field values\n    long time = val.getTimeInMillis();\n    int millisecs = val.get(Calendar.MILLISECOND);\n    int seconds = val.get(Calendar.SECOND);\n    int minutes = val.get(Calendar.MINUTE);\n    boolean done = false;\n\n    // truncate milliseconds\n    if (!round || millisecs < 500) {\n        time -= millisecs;\n        if (field == Calendar.SECOND) {\n            done = true;\n        }\n    }\n\n    // truncate seconds\n    if (!done && (!round || seconds < 30)) {\n        time -= seconds * 1000L;\n        if (field == Calendar.MINUTE) {\n            done = true;\n        }\n    }\n\n    // truncate minutes\n    if (!done && (!round || minutes < 30)) {\n        time -= minutes * 60000L;\n    }\n\n    // reset time\n    if (val.getTimeInMillis() != time) {\n        val.setTimeInMillis(time);\n    }\n    // rest of the function...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}