{
    "generation": "    /**\n     * <p>Internal calculation method.</p>\n     * \n     * @param val  the calendar\n     * @param field  the field constant\n     * @param round  true to round, false to truncate\n     * @throws ArithmeticException if the year is over 280 million\n     */\n    private static void modify(Calendar val, int field, boolean round) {\n        if (val.get(Calendar.YEAR) > 280000000) {\n            throw new ArithmeticException(\"Calendar value too large for accurate calculations\");\n        }\n        \n        if (field == Calendar.MILLISECOND) {\n            return;\n        }\n\n        // ----------------- Fix for LANG-59 ---------------------- START ---------------\n        Date date = val.getTime();\n        long time = date.getTime();\n\n        // Adjust based on the provided field, truncating or rounding appropriately\n        switch (field) {\n            case Calendar.SECOND:\n                int millisecs = val.get(Calendar.MILLISECOND);\n                if (round && millisecs >= 500) {\n                    val.add(Calendar.SECOND, 1);\n                }\n                val.set(Calendar.MILLISECOND, 0);\n                break;\n\n            case Calendar.MINUTE:\n                millisecs = val.get(Calendar.MILLISECOND);\n                int seconds = val.get(Calendar.SECOND);\n                if (round && (seconds > 30 || (seconds == 30 && millisecs >= 500))) {\n                    val.add(Calendar.MINUTE, 1);\n                }\n                val.set(Calendar.SECOND, 0);\n                val.set(Calendar.MILLISECOND, 0);\n                break;\n\n            case Calendar.HOUR:\n            case Calendar.HOUR_OF_DAY:\n                millisecs = val.get(Calendar.MILLISECOND);\n                seconds = val.get(Calendar.SECOND);\n                int minutes = val.get(Calendar.MINUTE);\n                if (round && (minutes > 30 || (minutes == 30 && (seconds > 0 || millisecs >= 500)))) {\n                    val.add(Calendar.HOUR_OF_DAY, 1);\n                }\n                val.set(Calendar.MINUTE, 0);\n                val.set(Calendar.SECOND, 0);\n                val.set(Calendar.MILLISECOND, 0);\n                break;\n\n            case Calendar.DATE:\n            case Calendar.DAY_OF_MONTH:\n                millisecs = val.get(Calendar.MILLISECOND);\n                seconds = val.get(Calendar.SECOND);\n                minutes = val.get(Calendar.MINUTE);\n                int hours = val.get(Calendar.HOUR_OF_DAY);\n                if (round && (hours > 12 || (hours == 12 && (minutes > 0 || seconds > 0 || millisecs >= 500)))) {\n                    val.add(Calendar.DATE, 1);\n                }\n                val.set(Calendar.HOUR_OF_DAY, 0);\n                val.set(Calendar.MINUTE, 0);\n                val.set(Calendar.SECOND, 0);\n                val.set(Calendar.MILLISECOND, 0);\n                break;\n\n            default:\n                throw new IllegalArgumentException(\"The field \" + field + \" is not supported\");\n        }\n        // ----------------- Fix for LANG-59 ----------------------- END ----------------\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}