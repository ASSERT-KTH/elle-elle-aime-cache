{
    "generation": "    /**\n     * <p>Internal calculation method.</p>\n     * \n     * @param val  the calendar\n     * @param field  the field constant\n     * @param round  true to round, false to truncate\n     * @throws ArithmeticException if the year is over 280 million\n     */\n    private static void modify(Calendar val, int field, boolean round) {\n        if (val.get(Calendar.YEAR) > 280000000) {\n            throw new ArithmeticException(\"Calendar value too large for accurate calculations\");\n        }\n        \n        if (field == Calendar.MILLISECOND) {\n            return;\n        }\n\n        // ----------------- Fix for LANG-59 ---------------------- START ---------------\n        // see http://issues.apache.org/jira/browse/LANG-59\n        //\n        // Manually truncate milliseconds, seconds and minutes, rather than using\n        // Calendar methods.\n\n        Date date = val.getTime();\n        long time = date.getTime();\n        boolean done = false;\n\n        // truncate milliseconds\n        int millisecs = val.get(Calendar.MILLISECOND);\n        if (millisecs >= 500 && round) {\n            // Avoid overflow by not adding get(Calendar.SECOND) &c\n            time += (1000 - millisecs);\n        } else if (millisecs!= 0) {\n            time -= millisecs;\n        }\n        if (field == Calendar.SECOND) {\n            done = true;\n        }\n\n        if (!done) {\n            // truncate seconds\n            int seconds = val.get(Calendar.SECOND);\n            if (seconds >= 30 && round) {\n                time += (60 - seconds) * 1000L;\n            } else if (seconds!= 0) {\n                time -= seconds * 1000L;\n            }\n            if (field == Calendar.MINUTE) {\n                done = true;\n            }\n\n            if (!done) {\n                // truncate minutes\n                int minutes = val.get(Calendar.MINUTE);\n                if (minutes >= 30 && round) {\n                    time += (60 - minutes) * 60000L;\n                } else if (minutes!= 0) {\n                    time -= minutes * 60000L;\n                }\n            }\n        }\n        \n        // reset time\n        if (date.getTime()!= time) {\n            date.setTime(time);\n            val.setTime(date);\n        }\n\n        // ----------------- Fix for LANG-59 ----------------------- END ----------------\n\n        if (date.getTime() == time) {\n            return;\n        }\n\n        if (field == Calendar.MONTH) {\n            // always round months and years and hours in the same manner\n            val.set(val.get(Calendar.YEAR), (val.get(Calendar.MONTH) + 1) % 12, 0); \n\n        } else if(field == Calendar.HOUR_OF_DAY) {\n            // rounding behavior for HOURS\n            val.set(Calendar.HOUR, 0);\n            // always round hours in same manner\n            val.add(Calendar.HOUR_OF_DAY, \n                    (val.get(Calendar.MINUTE) >=30)? 1:0);\n\n        } \n        // Rest of cases are covered before the check for done\n\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}