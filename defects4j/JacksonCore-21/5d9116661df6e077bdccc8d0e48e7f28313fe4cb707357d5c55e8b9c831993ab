{
    "generation": "@Override\npublic JsonToken nextToken() throws IOException\n{\n    //...\n\n    case ID_FIELD_NAME:\n    {\n        final String name = delegate.getCurrentName();\n        f = _headContext.setFieldName(name);\n        if (f == TokenFilter.INCLUDE_ALL) {\n            _itemFilter = f;\n            if (!_includePath) {\n                if (_includeImmediateParent &&!_headContext.isStartHandled()) {\n                    t = _headContext.nextTokenToRead(); \n                    _exposedContext = _headContext;\n                }\n            }\n            return (_currToken = t);\n        }\n        if (f == null) {\n            delegate.nextToken();\n            delegate.skipChildren();\n            break;\n        }\n        f = f.includeProperty(name);\n        if (f == null) {\n            delegate.nextToken();\n            delegate.skipChildren();\n            break;\n        }\n        _itemFilter = f;\n        if (f == TokenFilter.INCLUDE_ALL) {\n            if (_includePath) {\n                if (_headContext.isStartHandled()) {\n                    _exposedContext = _headContext;\n                    return (_currToken = t);\n                }\n                return (_currToken = t);\n            }\n        }\n        if (_includePath) {\n            t = _nextTokenWithBuffering(_headContext);\n            if (t!= null) {\n                _currToken = t;\n                return t;\n            }\n        }\n        break;\n    }\n\n    //... default handling as before \n    default:\n    {\n        f = _itemFilter;\n        if (f == TokenFilter.INCLUDE_ALL) {\n            return (_currToken = t);\n        }\n        // and more (method truncated as other logic hasn't changed)\n        if (f!= null) {\n            f = _headContext.checkValue(f);\n            if (f == null) break;  \n        }\n\n        if ((f!= null) && (f!= TokenFilter.INCLUDE_ALL) && \n               (t.isValue())) {\n            f.filterFinishValue();  \n            _currToken = t;     \n            _exposedContext = _headContext; \n            return (_currToken);\n        }\n\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}