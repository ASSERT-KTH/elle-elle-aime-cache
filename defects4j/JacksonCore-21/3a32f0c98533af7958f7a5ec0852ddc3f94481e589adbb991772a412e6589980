{
    "generation": "@Override\npublic JsonToken nextToken() throws IOException {\n\n    // ... (code above this line remains the same)\n\n    JsonToken t = delegate.nextToken();\n    if (t == null) {\n        // no strict need to close, since we have no state here\n        _currToken = t;\n        return t;\n    }\n\n    // ... (code below this line changes)\n\n    // otherwise... to include or not?\n    TokenFilter f;\n\n    switch (t.id()) {\n    case ID_START_ARRAY:\n        // ... (code here remains the same)\n        break;\n\n    case ID_START_OBJECT:\n        // ... (code here remains the same)\n        break;\n\n    case ID_END_ARRAY:\n    case ID_END_OBJECT:\n        // ... (code here remains the same)\n        break;\n\n    case ID_FIELD_NAME:\n        // ... (code here remains the same)\n\n        // If the token is included...\n        if (f != null) {\n            _itemFilter = f;\n            if (_includePath) {\n                t = _nextTokenWithBuffering(_headContext);\n                if (t != null) {\n                    _currToken = t;\n                    return t;\n                }\n            } else {\n                // Move to the next token if the current one is included, but not if includePath is true\n                t = delegate.nextToken();\n                if (t != null) {\n                    _currToken = t;\n                    return t;\n                }\n            }\n        } else {\n            // Skip the next token if the current one is not included\n            delegate.nextToken();\n            delegate.skipChildren();\n        }\n        break;\n\n    default: // scalar value\n        // ... (code here remains the same)\n        break;\n    }\n\n    // ... (code below this line remains the same)\n\n    // We get here if token was not yet found; offlined handling\n    return _nextToken2();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}