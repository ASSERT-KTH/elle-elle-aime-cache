{
    "generation": "@Override\npublic JsonToken nextToken() throws IOException\n{\n    // 23-May-2017, tatu: To be honest, code here is rather hairy and I don't like all\n    //    conditionals; and it seems odd to return `null` but NOT considering input\n    //    as closed... would love a rewrite to simplify/clear up logic here.\n    \n    // Check for _allowMultipleMatches - false and at least there is one token - which is _currToken\n    // check for no buffered context _exposedContext - null\n    // If all the conditions matches then check for scalar / non-scalar property\n    if (!_allowMultipleMatches && (_currToken!= null) && (_exposedContext == null)) {\n        //if not scalar and ended successfully, and!includePath, then return null\n            if (_currToken.isStructEnd()) {\n                if (_headContext.isStartHandled()) {\n                    _exposedContext = null;\n                    _headContext = _headContext.getParent();\n                    if(_headContext!= null)\n                        _itemFilter = _headContext.getFilter();\n                    return (_currToken = null);\n                }\n            } else if (_currToken.isScalarValue()) {\n                //else if scalar, and scalar not present in obj/array and!includePath and INCLUDE_ALL matched once\n                // then return null \n                if (!_headContext.isStartHandled() && (_itemFilter == TokenFilter.INCLUDE_ALL)) {\n                    _exposedContext = null;\n                    _headContext = _headContext.getParent();\n                    if(_headContext!= null)\n                        _itemFilter = _headContext.getFilter();\n                    return (_currToken = null);\n                }\n        }\n    }\n    //... rest of the code...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}