{
    "generation": "@Override\npublic JsonToken nextToken() throws IOException {\n    if (!_allowMultipleMatches && (_currToken != null) && (_exposedContext == null)) {\n        if (_currToken.isStructEnd()) {\n            if (_headContext.isStartHandled()) {\n                return (_currToken = null);\n            }\n        } else if (_currToken.isScalarValue()) {\n            if (!_headContext.isStartHandled() && (_itemFilter == TokenFilter.INCLUDE_ALL)) {\n                return (_currToken = null);\n            }\n        }\n    }\n    \n    TokenFilterContext ctxt = _exposedContext;\n    if (ctxt != null) {\n        while (true) {\n            JsonToken t = ctxt.nextTokenToRead();\n            if (t != null) {\n                _currToken = t;\n                return t;\n            }\n            if (ctxt == _headContext) {\n                _exposedContext = null;\n                if (ctxt.inArray() || ctxt.inObject()) {\n                    t = delegate.getCurrentToken();\n                    _currToken = t;\n                    return t;\n                }\n                break;\n            }\n            ctxt = _headContext.findChildOf(ctxt);\n            _exposedContext = ctxt;\n            if (ctxt == null) {\n                throw _constructError(\"Unexpected problem: chain of filtered context broken\");\n            }\n        }\n    }\n\n    JsonToken t = delegate.nextToken();\n    if (t == null) {\n        _currToken = t;\n        return t;\n    }\n\n    TokenFilter f;\n    switch (t.id()) {\n        case ID_START_ARRAY:\n            handleStartArray();\n            break;\n\n        case ID_START_OBJECT:\n            handleStartObject();\n            break;\n\n        case ID_END_ARRAY:\n        case ID_END_OBJECT:\n            handleEnd(t);\n            break;\n\n        case ID_FIELD_NAME:\n            handleFieldName();\n            break;\n\n        default:\n            handleScalarValue(t);\n            break;\n    }\n    \n    return _nextToken2();\n}\n\nprivate void handleStartArray() throws IOException {\n    TokenFilter f = _itemFilter;\n    JsonToken t = JsonToken.START_ARRAY;\n    if (f == TokenFilter.INCLUDE_ALL) {\n        _headContext = _headContext.createChildArrayContext(f, true);\n        _currToken = t;\n        return;\n    }\n    if (f == null) {\n        delegate.skipChildren();\n        return;\n    }\n    f = _headContext.checkValue(f);\n    if (f == null) {\n        delegate.skipChildren();\n        return;\n    }\n    if (f != TokenFilter.INCLUDE_ALL) {\n        f = f.filterStartArray();\n    }\n    _itemFilter = f;\n    if (f == TokenFilter.INCLUDE_ALL) {\n        _headContext = _headContext.createChildArrayContext(f, true);\n        _currToken = t;\n        return;\n    }\n    _headContext = _headContext.createChildArrayContext(f, false);\n    if (_includePath) {\n        t = _nextTokenWithBuffering(_headContext);\n        if (t != null) {\n            _currToken = t;\n            return;\n        }\n    }\n}\n\nprivate void handleStartObject() throws IOException {\n    TokenFilter f = _itemFilter;\n    JsonToken t = JsonToken.START_OBJECT;\n    if (f == TokenFilter.INCLUDE_ALL) {\n        _headContext = _headContext.createChildObjectContext(f, true);\n        _currToken = t;\n        return;\n    }\n    if (f == null) {\n        delegate.skipChildren();\n        return;\n    }\n    f = _headContext.checkValue(f);\n    if (f == null) {\n        delegate.skipChildren();\n        return;\n    }\n    if (f != TokenFilter.INCLUDE_ALL) {\n        f = f.filterStartObject();\n    }\n    _itemFilter = f;\n    if (f == TokenFilter.INCLUDE_ALL) {\n        _headContext = _headContext.createChildObjectContext(f, true);\n        _currToken = t;\n        return;\n    }\n    _headContext = _headContext.createChildObjectContext(f, false);\n    if (_includePath) {\n        t = _nextTokenWithBuffering(_headContext);\n        if (t != null) {\n            _currToken = t;\n            return;\n        }\n    }\n}\n\nprivate void handleEnd(JsonToken t) throws IOException {\n    boolean returnEnd = _headContext.isStartHandled();\n    TokenFilter f = _headContext.getFilter();\n    if ((f != null) && (f != TokenFilter.INCLUDE_ALL)) {\n        f.filterFinishArray();\n    }\n    _headContext = _headContext.getParent();\n    _itemFilter = _headContext.getFilter();\n    if (returnEnd) {\n        _currToken = t;\n    }\n}\n\nprivate void handleFieldName() throws IOException {\n    final String name = delegate.getCurrentName();\n    TokenFilter f = _headContext.setFieldName(name);\n    JsonToken t = JsonToken.FIELD_NAME;\n    if (f == TokenFilter.INCLUDE_ALL) {\n        _itemFilter = f;\n        if (!_includePath) {\n            if (_includeImmediateParent && !_headContext.isStartHandled()) {\n                t = _headContext.nextTokenToRead(); \n                _exposedContext = _headContext;\n            }\n        }\n        _currToken = t;\n        return;\n    }\n    if (f == null) {\n        delegate.nextToken();\n        delegate.skipChildren();\n        return;\n    }\n    f = f.includeProperty(name);\n    if (f == null) {\n        delegate.nextToken();\n        delegate.skipChildren();\n        return;\n    }\n    _itemFilter = f;\n    if (f == TokenFilter.INCLUDE_ALL) {\n        if (_includePath) {\n            _currToken = t;\n            return;\n        }\n    }\n    if (_includePath) {\n        t = _nextTokenWithBuffering(_headContext);\n        if (t != null) {\n            _currToken = t;\n            return;\n        }\n    }\n}\n\nprivate void handleScalarValue(JsonToken t) throws IOException {\n    TokenFilter f = _itemFilter;\n    if (f == TokenFilter.INCLUDE_ALL) {\n        _currToken = t;\n        return;\n    }\n    if (f != null) {\n        f = _headContext.checkValue(f);\n        if ((f == TokenFilter.INCLUDE_ALL) || ((f != null) && f.includeValue(delegate))) {\n            _currToken = t;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}