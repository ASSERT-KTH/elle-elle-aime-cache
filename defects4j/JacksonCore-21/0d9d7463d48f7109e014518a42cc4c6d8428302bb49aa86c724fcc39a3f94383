{
    "generation": "@Override\npublic JsonToken nextToken() throws IOException\n{\n    // Check for _allowMultipleMatches - false and at least there is one token - which is _currToken\n    if (!_allowMultipleMatches && (_currToken != null) && (_exposedContext == null)) {\n        // If not scalar and ended successfully, and !includePath, then return null\n        if (_currToken.isStructEnd()) {\n            if (_headContext.isStartHandled()) {\n                return (_currToken = null);\n            }\n        } else if (_currToken.isScalarValue()) {\n            // Else if scalar, and scalar not present in obj/array and !includePath and INCLUDE_ALL matched once\n            // then return null\n            if (!_headContext.isStartHandled() && (_itemFilter == TokenFilter.INCLUDE_ALL)) {\n                return (_currToken = null);\n            }\n        }\n    }\n\n    // Nothing buffered?\n    TokenFilterContext ctxt = _exposedContext;\n\n    if (ctxt != null) {\n        while (true) {\n            JsonToken t = ctxt.nextTokenToRead();\n            if (t != null) {\n                _currToken = t;\n                return t;\n            }\n            // All done with buffered stuff?\n            if (ctxt == _headContext) {\n                _exposedContext = null;\n                if (ctxt.inArray()) {\n                    t = delegate.getCurrentToken();\n                    // Is this guaranteed to work without further checks?\n                    // No need to check if it's START_ARRAY as it's already been done in previous conditions.\n                    if (t != null) {\n                        _currToken = t;\n                        return t;\n                    }\n                }\n                break;\n            }\n            // If not, traverse down the context chain\n            ctxt = _headContext.findChildOf(ctxt);\n            _exposedContext = ctxt;\n            if (ctxt == null) { // should never occur\n                throw _constructError(\"Unexpected problem: chain of filtered context broken\");\n            }\n        }\n    }\n\n    // If not, need to read more. If we got any:\n    JsonToken t = delegate.nextToken();\n    if (t == null) {\n        // no strict need to close, since we have no state here\n        return t;\n    }\n\n    // Otherwise... to include or not?\n    TokenFilter f;\n\n    switch (t.id()) {\n        case ID_START_ARRAY:\n            // [... same as before ...]\n            break;\n        case ID_START_OBJECT:\n            // [... same as before ...]\n            break;\n        case ID_END_ARRAY:\n        case ID_END_OBJECT:\n            {\n                boolean returnEnd = _headContext.isStartHandled();\n                f = _headContext.getFilter();\n                if ((f != null) && (f != TokenFilter.INCLUDE_ALL)) {\n                    f.filterFinishArray();\n                }\n                _headContext = _headContext.getParent();\n                _itemFilter = _headContext.getFilter();\n                if (returnEnd) {\n                    _currToken = t;\n                    return t;\n                }\n            }\n            break;\n        // [... same as before for other cases ...]\n    }\n\n    // We get here if token was not yet found; offline handling\n    return _nextToken2();\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}