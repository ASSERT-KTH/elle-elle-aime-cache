{
    "generation": "@Override\npublic JsonToken nextToken() throws IOException {\n    // Check for _allowMultipleMatches - false and at least there is one token - which is _currToken\n    // check for no buffered context _exposedContext - null\n    // If all the conditions match then check for scalar / non-scalar property\n    if (!_allowMultipleMatches && (_currToken != null) && (_exposedContext == null)) {\n        if (_currToken.isStructEnd()) {\n            if (_headContext.isStartHandled()) {\n                return (_currToken = null);\n            }\n        } else if (_currToken.isScalarValue()) {\n            if (!_headContext.isStartHandled() && (_itemFilter == TokenFilter.INCLUDE_ALL)) {\n                return (_currToken = null);\n            }\n        }\n    }\n\n    // Anything buffered?\n    TokenFilterContext ctxt = _exposedContext;\n    if (ctxt != null) {\n        while (true) {\n            JsonToken t = ctxt.nextTokenToRead();\n            if (t != null) {\n                _currToken = t;\n                return t;\n            }\n            if (ctxt == _headContext) {\n                _exposedContext = null;\n                break;\n            }\n            ctxt = _headContext.findChildOf(ctxt);\n            _exposedContext = ctxt;\n            if (ctxt == null) {\n                throw _constructError(\"Unexpected problem: chain of filtered context broken\");\n            }\n        }\n    }\n\n    // Read more from the underlying delegate parser.\n    JsonToken t = delegate.nextToken();\n    if (t == null) {\n        _currToken = t;\n        return t;\n    }\n\n    TokenFilter f;\n    switch (t.id()) {\n    case ID_START_ARRAY:\n        f = _itemFilter;\n        if (f == TokenFilter.INCLUDE_ALL) {\n            _headContext = _headContext.createChildArrayContext(f, true);\n            return (_currToken = t);\n        }\n        if (f == null) {\n            delegate.skipChildren();\n            return nextToken();\n        }\n        f = _headContext.checkValue(f);\n        if (f == null) {\n            delegate.skipChildren();\n            return nextToken();\n        }\n        if (f != TokenFilter.INCLUDE_ALL) {\n            f = f.filterStartArray();\n        }\n        _itemFilter = f;\n        _headContext = _headContext.createChildArrayContext(f, f == TokenFilter.INCLUDE_ALL);\n        return (_includePath && f != TokenFilter.INCLUDE_ALL) ? _nextTokenWithBuffering(_headContext) : (_currToken = t);\n\n    case ID_START_OBJECT:\n        f = _itemFilter;\n        if (f == TokenFilter.INCLUDE_ALL) {\n            _headContext = _headContext.createChildObjectContext(f, true);\n            return (_currToken = t);\n        }\n        if (f == null) {\n            delegate.skipChildren();\n            return nextToken();\n        }\n        f = _headContext.checkValue(f);\n        if (f == null) {\n            delegate.skipChildren();\n            return nextToken();\n        }\n        if (f != TokenFilter.INCLUDE_ALL) {\n            f = f.filterStartObject();\n        }\n        _itemFilter = f;\n        _headContext = _headContext.createChildObjectContext(f, f == TokenFilter.INCLUDE_ALL);\n        return (_includePath && f != TokenFilter.INCLUDE_ALL) ? _nextTokenWithBuffering(_headContext) : (_currToken = t);\n\n    case ID_END_ARRAY:\n    case ID_END_OBJECT:\n        boolean returnEnd = _headContext.isStartHandled();\n        f = _headContext.getFilter();\n        if (f != null && f != TokenFilter.INCLUDE_ALL) {\n            f.filterFinishArray();\n        }\n        _headContext = _headContext.getParent();\n        _itemFilter = _headContext.getFilter();\n        return returnEnd ? (_currToken = t) : nextToken();\n\n    case ID_FIELD_NAME:\n        String name = delegate.getCurrentName();\n        f = _headContext.setFieldName(name);\n        if (f == TokenFilter.INCLUDE_ALL) {\n            _itemFilter = f;\n            if (!_includePath && _includeImmediateParent && !_headContext.isStartHandled()) {\n                t = _headContext.nextTokenToRead();\n                _exposedContext = _headContext;\n            }\n            return (_currToken = t);\n        }\n        if (f == null || (f = f.includeProperty(name)) == null) {\n            delegate.nextToken();\n            delegate.skipChildren();\n            return nextToken();\n        }\n        _itemFilter = f;\n        if (f == TokenFilter.INCLUDE_ALL) {\n            return (_includePath) ? _nextTokenWithBuffering(_headContext) : (_currToken = t);\n        }\n        return (_includePath) ? _nextTokenWithBuffering(_headContext) : nextToken();\n\n    default: \n        f = _itemFilter;\n        if (f == TokenFilter.INCLUDE_ALL) {\n            return (_currToken = t);\n        }\n        if (f != null) {\n            f = _headContext.checkValue(f);\n            if (f == TokenFilter.INCLUDE_ALL || (f != null && f.includeValue(delegate))) {\n                return (_currToken = t);\n            }\n        }\n        return nextToken();\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": true,
    "test": false
}