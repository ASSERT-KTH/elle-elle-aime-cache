{
    "generation": "@Override\npublic JsonToken nextToken() throws IOException {\n    // ... rest of the code ...\n\n    // Check for _allowMultipleMatches - false and at least there is one token - which is _currToken\n    // check for no buffered context _exposedContext - null\n    // If all conditions match, then check for scalar / non-scalar properties\n    if (!_allowMultipleMatches && (_currToken != null) && (_exposedContext == null)) {\n        // If not scalar and ended successfully, and !includePath, then return null\n        if (_currToken.isStructEnd()) {\n            if (_headContext.isStartHandled()) {\n                return (_currToken = null);\n            }\n        } else if (_currToken.isScalarValue()) {\n            // Else if scalar, and scalar not present in obj/array and !includePath and INCLUDE_ALL matched once\n            // then return null\n            if (!_headContext.isStartHandled() && (_itemFilter == TokenFilter.INCLUDE_ALL)) {\n                return (_currToken = null);\n            }\n        }\n    }\n\n    // Anything buffered?\n    TokenFilterContext ctxt = _exposedContext;\n\n    if (ctxt != null) {\n        while (true) {\n            JsonToken t = ctxt.nextTokenToRead();\n            if (t != null) {\n                _currToken = t;\n                return t;\n            }\n            // All done with buffered stuff?\n            if (ctxt == _headContext) {\n                _exposedContext = null;\n                break;\n            }\n            // If not, traverse down the context chain\n            ctxt = _headContext.findChildOf(ctxt);\n            _exposedContext = ctxt;\n            if (ctxt == null) {\n                throw _constructError(\"Unexpected problem: chain of filtered context broken\");\n            }\n        }\n\n        // If we got here, it means we've processed all buffered tokens. If there's a current token, return it.\n        // Otherwise, continue processing more tokens.\n        if (_currToken != null) {\n            return _currToken;\n        }\n    }\n\n    // ... rest of the code ...\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": false,
    "test": false
}