{
    "generation": "public static Try<Done> registerCallContext(\n    final ActorRef<CallContextProviderMessage> callContextProvider,\n    final String callContext,\n    final AriCommand ariCommand) {\n\n  // Check if the command is a creation command\n  if (!ariCommand.extractCommandType().isCreationCommand()) {\n    // If not a creation command, immediately return success without further action\n    return Try.success(Done.done());\n  }\n\n  // Extract resource relations and find the created resource\n  final Option<AriResourceRelation> maybeCreatedRelation =\n      ariCommand.extractResourceRelations().find(AriResourceRelation::isCreated);\n\n  // If no created resource is found, fail with an appropriate error message\n  if (maybeCreatedRelation.isEmpty()) {\n    return Try.failure(\n        new RuntimeException(\n            String.format(\n                \"Failed to extract resourceId from command '%s'\", ariCommand.toString())));\n  }\n\n  // Get the resource from the relation\n  final AriResource resource = maybeCreatedRelation.get().getResource();\n\n  // Register the call context with the provider\n  callContextProvider.tell(new RegisterCallContext(resource.getId(), callContext));\n\n  // Return success\n  return Try.success(Done.done());\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}