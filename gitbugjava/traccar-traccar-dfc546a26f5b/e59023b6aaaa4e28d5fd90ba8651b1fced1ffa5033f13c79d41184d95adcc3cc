{
    "generation": "    private List<Position> decodeBinaryE(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n        List<Position> positions = new LinkedList<>();\n        buf.readerIndex(buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',') + 1);\n        String imei = buf.readSlice(15).toString(StandardCharsets.US_ASCII);\n        buf.skipBytes(1 + 3 + 1);\n        DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);\n        if (deviceSession == null) {\n            return null;\n        }\n        buf.readUnsignedIntLE(); // remaining cache\n        int count = buf.readUnsignedShortLE();\n        for (int i = 0; i < count; i++) {\n            Position position = new Position(getProtocolName());\n            position.setDeviceId(deviceSession.getDeviceId());\n            buf.readUnsignedShortLE(); // length\n            buf.readUnsignedShortLE(); // index\n            int paramCount = buf.readUnsignedByte();\n            for (int j = 0; j < paramCount; j++) {\n                boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n                int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n                switch (id) {\n                    case 0x01:\n                        position.set(Position.KEY_EVENT, buf.readUnsignedByte());\n                        break;\n                    case 0x05:\n                        position.setValid(buf.readUnsignedByte() > 0);\n                        break;\n                    case 0x06:\n                        position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                        break;\n                    case 0x07:\n                        position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                        break;\n                    case 0x14:\n                        position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());\n                        break;\n                    case 0x15:\n                        position.set(Position.KEY_INPUT, buf.readUnsignedByte());\n                        break;\n                    case 0x47:\n                        int lockState = buf.readUnsignedByte();\n                        if (lockState > 0) {\n                            position.set(Position.KEY_LOCK, lockState == 2);\n                        }\n                        break;\n                    case 0x97:\n                        position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());\n                        break;\n                    case 0x9D:\n                        position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());\n                        break;\n                    case 0xFE69:\n                        position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                        break;\n                    default:\n                        buf.readUnsignedByte();\n                        break;\n                }\n            }\n            paramCount = buf.readUnsignedByte();\n            for (int j = 0; j < paramCount; j++) {\n                boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n                int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n                switch (id) {\n                    case 0x08:\n                        position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));\n                        break;\n                    case 0x09:\n                        position.setCourse(buf.readUnsignedShortLE());\n                        break;\n                    case 0x0A:\n                        position.set(Position.KEY_HDOP, buf.readUnsignedShortLE());\n                        break;\n                    case 0x0B:\n                        position.setAltitude(buf.readShortLE());\n                        break;\n                    case 0x16:\n                        position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShortLE() * 0.01);\n                        break;\n                    case 0x19:\n                        position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);\n                        break;\n                    case 0x1A:\n                        position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);\n                        break;\n                    case 0x40:\n                        position.set(Position.KEY_EVENT, buf.readUnsignedShortLE());\n                        break;\n                    case 0x91:\n                    case 0x92:\n                        position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShortLE());\n                        break;\n                    case 0x98:\n                        position.set(Position.KEY_FUEL_USED, buf.readUnsignedShortLE());\n                        break;\n                    case 0x99:\n                        position.set(Position.KEY_RPM, buf.readUnsignedShortLE());\n                        break;\n                    case 0x9C:\n                        position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedShortLE());\n                        break;\n                    case 0x9F:\n                        position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShortLE());\n                        break;\n                    case 0xC9:\n                        position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShortLE());\n                        break;\n                    default:\n                        buf.readUnsignedShortLE();\n                        break;\n                }\n            }\n            paramCount = buf.readUnsignedByte();\n            for (int j = 0; j < paramCount; j++) {\n                boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n                int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n                switch (id) {\n                    case 0x02:\n                        position.setLatitude(buf.readIntLE() * 0.000001);\n                        break;\n                    case 0x03:\n                        position.setLongitude(buf.readIntLE() * 0.000001);\n                        break;\n                    case 0x04:\n                        position.setTime(new Date((946684800 + buf.readUnsignedIntLE()) * 1000)); // 2000-01-01\n                        break;\n                    case 0x0C:\n                    case 0x9B:\n                        position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());\n                        break;\n                    case 0x0D:\n                        position.set(\"runtime\", buf.readUnsignedIntLE());\n                        break;\n                    case 0x25:\n                        position.set(Position.KEY_DRIVER_UNIQUE_ID, String.valueOf(buf.readUnsignedIntLE()));\n                        break;\n                    case 0xA0:\n                        position.set(Position.KEY_FUEL_USED, buf.readUnsignedIntLE() * 0.001);\n                        break;\n                    case 0xA2:\n                        position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedIntLE() * 0.01);\n                        break;\n                    default:\n                        buf.readUnsignedIntLE();\n                        break;\n                }\n            }\n            paramCount = buf.readUnsignedByte();\n            for (int j = 0; j < paramCount; j++) {\n                boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n                int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n                int length = buf.readUnsignedByte();\n                switch (id) {\n                    case 0x2A:\n                    case 0x2B:\n                    case 0x2C:\n                    case 0x2D:\n                    case 0x2E:\n                    case 0x2F:\n                    case 0x30:\n                    case 0x31:\n                        buf.readUnsignedByte(); // label\n                        position.set(Position.PREFIX_TEMP + (id - 0x2A), buf.readShortLE() * 0.01);\n                        break;\n                    case 0xFE31:\n                        buf.readUnsignedByte(); // alarm protocol\n                        buf.readUnsignedByte(); // alarm type\n                        buf.skipBytes(length - 2);\n                        break;\n// buggy code\n//                    case 0x33:\n//                    case 0x34:\n//                    case 0x35:\n//                    case 0x36:\n//                    case 0x37:\n//                    case 0x38:\n//                    case 0x39:\n//                    case 0x3A:\n//                    case 0x3B:\n//                    case 0x3C:\n//                    case 0x3D:\n//                    case 0x3E:\n//                    case 0x3F:\n//                    case 0x41:\n//                    case 0x42:\n//                    case 0x43:\n//                    case 0x44:\n//                    case 0x45:\n//                    case 0x46:\n//                    case 0x47:\n//                    case 0x48:\n//                    case 0x49:\n//                    case 0x4A:\n//                    case 0x4B:\n//                    case 0x4C:\n//                    case 0x4D:\n//                    case 0x4E:\n//                    case 0x4F:\n//                    case 0x50:\n//                    case 0x51:\n//                    case 0x52:\n//                    case 0x53:\n//                    case 0x54:\n//                    case 0x55:\n//                    case 0x56:\n//                    case 0x57:\n//                    case 0x58:\n//                    case 0x59:\n//                    case 0x5A:\n//                    case 0x5B:\n//                    case 0x5C:\n//                    case 0x5D:\n//                    case 0x5E:\n//                    case 0x5F:\n//                    case 0x60:\n//                    case 0x61:\n//                    case 0x62:\n//                    case 0x63:\n//                    case 0x64:\n//                    case 0x65:\n//                    case 0x66:\n//                    case 0x67:\n//                    case 0x68:\n//                    case 0x69:\n//                    case 0x6A:\n//                    case 0x6B:\n//                    case 0x6C:\n//                    case 0x6D:\n//                    case 0x6E:\n//                    case 0x6F:\n//                    case 0x70:\n//                    case 0x71:\n//                    case 0x72:\n//                    case 0x73:\n//                    case 0x74:\n//                    case 0x75:\n//                    case 0x76:\n//                    case 0x77:\n//                    case 0x78:\n//                    case 0x79:\n//                    case 0x7A:\n//                    case 0x7B:\n//                    case 0x7C:\n//                    case 0x7D:\n//                    case 0x7E:\n//                    case 0x7F:\n//                    case 0x80:\n//                    case 0x81:\n//                    case 0x82:\n//                    case 0x83:\n//                    case 0x84:\n//                    case 0x85:\n//                    case 0x86:\n//                    case 0x87:\n//                    case 0x88:\n//                    case 0x89:\n//                    case 0x8A:\n//                    case 0x8B:\n//                    case 0x8C:\n//                    case 0x8D:\n//                    case 0x8E:\n//                    case 0x8F:\n//                    case 0x90:\n//                    case 0x91:\n//                    case 0x92:\n//                    case 0x93:\n//                    case 0x94:\n//                    case 0x95:\n//                    case 0x96:\n//                    case 0x97:\n//                    case 0x98:\n//                    case 0x99:\n//                    case 0x9A:\n//                    case 0x9B:\n//                    case 0x9C:\n//                    case 0x9D:\n//                    case 0x9E:\n//                    case 0x9F:\n//                    case 0xA0:\n//                    case 0xA1:\n//                    case 0xA2:\n//                    case 0xA3:\n//                    case 0xA4:\n//                    case 0xA5:\n//                    case 0xA6:\n//                    case 0xA7:\n//                    case 0xA8:\n//                    case 0xA9:\n//                    case 0xAA:\n//                    case 0xAB:\n//                    case 0xAC:\n//                    case 0xAD:\n//                    case 0xAE:\n//                    case 0xAF:\n//                    case 0xB0:\n//                    case 0xB1:\n//                    case 0xB2:\n//                    case 0xB3:\n//                    case 0xB4:\n//                    case 0xB5:\n//                    case 0xB6:\n//                    case 0xB7:\n//                    case 0xB8:\n//                    case 0xB9:\n//                    case 0xBA:\n//                    case 0xBB:\n//                    case 0xBC:\n//                    case 0xBD:\n//                    case 0xBE:\n//                    case 0xBF:\n//                    case 0xC0:\n//                    case 0xC1:\n//                    case 0xC2:\n//                    case 0xC3:\n//                    case 0xC4:\n//                    case 0xC5:\n//                    case 0xC6:\n//                    case 0xC7:\n//                    case 0xC8:\n//                    case 0xC9:\n//                    case 0xCA:\n//                    case 0xCB:\n//                    case 0xCC:\n//                    case 0xCD:\n//                    case 0xCE:\n//                    case 0xCF:\n//                    case 0xD0:\n//                    case 0xD1:\n//                    case 0xD2:\n//                    case 0xD3:\n//                    case 0xD4:\n//                    case 0xD5:\n//                    case 0xD6:\n//                    case 0xD7:\n//                    case 0xD8:\n//                    case 0xD9:\n//                    case 0xDA:\n//                    case 0xDB:\n//                    case 0xDC:\n//                   \n                    default:\n                        buf.skipBytes(length);\n                        break;\n                }\n            }\n            positions.add(position);\n        }\n        return positions;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}