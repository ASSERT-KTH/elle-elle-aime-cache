{
    "generation": "@Override\nprotected Object decode(\n        Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {\n\n    if (!(msg instanceof String)) {\n        return null;\n    }\n    String sentence = (String) msg;\n\n    if (sentence.startsWith(\"!1,\")) {\n        int index = sentence.indexOf(',', 3);\n        if (index < 0) {\n            index = sentence.length();\n        }\n        if (index > 3) {\n            getDeviceSession(channel, remoteAddress, sentence.substring(3, index));\n        } else {\n            getDeviceSession(channel, remoteAddress, \"\");\n        }\n        return null;\n    }\n\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);\n    if (deviceSession == null || !sentence.matches(\"![35A-D],.*\")) {\n        return null;\n    }\n\n    Position position = new Position(getProtocolName());\n    String deviceId = deviceSession.getDeviceId();\n    if (deviceId != null) {\n        position.setDeviceId(deviceId);\n    } else {\n        position.setDeviceId(\"unknown\");\n    }\n\n    if (sentence.length() < 4) {\n        return null;\n    }\n    String type = sentence.substring(1, 2);\n    position.set(Position.KEY_TYPE, type);\n\n    if (type.equals(\"3\")) {\n        getLastLocation(position, null);\n        position.set(Position.KEY_RESULT, sentence.substring(3));\n        return position;\n    } else if (type.equals(\"5\")) {\n        String[] values = sentence.split(\",\");\n        if (values.length > 1) {\n            position.set(Position.KEY_RSSI, Integer.parseInt(values[1]));\n        }\n        if (values.length > 3) {\n            position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[3]));\n        }\n        return position;\n    } else if (type.equals(\"B\") || type.equals(\"D\")) {\n        String[] values = sentence.split(\",\");\n        if (values.length != 13) {\n            return null;\n        }\n        try {\n            SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd/MM/yy\", Locale.US);\n            SimpleDateFormat timeFormat = new SimpleDateFormat(\"HH:mm:ss\", Locale.US);\n            Date date = dateFormat.parse(values[1]);\n            Date time = timeFormat.parse(values[2]);\n            position.setTime(date.getTime() + time.getTime());\n            position.setLatitude(Double.parseDouble(values[3]));\n            position.setLongitude(Double.parseDouble(values[4]));\n            position.set(Position.KEY_SATELLITES, Integer.parseInt(values[9]));\n            position.set(Position.KEY_SATELLITES_VISIBLE, Integer.parseInt(values[10]));\n            position.set(Position.KEY_HDOP, Double.parseDouble(values[8]));\n        } catch (ParseException e) {\n            return null;\n        }\n        return position;\n    } else if (type.equals(\"C\")) {\n        String[] values = sentence.split(\",\");\n        if (values.length != 12) {\n            return null;\n        }\n        try {\n            SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd/M/yy\", Locale.US);\n            SimpleDateFormat timeFormat = new SimpleDateFormat(\"H:mm:ss\", Locale.US);\n            Date date = dateFormat.parse(values[1]);\n            Date time = timeFormat.parse(values[2]);\n            position.setTime(date.getTime() + time.getTime());\n            position.setLatitude(Double.parseDouble(values[3]));\n            position.setLongitude(Double.parseDouble(values[4]));\n            position.set(Position.KEY_HDOP, Double.parseDouble(values[8]));\n            position.set(Position.KEY_SATELLITES, Integer.parseInt(values[9]));\n        } catch (ParseException e) {\n            return null;\n        }\n        return position;\n    } else if (type.equals(\"A\")) {\n        String[] values = sentence.split(\",\");\n        if (values.length != 7) {\n            return null;\n        }\n        try {\n            SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd/MM/yy\", Locale.US);\n            SimpleDateFormat timeFormat = new SimpleDateFormat(\"HH:mm:ss\", Locale.US);\n            Date date = dateFormat.parse(values[1]);\n            Date time = timeFormat.parse(values[2]);\n            position.setTime(date.getTime() + time.getTime());\n            position.setLatitude(Double.parseDouble(values[3]));\n            position.setLongitude(Double.parseDouble(values[4]));\n            position.setSpeed(Double.parseDouble(values[5]));\n            position.setCourse(Integer.parseInt(values[6]));\n        } catch (ParseException e) {\n            return null;\n        }\n        return position;\n    }\n\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}