{
    "generation": "private List<Position> decodeBinaryE(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n    List<Position> positions = new LinkedList<>();\n\n    buf.readerIndex(buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',') + 1);\n    String imei = buf.readSlice(15).toString(StandardCharsets.US_ASCII);\n    buf.skipBytes(1 + 3 + 1);\n\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);\n    if (deviceSession == null) {\n        return null;\n    }\n\n    buf.readUnsignedIntLE(); // remaining cache\n    int count = buf.readUnsignedShortLE();\n\n    for (int i = 0; i < count; i++) {\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        buf.readUnsignedShortLE(); // length\n        buf.readUnsignedShortLE(); // index\n\n        int paramCount = buf.readUnsignedByte();\n        for (int j = 0; j < paramCount; j++) {\n            boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n            int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n            switch (id) {\n                case 0x01:\n                    position.set(Position.KEY_EVENT, buf.readUnsignedByte());\n                    break;\n                case 0x05:\n                    position.setValid(buf.readUnsignedByte() > 0);\n                    break;\n                case 0x06:\n                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                    break;\n                case 0x07:\n                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                    break;\n                case 0x14:\n                    position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());\n                    break;\n                case 0x15:\n                    position.set(Position.KEY_INPUT, buf.readUnsignedByte());\n                    break;\n                case 0x97:\n                    position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());\n                    break;\n                case 0x9D:\n                    position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());\n                    break;\n                case 0xFE69:\n                    position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                    break;\n                default:\n                    buf.readUnsignedByte();\n                    break;\n            }\n        }\n\n        paramCount = buf.readUnsignedByte();\n        for (int j = 0; j < paramCount; j++) {\n            boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n            int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n            switch (id) {\n                case 0x08:\n                    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));\n                    break;\n                case 0x09:\n                    position.setCourse(buf.readUnsignedShortLE());\n                    break;\n                case 0x0A:\n                    position.set(Position.KEY_HDOP, buf.readUnsignedShortLE());\n                    break;\n                case 0x0B:\n                    position.setAltitude(buf.readShortLE());\n                    break;\n                case 0x02:\n                    position.setLatitude(buf.readIntLE() / 1800000.0);\n                    break;\n                case 0x03:\n                    position.setLongitude(buf.readIntLE() / 1800000.0);\n                    break;\n                case 0x04:\n                    position.setTime(convertTimestamp(buf.readUnsignedIntLE()));\n                    break;\n                case 0x0C:\n                    position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());\n                    break;\n                case 0x0D:\n                    position.set(Position.KEY_POWER, buf.readUnsignedShortLE() / 1000.0);\n                    break;\n                case 0x0E:\n                    position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() / 1000.0);\n                    break;\n                case 0x0F:\n                    position.set(Position.KEY_OBD_SPEED, buf.readUnsignedByte());\n                    break;\n                case 0x10:\n                    position.set(Position.KEY_OBD_RPM, buf.readUnsignedShortLE());\n                    break;\n                case 0x11:\n                    position.set(Position.KEY_OBD_TEMPERATURE, buf.readByte());\n                    break;\n                case 0x12:\n                    position.set(Position.KEY_OBD_FUEL_RATE, buf.readUnsignedShortLE() / 100.0);\n                    break;\n                case 0x13:\n                    position.set(Position.KEY_OBD_ODOMETER, buf.readUnsignedIntLE());\n                    break;\n                case 0x16:\n                    position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShortLE());\n                    break;\n                case 0x17:\n                    position.set(Position.PREFIX_ADC + 2, buf.readUnsignedShortLE());\n                    break;\n                case 0x18:\n                    position.set(Position.KEY_RFID, buf.readSlice(buf.readUnsignedByte()).toString(StandardCharsets.US_ASCII));\n                    break;\n                case 0x19:\n                    position.set(Position.KEY_STATUS, buf.readUnsignedShortLE());\n                    break;\n                case 0x1A:\n                    position.set(Position.KEY_ICCID, buf.readSlice(buf.readUnsignedByte()).toString(StandardCharsets.US_ASCII));\n                    break;\n                case 0x1B:\n                    position.set(Position.KEY_DRIVER_UNIQUE_ID, buf.readSlice(buf.readUnsignedByte()).toString(StandardCharsets.US_ASCII));\n                    break;\n                case 0x1C:\n                    position.set(Position.KEY_EXTENDED_STATUS, buf.readUnsignedIntLE());\n                    break;\n                case 0x1D:\n                    position.set(Position.KEY_GNSS_STATUS, buf.readUnsignedByte());\n                    break;\n                case 0x1E:\n                    position.set(Position.KEY_GSM_STRENGTH, buf.readUnsignedByte());\n                    break;\n                case 0x1F:\n                    position.set(Position.KEY_AGGREGRATE_APPROACH, buf.readUnsignedShortLE());\n                    break;\n                case 0x20:\n                    position.set(Position.KEY_JAMMING, buf.readUnsignedByte());\n                    break;\n                default:\n                    buf.readUnsignedByte();\n                    break;\n            }\n        }\n\n        positions.add(position);\n    }\n\n    return positions;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}