{
    "generation": "private void readBinaryCustomData(Position position, ByteBuf buf, String form) {\n    CellTower cellTower = new CellTower();\n    String[] keys = form.substring(1).split(\"%\");\n    for (String key : keys) {\n        switch (key) {\n            // Existing cases...\n            case \"GN\":\n                String gnString = readString(buf);\n                try {\n                    String[] parts = gnString.split(\",\");\n                    if (parts.length == 2) {\n                        double latitude = Double.parseDouble(parts[0]);\n                        double longitude = Double.parseDouble(parts[1]);\n                        // Validate latitude and longitude ranges\n                        if (latitude < -90 || latitude > 90) {\n                            throw new IllegalArgumentException(\"Latitude out of range: \" + latitude);\n                        }\n                        if (longitude < -180 || longitude > 180) {\n                            throw new IllegalArgumentException(\"Longitude out of range: \" + longitude);\n                        }\n                        position.setLatitude(latitude);\n                        position.setLongitude(longitude);\n                    } else {\n                        LOG.warning(\"Invalid GN string format: \" + gnString);\n                    }\n                } catch (NumberFormatException e) {\n                    LOG.warning(\"Error parsing GN string: \" + gnString + \", \" + e.getMessage());\n                }\n                break;\n            // Other cases...\n            default:\n                break;\n        }\n    }\n\n    if (cellTower.getMobileCountryCode() != null\n            && cellTower.getMobileNetworkCode() != null\n            && cellTower.getCellId() != null && cellTower.getCellId() != 0\n            && cellTower.getLocationAreaCode() != null) {\n        position.setNetwork(new Network(cellTower));\n    } else if (cellTower.getSignalStrength() != null) {\n        position.set(Position.KEY_RSSI, cellTower.getSignalStrength());\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}