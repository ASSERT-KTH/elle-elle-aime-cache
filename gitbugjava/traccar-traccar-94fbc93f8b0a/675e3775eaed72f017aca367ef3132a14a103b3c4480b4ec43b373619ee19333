{
    "generation": "private void readBinaryCustomData(Position position, ByteBuf buf, String form) {\n    CellTower cellTower = new CellTower();\n    String[] keys = form.substring(1).split(\"%\");\n    for (String key : keys) {\n        switch (key) {\n            case \"SA\":\n                int satellites = buf.readUnsignedByte();\n                position.set(Position.KEY_SATELLITES, satellites);\n                LOG.debug(\"Set satellites: {}\", satellites);\n                break;\n            case \"MV\":\n                double power = buf.readUnsignedShort() * 0.1;\n                position.set(Position.KEY_POWER, power);\n                LOG.debug(\"Set power: {}\", power);\n                break;\n            case \"BV\":\n                double battery = buf.readUnsignedShort() * 0.1;\n                position.set(Position.KEY_BATTERY, battery);\n                LOG.debug(\"Set battery: {}\", battery);\n                break;\n            case \"GQ\":\n                int signalStrength = buf.readUnsignedByte();\n                cellTower.setSignalStrength(signalStrength);\n                LOG.debug(\"Set signal strength: {}\", signalStrength);\n                break;\n            case \"CE\":\n                int cellId = buf.readUnsignedInt();\n                cellTower.setCellId(cellId);\n                LOG.debug(\"Set cell ID: {}\", cellId);\n                break;\n            case \"LC\":\n                int locationAreaCode = buf.readUnsignedShort();\n                cellTower.setLocationAreaCode(locationAreaCode);\n                LOG.debug(\"Set location area code: {}\", locationAreaCode);\n                break;\n            case \"CN\":\n                int combinedMobileCodes = (int) (buf.readUnsignedInt() % 100000); // cccnn\n                int mobileCountryCode = combinedMobileCodes / 100;\n                int mobileNetworkCode = combinedMobileCodes % 100;\n                cellTower.setMobileCountryCode(mobileCountryCode);\n                cellTower.setMobileNetworkCode(mobileNetworkCode);\n                LOG.debug(\"Set mobile country code: {}, mobile network code: {}\", mobileCountryCode, mobileNetworkCode);\n                break;\n            case \"RL\":\n                int rxlev = buf.readUnsignedByte(); // rxlev\n                LOG.debug(\"Read rxlev: {}\", rxlev);\n                break;\n            case \"PC\":\n                int count1 = buf.readUnsignedInt();\n                position.set(Position.PREFIX_COUNT + 1, count1);\n                LOG.debug(\"Set count1: {}\", count1);\n                break;\n            case \"AT\":\n                int altitude = buf.readUnsignedInt();\n                position.setAltitude(altitude);\n                LOG.debug(\"Set altitude: {}\", altitude);\n                break;\n            case \"RP\":\n                int rpm = buf.readUnsignedShort();\n                position.set(Position.KEY_RPM, rpm);\n                LOG.debug(\"Set RPM: {}\", rpm);\n                break;\n            case \"GS\":\n                int rssi = buf.readUnsignedByte();\n                position.set(Position.KEY_RSSI, rssi);\n                LOG.debug(\"Set RSSI: {}\", rssi);\n                break;\n            case \"DT\":\n                boolean archive = buf.readUnsignedByte() == 1;\n                position.set(Position.KEY_ARCHIVE, archive);\n                LOG.debug(\"Set archive: {}\", archive);\n                break;\n            case \"VN\":\n                String vin = readString(buf);\n                position.set(Position.KEY_VIN, vin);\n                LOG.debug(\"Set VIN: {}\", vin);\n                break;\n            case \"MF\":\n                int massAirFlow = buf.readUnsignedShort(); // mass air flow rate\n                LOG.debug(\"Read mass air flow: {}\", massAirFlow);\n                break;\n            case \"EL\":\n                int engineLoad = buf.readUnsignedByte(); // engine load\n                LOG.debug(\"Read engine load: {}\", engineLoad);\n                break;\n            case \"TR\":\n                int throttle = buf.readUnsignedByte();\n                position.set(Position.KEY_THROTTLE, throttle);\n                LOG.debug(\"Set throttle: {}\", throttle);\n                break;\n            case \"ET\":\n                int temp1 = buf.readUnsignedShort();\n                position.set(Position.PREFIX_TEMP + 1, temp1);\n                LOG.debug(\"Set temperature 1: {}\", temp1);\n                break;\n            case \"FL\":\n                int fuelLevel = buf.readUnsignedByte();\n                position.set(Position.KEY_FUEL_LEVEL, fuelLevel);\n                LOG.debug(\"Set fuel level: {}\", fuelLevel);\n                break;\n            case \"ML\":\n                int milStatus = buf.readUnsignedByte(); // mil status\n                LOG.debug(\"Read mil status: {}\", milStatus);\n                break;\n            case \"FC\":\n                int fuelConsumption = buf.readUnsignedInt();\n                position.set(Position.KEY_FUEL_CONSUMPTION, fuelConsumption);\n                LOG.debug(\"Set fuel consumption: {}\", fuelConsumption);\n                break;\n            case \"CI\":\n                String formatString = readString(buf); // format string\n                LOG.debug(\"Read format string: {}\", formatString);\n                break;\n            case \"AV1\":\n                int adc1 = buf.readUnsignedShort();\n                position.set(Position.PREFIX_ADC + 1, adc1);\n                LOG.debug(\"Set ADC1: {}\", adc1);\n                break;\n            case \"NC\":\n                String gsmNeighborCell = readString(buf); // gsm neighbor cell info\n                LOG.debug(\"Read GSM neighbor cell: {}\", gsmNeighborCell);\n                break;\n            case \"SM\":\n                int maxSpeed = buf.readUnsignedShort(); // max speed between reports\n                LOG.debug(\"Read max speed: {}\", maxSpeed);\n                break;\n            case \"GL\":\n                String googleLink = readString(buf); // google link\n                LOG.debug(\"Read Google link: {}\", googleLink);\n                break;\n            case \"MA\":\n                String macAddress = readString(buf); // mac address\n                LOG.debug(\"Read MAC address: {}\", macAddress);\n                break;\n            case \"PD\":\n                int pendingCodeStatus = buf.readUnsignedByte(); // pending code status\n                LOG.debug(\"Read pending code status: {}\", pendingCodeStatus);\n                break;\n            case \"CD\":\n                String iccid = readString(buf);\n                position.set(Position.KEY_ICCID, iccid);\n                LOG.debug(\"Set ICCID: {}\", iccid);\n                break;\n            case \"CM\":\n                long imsi = buf.readLong(); // imsi\n                LOG.debug(\"Read IMSI: {}\", imsi);\n                break;\n            case \"GN\":\n                buf.skipBytes(60); // g sensor data\n                LOG.debug(\"Skipped G sensor data\");\n                break;\n            case \"GV\":\n                buf.skipBytes(6); // maximum g force\n                LOG.debug(\"Skipped maximum G force data\");\n                break;\n            case \"ME\":\n                long imei = buf.readLong(); // imei\n                LOG.debug(\"Read IMEI: {}\", imei);\n                break;\n            case \"IA\":\n                int intakeAirTemp = buf.readUnsignedByte(); // intake air temperature\n                LOG.debug(\"Read intake air temperature: {}\", intakeAirTemp);\n                break;\n            case \"MP\":\n                int manifoldPressure = buf.readUnsignedByte(); // manifold absolute pressure\n                LOG.debug(\"Read manifold pressure: {}\", manifoldPressure);\n                break;\n            case \"EO\":\n                int odometer = UnitsConverter.metersFromMiles(buf.readUnsignedInt());\n                position.set(Position.KEY_ODOMETER, odometer);\n                LOG.debug(\"Set odometer: {}\", odometer);\n                break;\n            case \"EH\":\n                int hours = buf.readUnsignedInt() * 360000;\n                position.set(Position.KEY_HOURS, hours);\n                LOG.debug(\"Set hours: {}\", hours);\n                break;\n            case \"ZO1\":\n                int brakeStrokeStatus = buf.readUnsignedByte(); // brake stroke status\n                LOG.debug(\"Read brake stroke status: {}\", brakeStrokeStatus);\n                break;\n            case \"ZO2\":\n                int warningIndicatorStatus = buf.readUnsignedByte(); // warning indicator status\n                LOG.debug(\"Read warning indicator status: {}\", warningIndicatorStatus);\n                break;\n            case \"ZO3\":\n                int absControlStatus = buf.readUnsignedByte(); // abs control status\n                LOG.debug(\"Read ABS control status: {}\", absControlStatus);\n                break;\n            case \"ZO4\":\n                int throttleZO4 = buf.readUnsignedByte() * 0.4;\n                position.set(Position.KEY_THROTTLE, throttleZO4);\n                LOG.debug(\"Set throttle ZO4: {}\", throttleZO4);\n                break;\n            case \"ZO5\":\n                int parkingBrakeStatus = buf.readUnsignedByte(); // parking brake status\n                LOG.debug(\"Read parking brake status: {}\", parkingBrakeStatus);\n                break;\n            case \"ZO6\":\n                int obdSpeed = buf.readUnsignedByte() * 0.805;\n                position.set(Position.KEY_OBD_SPEED, obdSpeed);\n                LOG.debug(\"Set OBD speed: {}\", obdSpeed);\n                break;\n            case \"ZO7\":\n                int cruiseControlStatus = buf.readUnsignedByte(); // cruise control status\n                LOG.debug(\"Read cruise control status: {}\", cruiseControlStatus);\n                break;\n            case \"ZO8\":\n                int accelectorPedalPosition = buf.readUnsignedByte(); // accelector pedal position\n                LOG.debug(\"Read accelector pedal position: {}\", accelectorPedalPosition);\n                break;\n            case \"ZO9\":\n                int engineLoadZO9 = buf.readUnsignedByte() * 0.5;\n                position.set(Position.KEY_ENGINE_LOAD, engineLoadZO9);\n                LOG.debug(\"Set engine load ZO9: {}\", engineLoadZO9);\n                break;\n            case \"ZO10\":\n                int fuelLevelZO10 = buf.readUnsignedByte() * 0.5;\n                position.set(Position.KEY_FUEL_LEVEL, fuelLevelZO10);\n                LOG.debug(\"Set fuel level ZO10: {}\", fuelLevelZO10);\n                break;\n            case \"ZO11\":\n                int engineOilPressure = buf.readUnsignedByte(); // engine oil pressure\n                LOG.debug(\"Read engine oil pressure: {}\", engineOilPressure);\n                break;\n            case \"ZO12\":\n                int boostPressure = buf.readUnsignedByte(); // boost pressure\n                LOG.debug(\"Read boost pressure: {}\", boostPressure);\n                break;\n            case \"ZO13\":\n                int intakeTemperature = buf.readUnsignedByte(); // intake temperature\n                LOG.debug(\"Read intake temperature: {}\", intakeTemperature);\n                break;\n            case \"ZO14\":\n                int coolantTempZO14 = buf.readUnsignedByte();\n                position.set(Position.KEY_COOLANT_TEMP, coolantTempZO14);\n                LOG.debug(\"Set coolant temperature ZO14: {}\", coolantTempZO14);\n                break;\n            case \"ZO15\":\n                int brakeApplicationPressure = buf.readUnsignedByte(); // brake application pressure\n                LOG.debug(\"Read brake application pressure: {}\", brakeApplicationPressure);\n                break;\n            case \"ZO16\":\n                int brakePrimaryPressure = buf.readUnsignedByte(); // brake primary pressure\n                LOG.debug(\"Read brake primary pressure: {}\", brakePrimaryPressure);\n                break;\n            case \"ZO17\":\n                int brakeSecondaryPressure = buf.readUnsignedByte(); // brake secondary pressure\n                LOG.debug(\"Read brake secondary pressure: {}\", brakeSecondaryPressure);\n                break;\n            case \"ZH1\":\n                int cargoWeight = buf.readUnsignedShort(); // cargo weight\n                LOG.debug(\"Read cargo weight: {}\", cargoWeight);\n                break;\n            case \"ZH2\":\n                double fuelConsumptionZH2 = buf.readUnsignedShort() * 16.428 / 3600;\n                position.set(Position.KEY_FUEL_CONSUMPTION, fuelConsumptionZH2);\n                LOG.debug(\"Set fuel consumption ZH2: {}\", fuelConsumptionZH2);\n                break;\n            case \"ZH3\":\n                int rpmZH3 = buf.readUnsignedShort() * 0.25;\n                position.set(Position.KEY_RPM, rpmZH3);\n                LOG.debug(\"Set RPM ZH3: {}\", rpmZH3);\n                break;\n            case \"ZL1\":\n                int fuelUsedNaturalGas = buf.readUnsignedInt(); // fuel used (natural gas)\n                LOG.debug(\"Read fuel used (natural gas): {}\", fuelUsedNaturalGas);\n                break;\n            case \"ZL2\":\n                double odometerZL2 = buf.readUnsignedInt() * 161;\n                position.set(Position.KEY_ODOMETER, odometerZL2);\n                LOG.debug(\"Set odometer ZL2: {}\", odometerZL2);\n                break;\n            case \"ZL3\":\n                int vehicleHours = buf.readUnsignedInt(); // vehicle hours\n                LOG.debug(\"Read vehicle hours: {}\", vehicleHours);\n                break;\n            case \"ZL4\":\n                int hoursZL4 = buf.readUnsignedInt() * 5 * 36000;\n                position.set(Position.KEY_HOURS, hoursZL4);\n                LOG.debug(\"Set hours ZL4: {}\", hoursZL4);\n                break;\n            case \"ZS1\":\n                String vinZS1 = readString(buf);\n                position.set(Position.KEY_VIN, vinZS1);\n                LOG.debug(\"Set VIN ZS1: {}\", vinZS1);\n                break;\n            case \"JO1\":\n                int pedals = buf.readUnsignedByte(); // pedals\n                LOG.debug(\"Read pedals: {}\", pedals);\n                break;\n            case \"JO2\":\n                int powerTakeoffDevice = buf.readUnsignedByte(); // power takeoff device\n                LOG.debug(\"Read power takeoff device: {}\", powerTakeoffDevice);\n                break;\n            case \"JO3\":\n                int accelectorPedalPositionJO3 = buf.readUnsignedByte(); // accelector pedal position\n                LOG.debug(\"Read accelector pedal position JO3: {}\", accelectorPedalPositionJO3);\n                break;\n            case \"JO4\":\n                int engineLoadJO4 = buf.readUnsignedByte();\n                position.set(Position.KEY_ENGINE_LOAD, engineLoadJO4);\n                LOG.debug(\"Set engine load JO4: {}\", engineLoadJO4);\n                break;\n            case \"JO5\":\n                int fuelLevelJO5 = buf.readUnsignedByte() * 0.4;\n                position.set(Position.KEY_FUEL_LEVEL, fuelLevelJO5);\n                LOG.debug(\"Set fuel level JO5: {}\", fuelLevelJO5);\n                break;\n            case \"JO6\":\n                int fmsVehicleInterface = buf.readUnsignedByte(); // fms vehicle interface\n                LOG.debug(\"Read FMS vehicle interface: {}\", fmsVehicleInterface);\n                break;\n            case \"JO7\":\n                int driver2 = buf.readUnsignedByte(); // driver 2\n                LOG.debug(\"Read driver 2: {}\", driver2);\n                break;\n            case \"JO8\":\n                int driver1 = buf.readUnsignedByte(); // driver 1\n                LOG.debug(\"Read driver 1: {}\", driver1);\n                break;\n            case \"JO9\":\n                int drivers = buf.readUnsignedByte(); // drivers\n                LOG.debug(\"Read drivers: {}\", drivers);\n                break;\n            case \"JO10\":\n                int systemInfo = buf.readUnsignedByte(); // system information\n                LOG.debug(\"Read system information: {}\", systemInfo);\n                break;\n            case \"JO11\":\n                int coolantTempJO11 = buf.readUnsignedByte() - 40;\n                position.set(Position.KEY_COOLANT_TEMP, coolantTempJO11);\n                LOG.debug(\"Set coolant temperature JO11: {}\", coolantTempJO11);\n                break;\n            case \"JO12\":\n                int ptoEngaged = buf.readUnsignedByte(); // pto engaged\n                LOG.debug(\"Read PTO engaged: {}\", ptoEngaged);\n                break;\n            case \"JH1\":\n                double obdSpeedJH1 = buf.readUnsignedShort() / 256.0;\n                position.set(Position.KEY_OBD_SPEED, obdSpeedJH1);\n                LOG.debug(\"Set OBD speed JH1: {}\", obdSpeedJH1);\n                break;\n            case \"JH2\":\n                double rpmJH2 = buf.readUnsignedShort() * 0.125;\n                position.set(Position.KEY_RPM, rpmJH2);\n                LOG.debug(\"Set RPM JH2: {}\", rpmJH2);\n                break;\n            case \"JH3\":\n            case \"JH4\":\n            case \"JH5\":\n            case \"JH6\":\n            case \"JH7\":\n                int index = Integer.parseInt(key.substring(2)) - 2;\n                int axleWeight = buf.readUnsignedShort() * 0.5;\n                position.set(\"axleWeight\" + index, axleWeight);\n                LOG.debug(\"Set axle weight {} : {}\", index, axleWeight);\n                break;\n            case \"JH8\":\n                int odometerService = buf.readUnsignedShort() * 5;\n                position.set(Position.KEY_ODOMETER_SERVICE, odometerService);\n                LOG.debug(\"Set odometer service: {}\", odometerService);\n                break;\n            case \"JH9\":\n                int tachographSpeed = buf.readUnsignedShort(); // tachograph speed\n                LOG.debug(\"Read tachograph speed: {}\", tachographSpeed);\n                break;\n            case \"JH10\":\n                int ambientTemperature = buf.readUnsignedShort(); // ambient air temperature\n                LOG.debug(\"Read ambient air temperature: {}\", ambientTemperature);\n                break;\n            case \"JH11\":\n                double fuelConsumptionJH11 = buf.readUnsignedShort() * 0.05;\n                position.set(Position.KEY_FUEL_CONSUMPTION, fuelConsumptionJH11);\n                LOG.debug(\"Set fuel consumption JH11: {}\", fuelConsumptionJH11);\n                break;\n            case \"JH12\":\n                int fuelEconomy = buf.readUnsignedShort(); // fuel economy\n                LOG.debug(\"Read fuel economy: {}\", fuelEconomy);\n                break;\n            case \"JL1\":\n                double fuelUsedJL1 = buf.readUnsignedInt() * 0.5;\n                position.set(Position.KEY_FUEL_USED, fuelUsedJL1);\n                LOG.debug(\"Set fuel used JL1: {}\", fuelUsedJL1);\n                break;\n            case \"JL2\":\n                int hoursJL2 = buf.readUnsignedInt() * 5 * 36000;\n                position.set(Position.KEY_HOURS, hoursJL2);\n                LOG.debug(\"Set hours JL2: {}\", hoursJL2);\n                break;\n            case \"JL3\":\n                double odometerJL3 = buf.readUnsignedInt() * 1000;\n                position.set(Position.KEY_ODOMETER, odometerJL3);\n                LOG.debug(\"Set odometer JL3: {}\", odometerJL3);\n                break;\n            case \"JL4\":\n                double fuelUsedJL4 = buf.readUnsignedInt() * 0.001;\n                position.set(Position.KEY_FUEL_USED, fuelUsedJL4);\n                LOG.debug(\"Set fuel used JL4: {}\", fuelUsedJL4);\n                break;\n            case \"JS1\":\n                String vinJS1 = readString(buf);\n                position.set(Position.KEY_VIN, vinJS1);\n                LOG.debug(\"Set VIN JS1: {}\", vinJS1);\n                break;\n            case \"JS2\":\n                String fmsVersion = readString(buf); // fms version supported\n                LOG.debug(\"Read FMS version: {}\", fmsVersion);\n                break;\n            case \"JS3\":\n                String driver1JS3 = readString(buf);\n                position.set(\"driver1\", driver1JS3);\n                LOG.debug(\"Set driver1: {}\", driver1JS3);\n                break;\n            case \"JS4\":\n                String driver2JS4 = readString(buf);\n                position.set(\"driver2\", driver2JS4);\n                LOG.debug(\"Set driver2: {}\", driver2JS4);\n                break;\n            case \"JN1\":\n                int cruiseControlDistance = buf.readUnsignedInt(); // cruise control distance\n                LOG.debug(\"Read cruise control distance: {}\", cruiseControlDistance);\n                break;\n            case \"JN2\":\n                int excessiveIdlingTime = buf.readUnsignedInt(); // excessive idling time\n                LOG.debug(\"Read excessive idling time: {}\", excessiveIdlingTime);\n                break;\n            case \"JN3\":\n                int excessiveIdlingFuel = buf.readUnsignedInt(); // excessive idling fuel\n                LOG.debug(\"Read excessive idling fuel: {}\", excessiveIdlingFuel);\n                break;\n            case \"JN4\":\n                int ptoTime = buf.readUnsignedInt(); // pto time\n                LOG.debug(\"Read PTO time: {}\", ptoTime);\n                break;\n            case \"JN5\":\n                int ptoFuel = buf.readUnsignedInt(); // pto fuel\n                LOG.debug(\"Read PTO fuel: {}\", ptoFuel);\n                break;\n            default:\n                LOG.warn(\"Unknown key: {}\", key);\n                break;\n        }\n    }\n\n    if (cellTower.getMobileCountryCode() != null\n        && cellTower.getMobileNetworkCode() != null\n        && cellTower.getCellId() != null && cellTower.getCellId() != 0\n        && cellTower.getLocationAreaCode() != null) {\n        position.setNetwork(new Network(cellTower));\n    } else if (cellTower.getSignalStrength() != null) {\n        position.set(Position.KEY_RSSI, cellTower.getSignalStrength());\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}