{
    "generation": "private void readBinaryCustomData(Position position, ByteBuf buf, String form) {\n    CellTower cellTower = new CellTower();\n    String[] keys = form.substring(1).split(\"%\");\n    for (String key : keys) {\n        switch (key) {\n            // Existing cases...\n            case \"LAT\":\n                int latInt = buf.readInt();\n                double latitude = latInt / 10000000.0; // Assuming scaling factor of 1e7\n                setLatitudeSafely(position, latitude);\n                break;\n            case \"LON\":\n                int lonInt = buf.readInt();\n                double longitude = lonInt / 10000000.0; // Assuming scaling factor of 1e7\n                setLongitudeSafely(position, longitude);\n                break;\n            // Other cases...\n            default:\n                break;\n        }\n    }\n\n    if (cellTower.getMobileCountryCode() != null\n            && cellTower.getMobileNetworkCode() != null\n            && cellTower.getCellId() != null && cellTower.getCellId() != 0\n            && cellTower.getLocationAreaCode() != null) {\n        position.setNetwork(new Network(cellTower));\n    } else if (cellTower.getSignalStrength() != null) {\n        position.set(Position.KEY_RSSI, cellTower.getSignalStrength());\n    }\n}\n\nprivate void setLatitudeSafely(Position position, double latitude) {\n    if (latitude >= -90 && latitude <= 90) {\n        position.setLatitude(latitude);\n    } else {\n        logger.warning(\"Invalid latitude value: \" + latitude);\n    }\n}\n\nprivate void setLongitudeSafely(Position position, double longitude) {\n    if (longitude >= -180 && longitude <= 180) {\n        position.setLongitude(longitude);\n    } else {\n        logger.warning(\"Invalid longitude value: \" + longitude);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}