{
    "generation": "private void readBinaryCustomData(Position position, ByteBuf buf, String form) {\n    CellTower cellTower = new CellTower();\n    String[] keys = form.substring(1).split(\"%\");\n    for (String key : keys) {\n        switch (key) {\n            //... (rest of the cases remain the same)\n\n            case \"JH1\":\n                position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShort() / 256.0);\n                break;\n            case \"JH2\":\n                position.set(Position.KEY_RPM, buf.readUnsignedShort() * 0.125);\n                break;\n            case \"JH3\":\n            case \"JH4\":\n            case \"JH5\":\n            case \"JH6\":\n            case \"JH7\":\n                int index = Integer.parseInt(key.substring(2)) - 2;\n                position.set(\"axleWeight\" + index, buf.readUnsignedShort() * 0.5);\n                break;\n            // Add input validation for longitude in JH8, JH9, and JH10 cases\n            case \"JH8\":\n                int odometerService = buf.readUnsignedShort() * 5;\n                // Validate odometerService before setting\n                if (odometerService >= 0) {\n                    position.set(Position.KEY_ODOMETER_SERVICE, odometerService);\n                }\n                break;\n            case \"JH9\":\n                buf.readUnsignedShort(); // tachograph speed\n                break;\n            case \"JH10\":\n                int ambientAirTemperature = buf.readUnsignedShort();\n                // Validate ambientAirTemperature before setting\n                if (ambientAirTemperature >= -9000 && ambientAirTemperature <= 6000) { // typical valid range for temperature in tenths of a degree Celsius\n                    position.set(Position.KEY_AMBIENT_AIR_TEMPERATURE, ambientAirTemperature * 0.1); // convert to Celsius\n                }\n                break;\n            //... (rest of the cases remain the same)\n\n            // Add input validation for longitude in JL2 case\n            case \"JL2\":\n                int hours = buf.readUnsignedInt() * 5 * 36000;\n                // Validate hours before setting\n                if (hours >= 0) {\n                    position.set(Position.KEY_HOURS, hours);\n                }\n                break;\n            //... (rest of the cases remain the same)\n\n        }\n    }\n\n    // Longitude validation before setting position network\n    if (cellTower.getLocationAreaCode()!= null && cellTower.getLocationAreaCode() >= -180 && cellTower.getLocationAreaCode() <= 180) {\n        if (cellTower.getMobileCountryCode()!= null\n                && cellTower.getMobileNetworkCode()!= null\n                && cellTower.getCellId()!= null && cellTower.getCellId()!= 0) {\n            position.setNetwork(new Network(cellTower));\n        } else if (cellTower.getSignalStrength()!= null) {\n            position.set(Position.KEY_RSSI, cellTower.getSignalStrength());\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}