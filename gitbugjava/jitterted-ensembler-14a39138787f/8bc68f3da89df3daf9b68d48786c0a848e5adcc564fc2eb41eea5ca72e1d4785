{
    "generation": "    public void acceptedBy(MemberId memberId) {\n        requireNotCompleted();\n        requireNotCanceled();\n        requireHasSpace();\n        membersWhoAccepted.add(memberId);\n        membersWhoDeclined.remove(memberId);\n// buggy code\n//        if (membersWhoDeclined.contains(memberId)) {\n//            membersWhoDeclined.remove(memberId);\n//        }\n    }\n\n    public void declinedBy(MemberId memberId) {\n        requireNotCompleted();\n        requireNotCanceled();\n        requireHasSpace();\n        membersWhoDeclined.add(memberId);\n        membersWhoAccepted.remove(memberId);\n// buggy code\n//        if (membersWhoAccepted.contains(memberId)) {\n//            membersWhoAccepted.remove(memberId);\n//        }\n    }\n\n    public void canceledBy(MemberId memberId) {\n        requireNotCompleted();\n        requireNotCanceled();\n        requireHasSpace();\n        membersWhoCanceled.add(memberId);\n        membersWhoAccepted.remove(memberId);\n        membersWhoDeclined.remove(memberId);\n    }\n\n    public void completedBy(MemberId memberId) {\n        requireNotCompleted();\n        requireNotCanceled();\n        requireHasSpace();\n        membersWhoCompleted.add(memberId);\n        membersWhoAccepted.remove(memberId);\n        membersWhoDeclined.remove(memberId);\n        membersWhoCanceled.remove(memberId);\n    }\n\n    private void requireNotCompleted() {\n        if (isCompleted()) {\n            throw new IllegalStateException();\n        }\n    }\n\n    private void requireNotCanceled() {\n        if (isCanceled()) {\n            throw new IllegalStateException();\n        }\n    }\n\n    private void requireHasSpace() {\n        if (isFull()) {\n            throw new IllegalStateException();\n        }\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}