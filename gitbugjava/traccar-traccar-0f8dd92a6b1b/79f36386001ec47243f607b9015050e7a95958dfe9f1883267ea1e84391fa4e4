{
    "generation": "private Object decodeExtended(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);\n    if (deviceSession == null) {\n        return null;\n    }\n\n    if (!deviceSession.contains(DeviceSession.KEY_TIMEZONE)) {\n        deviceSession.set(DeviceSession.KEY_TIMEZONE, getTimeZone(deviceSession.getDeviceId()));\n    }\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    buf.readUnsignedShort(); // length\n    int type = buf.readUnsignedByte();\n\n    switch(type) {\n        case MSG_STRING_INFO:\n            // handle MSG_STRING_INFO ...\n            break;\n\n        case MSG_INFO:\n            // handle MSG_INFO ...\n            break;\n\n        case MSG_X1_PHOTO_DATA:\n            // handle MSG_X1_PHOTO_DATA ...\n            break;\n\n        case MSG_AZ735_GPS:\n        case MSG_AZ735_ALARM:\n            // handle MSG_AZ735_GPS and MSG_AZ735_ALARM ...\n            break;\n\n        case MSG_OBD:\n            // handle MSG_OBD ...\n            break;\n\n        case MSG_GPS_MODULAR:\n            // handle MSG_GPS_MODULAR ...\n            break;\n\n        case MSG_MULTIMEDIA:\n            // handle MSG_MULTIMEDIA ...\n            break;\n\n        case MSG_SERIAL:\n            position = new Position(getProtocolName());\n            position.setDeviceId(deviceSession.getDeviceId());\n            getLastLocation(position, null);\n            // handle MSG_SERIAL ...\n            break;\n\n        default:\n            return null;\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}