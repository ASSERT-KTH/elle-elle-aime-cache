{
    "generation": "private Object decode(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress);\n    if (deviceSession == null) {\n        return null;\n    }\n\n    if (!deviceSession.contains(DeviceSession.KEY_TIMEZONE)) {\n        deviceSession.set(DeviceSession.KEY_TIMEZONE, getTimeZone(deviceSession.getDeviceId()));\n    }\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    buf.readUnsignedShort(); // length\n    int type = buf.readUnsignedByte();\n\n    if (type == MSG_STRING_INFO) {\n\n        // ...\n\n    } else if (type == MSG_INFO) {\n\n        int subType = buf.readUnsignedByte();\n\n        getLastLocation(position, null);\n\n        if (subType == 0x00) {\n\n            position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort() * 0.01);\n\n        } else if (subType == 0x05) {\n\n            if (buf.readableBytes() >= 6 + 1 + 6) {\n                DateBuilder dateBuilder = new DateBuilder((TimeZone) deviceSession.get(DeviceSession.KEY_TIMEZONE))\n                        .setDate(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte())\n                        .setTime(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte());\n                position.setDeviceTime(dateBuilder.getDate());\n            }\n\n            int flags = buf.readUnsignedByte();\n            position.set(Position.KEY_DOOR, BitUtil.check(flags, 0));\n            position.set(Position.PREFIX_IO + 1, BitUtil.check(flags, 2));\n\n        } else if (subType == 0x0a) {\n\n            // ...\n\n        } else if (subType == 0x0d) {\n\n            // ...\n\n        } else if (subType == 0x1b) {\n\n            // ...\n\n        }\n\n    } else if (type == MSG_X1_PHOTO_DATA) {\n\n        // ...\n\n    } else if (type == MSG_AZ735_GPS || type == MSG_AZ735_ALARM) {\n\n        // ...\n\n    } else if (type == MSG_OBD) {\n\n        // ...\n\n    } else if (type == MSG_GPS_MODULAR) {\n\n        while (buf.readableBytes() > 6) {\n            int moduleType = buf.readUnsignedShort();\n            int moduleLength = buf.readUnsignedShort();\n\n            switch (moduleType) {\n                case 0x03:\n                    position.set(Position.KEY_ICCID, ByteBufUtil.hexDump(buf.readSlice(10)).replaceAll(\"f\", \"\"));\n                    break;\n                case 0x09:\n                    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                    break;\n                case 0x0a:\n                    position.set(Position.KEY_SATELLITES_VISIBLE, buf.readUnsignedByte());\n                    break;\n                case 0x11:\n                    // ...\n                    break;\n                case 0x18:\n                    position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.01);\n                    break;\n                case 0x28:\n                    position.set(Position.KEY_HDOP, buf.readUnsignedByte() * 0.1);\n                    break;\n                case 0x29:\n                    // ...\n                    break;\n                case 0x2a:\n                    int input = buf.readUnsignedByte();\n                    position.set(Position.KEY_DOOR, BitUtil.to(input, 4) > 0);\n                    position.set(\"tamper\", BitUtil.from(input, 4) > 0);\n                    break;\n                case 0x2b:\n                    int event = buf.readUnsignedByte();\n                    position.set(Position.KEY_EVENT, event);\n                    switch (event) {\n                        case 0x11:\n                            position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);\n                            break;\n                        // ...\n                    }\n                    break;\n                case 0x2e:\n                    position.set(Position.KEY_ODOMETER, buf.readUnsignedIntLE());\n                    break;\n                case 0x33:\n                    // ...\n                    break;\n                case 0x34:\n                    position.set(Position.KEY_EVENT, buf.readUnsignedByte());\n                    // ...\n                    break;\n                default:\n                    buf.skipBytes(moduleLength);\n                    break;\n            }\n        }\n\n        if (position.getFixTime() == null) {\n            getLastLocation(position, null);\n        }\n\n        sendResponse(channel, false, MSG_GPS_MODULAR, buf.readUnsignedShort(), null);\n\n    } else if (type == MSG_MULTIMEDIA) {\n\n        // ...\n\n    } else if (type == MSG_SERIAL) {\n\n        // ...\n\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}