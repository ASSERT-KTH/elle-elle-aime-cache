{
    "generation": "private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n    buf.readUnsignedShortLE(); // length\n\n    buf.skipBytes(3); // identification header\n    buf.readUnsignedIntLE(); // index\n\n    DeviceSession deviceSession = getDeviceSession(\n            channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));\n    if (deviceSession == null) {\n        return null;\n    }\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    buf.readUnsignedByte(); // session status\n    buf.skipBytes(4); // reserved\n    long dateTime = buf.readUnsignedIntLE(); // date and time\n\n    // Fix: Apply correct conversion from Iridium epoch (2000-01-01) to Java's epoch (1970-01-01)\n    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"));\n    calendar.set(2000, 0, 1, 0, 0, (int) (dateTime % 86400)); // 86400 = 60 * 60 * 24\n    calendar.add(Calendar.SECOND, (int) (dateTime / 86400) * 86400);\n    position.setFixTime(calendar.getTime());\n\n    buf.skipBytes(23); // coordinates block\n\n    buf.skipBytes(3); // data tag header\n    decodeMinimalDataSet(position, buf);\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}