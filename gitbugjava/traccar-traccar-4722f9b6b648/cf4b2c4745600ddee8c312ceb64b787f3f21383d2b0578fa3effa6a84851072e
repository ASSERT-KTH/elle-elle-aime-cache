{
    "generation": "private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n    buf.readUnsignedShortLE(); // length\n\n    buf.skipBytes(3); // identification header\n    int index = buf.readUnsignedIntLE(); // index\n\n    DeviceSession deviceSession = getDeviceSession(\n            channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));\n    if (deviceSession == null) {\n        return null;\n    }\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    int sessionStatus = buf.readUnsignedByte(); // session status\n    buf.skipBytes(4); // reserved\n    long dateTimeValue = buf.readUnsignedIntLE(); // date and time\n\n    // Validate the date and time value\n    LocalDateTime dateTime = LocalDateTime.ofEpochSecond(dateTimeValue, 0, ZoneOffset.UTC);\n    if (dateTime.isAfter(LocalDateTime.now().plusHours(25))) {\n        return null; // Discard positions with time more than 25 hours in the future\n    }\n    position.setTime(dateTime);\n\n    buf.skipBytes(23); // coordinates block\n\n    buf.skipBytes(3); // data tag header\n    decodeMinimalDataSet(position, buf);\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}