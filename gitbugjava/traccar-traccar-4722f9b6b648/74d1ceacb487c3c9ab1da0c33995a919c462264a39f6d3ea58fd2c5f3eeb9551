{
    "generation": "    private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n        buf.readUnsignedShortLE(); // length\n\n        buf.skipBytes(3); // identification header\n        buf.readUnsignedIntLE(); // index\n\n        DeviceSession deviceSession = getDeviceSession(\n                channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));\n        if (deviceSession == null) {\n            return null;\n        }\n\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        buf.readUnsignedByte(); // session status\n        buf.skipBytes(4); // reserved\n        long dateAndTime = buf.readUnsignedIntLE(); // date and time\n\n        int year = 2000 + ((dateAndTime >> 26) & 0x3F);\n        int month = (int) ((dateAndTime >> 22) & 0x0F);\n        int day = (int) ((dateAndTime >> 17) & 0x1F);\n        int hour = (int) ((dateAndTime >> 12) & 0x1F);\n        int minute = (int) ((dateAndTime >> 6) & 0x3F);\n        int second = (int) ((dateAndTime) & 0x3F);\n\n        Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"));\n        calendar.set(year, month - 1, day, hour, minute, second);\n        position.setTime(calendar.getTime());\n\n        buf.skipBytes(23); // coordinates block\n\n        buf.skipBytes(3); // data tag header\n        decodeMinimalDataSet(position, buf);\n\n        return position;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}