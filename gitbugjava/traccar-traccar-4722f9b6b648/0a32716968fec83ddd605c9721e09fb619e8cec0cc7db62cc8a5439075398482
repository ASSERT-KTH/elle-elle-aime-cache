{
    "generation": "private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n    buf.readUnsignedShortLE(); // length\n\n    buf.skipBytes(3); // identification header\n    int index = buf.readUnsignedIntLE(); // index\n\n    DeviceSession deviceSession = getDeviceSession(\n            channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));\n    if (deviceSession == null) {\n        return null;\n    }\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    buf.readUnsignedByte(); // session status\n    buf.skipBytes(4); // reserved\n    int dateTime = buf.readUnsignedIntLE(); // date and time\n    position.setTime(convertTime(index, dateTime));\n\n    buf.skipBytes(23); // coordinates block\n\n    buf.skipBytes(3); // data tag header\n    decodeMinimalDataSet(position, buf);\n\n    return position;\n}\n\nprivate Date convertTime(int index, int dateTime) {\n    // Since the Galileo protocol encodes time as an array of 4 bytes representing the number of seconds since midnight,\n    // the maximum value can be 60 * 60 * 24 = 86400 seconds. Since the index field has a link with the time,\n    // adjustments regarding its value may affect the calculated time. To prevent the AssertionError mentioned in the error log,\n    // it's necessary to ensure that the calculated time difference between the current time and the calculated time\n    // does not exceed 25 hours. This implementation doesn't include any adjustments regarding the index field,\n    // assuming that the index value doesn't have any effect on the time calculation based on the provided code.\n    // If there's a relation between time and index, further investigation and adjustments would be needed.\n    return new Date(dateTime * 1000L); // convert seconds to milliseconds\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}