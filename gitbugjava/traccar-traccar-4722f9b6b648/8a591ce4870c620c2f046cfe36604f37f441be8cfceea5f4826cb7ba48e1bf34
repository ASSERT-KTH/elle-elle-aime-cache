{
    "generation": "private Position decodeIridiumPosition(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n    buf.readUnsignedShortLE(); // length\n\n    buf.skipBytes(3); // identification header\n    buf.readUnsignedIntLE(); // index\n\n    DeviceSession deviceSession = getDeviceSession(\n            channel, remoteAddress, buf.readSlice(15).toString(StandardCharsets.US_ASCII));\n    if (deviceSession == null) {\n        return null;\n    }\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    buf.readUnsignedByte(); // session status\n    buf.skipBytes(4); // reserved\n\n    // Decode date and time\n    long dateTime = buf.readUnsignedIntLE();\n    int year = (int) ((dateTime >> 26) & 0x3F) + 2000;\n    int month = (int) ((dateTime >> 22) & 0x0F);\n    int day = (int) ((dateTime >> 17) & 0x1F);\n    int hour = (int) ((dateTime >> 12) & 0x1F);\n    int minute = (int) ((dateTime >> 6) & 0x3F);\n    int second = (int) (dateTime & 0x3F);\n\n    // Set the decoded date and time to the position\n    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"));\n    calendar.set(Calendar.YEAR, year);\n    calendar.set(Calendar.MONTH, month - 1); // Calendar months are 0-based\n    calendar.set(Calendar.DAY_OF_MONTH, day);\n    calendar.set(Calendar.HOUR_OF_DAY, hour);\n    calendar.set(Calendar.MINUTE, minute);\n    calendar.set(Calendar.SECOND, second);\n    calendar.set(Calendar.MILLISECOND, 0);\n\n    position.setTime(calendar.getTime());\n\n    buf.skipBytes(23); // coordinates block\n\n    buf.skipBytes(3); // data tag header\n    decodeMinimalDataSet(position, buf);\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}