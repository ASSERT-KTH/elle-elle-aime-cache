{
    "generation": "private Position decodeLocation(DeviceSession deviceSession, ByteBuf buf) {\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    int type = buf.readUnsignedShort();\n\n    if ((type & 0xF000) == 0x7000) {\n\n        buf.skipBytes(10); // header\n        while (buf.readableBytes() > 3) {\n\n            int dataLength = buf.readUnsignedShort();\n            int subtype = buf.readUnsignedByte();\n\n            switch (subtype) {\n                case 0x01:\n                    position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 100);\n                    break;\n                // Add other subtype cases here...\n                default:\n                    buf.skipBytes(dataLength - 2);\n                    break;\n            }\n        }\n\n    } else {\n\n        position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedInt()));\n\n        decodeCoordinates(position, buf);\n\n        position.setAltitude(buf.readShort());\n        position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort() * 0.1));\n        position.setCourse(buf.readUnsignedShort());\n        position.setTime(readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE)));\n\n        if (buf.readableBytes() == 20) {\n\n            buf.skipBytes(4); // remaining battery and mileage\n            position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);\n            position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n            buf.readUnsignedInt(); // area id\n            position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n            buf.skipBytes(3); // reserved\n\n        } else if (buf.readableBytes() > 2) {\n\n            while (buf.readableBytes() > 2) {\n\n                int subtype = buf.readUnsignedByte();\n                int length = buf.readUnsignedByte();\n                int endIndex = buf.readerIndex() + length;\n                String stringValue;\n                switch (subtype) {\n                    // Add subtype cases here...\n                    default:\n                        break;\n                }\n                buf.readerIndex(endIndex);\n            }\n\n        }\n\n    }\n\n    return position;\n}\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}