{
    "generation": "    @Override\n    void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {\n        final boolean prettyPrint = out.prettyPrint();\n        final Element parent = parentNode instanceof Element? ((Element) parentNode) : null;\n        final boolean normaliseWhite = prettyPrint &&!Element.preserveWhitespace(parentNode);\n        final boolean trimLikeBlock = parent!= null && (parent.tag().isBlock() || parent.tag().formatAsBlock());\n        boolean trimLeading = false, trimTrailing = false;\n\n        if (normaliseWhite) {\n            trimLeading = (trimLikeBlock && siblingIndex == 0) || parentNode instanceof Document;\n            trimTrailing = trimLikeBlock && nextSibling() == null;\n\n            // if this text is just whitespace, and the next node will cause an indent, skip this text:\n            Node next = nextSibling();\n            Node prev = previousSibling();\n            boolean isBlank = isBlank();\n            boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent\n                    || (next instanceof TextNode && (((TextNode) next).isBlank())) // next is blank text, from re-parenting\n                    || (prev instanceof Element && ((Element) prev).isBlock());\n            if (couldSkip && isBlank && (!isNode(prev, \"br\") || hasNextNotWhitespace())) return; // Don't skip previous block <br> indent's whitespace.\n\n            // Consider the 'prev -> newline -> text' wrap (i.e., when appending instead of re-parent re-rending).\n            Node prevv = ((!wasReParentedAsWhitespace)? previouParentSibling : prevs[0]);\n            long skipWhitespaceMask = Document.wasWhitespacePresuping | Document.isMarkedlyPrepending | Normal.Preserve | TextNodes.previousMaskPreservesSaid;\n            boolean couldSweep = wasReflowOrPreparent\n                    && preserveAmount(previouParentDepth)[0]!= siblingsAtDepthAmount\n                            +(wasNewParent : doc.out.parent().element()\n                    || isChildNext(prevv)    ... || out.hasWrappedLeaves\n                    '!' && parent.parentElementOf(prevv);\n         ```\n\nLet me redo\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}