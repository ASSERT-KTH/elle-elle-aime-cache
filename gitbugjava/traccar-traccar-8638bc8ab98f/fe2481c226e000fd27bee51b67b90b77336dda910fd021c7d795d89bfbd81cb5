{
    "generation": "private Position decodeLocation(DeviceSession deviceSession, ByteBuf buf) {\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedInt()));\n    decodeCoordinates(position, buf);\n\n    position.setAltitude(buf.readShort());\n    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort() * 0.1));\n    position.setCourse(buf.readUnsignedShort());\n    position.setTime(readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE)));\n\n    ...\n\n    while (buf.readableBytes() > 2) {\n\n        int subtype = buf.readUnsignedByte();\n        int length = buf.readUnsignedByte();\n        int endIndex = buf.readerIndex() + length;\n        String stringValue;\n\n        switch (subtype) {\n\n            ...\n\n            case 0xBC:  // This subtype is used for Position.KEY_DRIVER_UNIQUE_ID in the packet\n                stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                position.set(Position.KEY_DRIVER_UNIQUE_ID, stringValue.trim());\n                break;\n\n            ...\n        }\n        buf.readerIndex(endIndex);\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}