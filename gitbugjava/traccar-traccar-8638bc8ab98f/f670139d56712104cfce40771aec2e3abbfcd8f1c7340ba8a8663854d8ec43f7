{
    "generation": "private Position decodeLocation(DeviceSession deviceSession, ByteBuf buf) {\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedInt()));\n\n    decodeCoordinates(position, buf);\n\n    position.setAltitude((double) buf.readShort());\n    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort() * 0.1));\n    position.setCourse((double) buf.readUnsignedShort());\n    position.setTime(readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE)));\n\n    if (buf.readableBytes() == 20) {\n\n        buf.skipBytes(4); // remaining battery and mileage\n        position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);\n        position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n        buf.readUnsignedInt(); // area id\n        position.set(Position.KEY_RSSI, (double) buf.readUnsignedByte());\n        buf.skipBytes(3); // reserved\n\n        return position;\n\n    }\n\n    while (buf.readableBytes() > 2) {\n\n        int subtype = buf.readUnsignedByte();\n        int length = buf.readUnsignedByte();\n        int endIndex = buf.readerIndex() + length;\n        String stringValue;\n        switch (subtype) {\n            case 0x01:\n                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 100);\n                break;\n            case 0x02:\n                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedShort() * 0.1);\n                break;\n            case 0x2b:\n                position.set(Position.KEY_FUEL_CONSUMPTION, (double) buf.readUnsignedInt());\n                break;\n            case 0x30:\n                position.set(Position.KEY_RSSI, (double) buf.readUnsignedByte());\n                break;\n            case 0x31:\n                position.set(Position.KEY_SATELLITES, (double) buf.readUnsignedByte());\n                break;\n            case 0x33:\n                stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                if (stringValue.startsWith(\"*M00\")) {\n                    String lockStatus = stringValue.substring(8, 8 + 7);\n                    position.set(Position.KEY_BATTERY, Integer.parseInt(lockStatus.substring(2, 5)) * 0.01);\n                }\n                break;\n            case 0x56:\n                position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte() * 10);\n                buf.readUnsignedByte(); // reserved\n                break;\n            case 0x60:\n                position.set(Position.KEY_EVENT, (double) buf.readUnsignedShort());\n                buf.skipBytes(length - 2);\n                break;\n            case 0x69:\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.01);\n                break;\n            case 0x80:\n                buf.readUnsignedByte(); // content\n                decodeExtension(position, buf, buf.readerIndex() + length - 1);\n                break;\n            case 0x91:\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n                position.set(Position.KEY_RPM, (double) buf.readUnsignedShort());\n                position.set(Position.KEY_OBD_SPEED, (double) buf.readUnsignedByte());\n                position.set(Position.KEY_THROTTLE, buf.readUnsignedByte() * 100.0 / 255);\n                position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte() * 100.0 / 255);\n                position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedByte() - 40.0);\n                buf.readUnsignedShort();\n                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 0.01);\n                buf.readUnsignedShort();\n                buf.readUnsignedInt();\n                buf.readUnsignedShort();\n                position.set(Position.KEY_FUEL_USED, buf.readUnsignedShort() * 0.01);\n                break;\n            case 0x94:\n                if (length > 0) {\n                    stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                    position.set(Position.KEY_VIN, stringValue.trim());\n                }\n                break;\n            case 0xA7:\n                position.set(Position.PREFIX_ADC + 1, (double) buf.readUnsignedShort());\n                position.set(Position.PREFIX_ADC + 2, (double) buf.readUnsignedShort());\n                break;\n            case 0xAC:\n                position.set(Position.KEY_ODOMETER, (double) buf.readUnsignedInt());\n                break;\n            case 0xBC:\n                stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                position.set(\"driver\", stringValue.trim());\n                break;\n            case 0xD0:\n                long userStatus = buf.readUnsignedInt();\n                if (BitUtil.check(userStatus, 3)) {\n                    position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);\n                }\n                break;\n            default:\n                buf.skipBytes(length); // Skip unknown subtype length\n                break;\n        }\n        buf.readerIndex(endIndex); // Ensure end index after processing specific subtype\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}