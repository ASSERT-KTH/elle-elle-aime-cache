{
    "generation": "private Position decodeLocation(DeviceSession deviceSession, ByteBuf buf) {\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedInt()));\n\n    decodeCoordinates(position, buf);\n\n    position.setAltitude(buf.readShort());\n    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort() * 0.1));\n    position.setCourse(buf.readUnsignedShort());\n    position.setTime(readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE)));\n\n    if (buf.readableBytes() == 20) {\n        buf.skipBytes(4); // remaining battery and mileage\n        position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);\n        position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n        buf.readUnsignedInt(); // area id\n        position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n        buf.skipBytes(3); // reserved\n\n        return position;\n    }\n\n    while (buf.readableBytes() > 2) {\n        int subtype = buf.readUnsignedByte();\n        int length = buf.readUnsignedByte();\n        int endIndex = buf.readerIndex() + length;\n        String stringValue;\n        \n        switch (subtype) {\n            case 0x01:\n                if (buf.readableBytes() >= 4) {\n                    position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 100);\n                }\n                break;\n                \n            case 0x02:\n                if (buf.readableBytes() >= 2) {\n                    position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedShort() * 0.1);\n                }\n                break;\n\n            case 0xBD:\n                if (length > 0 && buf.readableBytes() >= length) {\n                    stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString().trim();\n                    position.set(Position.KEY_DRIVER_UNIQUE_ID, stringValue);\n                }\n                break;\n                \n            case 0x33:\n                if (buf.readableBytes() >= length) {\n                    stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                    if (stringValue.startsWith(\"*M00\")) {\n                        String lockStatus = stringValue.substring(8, Math.min(stringValue.length(), 15));\n                        try {\n                            double battery = Integer.parseInt(lockStatus.substring(2, 5)) * 0.01;\n                            position.set(Position.KEY_BATTERY, battery);\n                        } catch (NumberFormatException e) {\n                            // Log or handle parsing error if necessary\n                        }\n                    }\n                }\n                break;\n\n            default:\n                buf.readerIndex(endIndex);\n                break;\n        }\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}