{
    "generation": "public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n    if (root == null) {\n        return null;\n    }\n    // If both p and q are less than root, look in left subtree\n    if (p.val < root.val && q.val < root.val) {\n        return lowestCommonAncestor(root.left, p, q);\n    }\n    // If both p and q are greater than root, look in right subtree\n    else if (p.val > root.val && q.val > root.val) {\n        return lowestCommonAncestor(root.right, p, q);\n    }\n    // If p or q is equal to root, or p and q are on different sides, root is the LCA\n    else {\n        return root;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}