{
    "generation": "        public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n            if (root == null) {\n                return null;\n            }\n\n            // If both target values are smaller than the current node, move to the left subtree\n            if (p.val < root.val && q.val < root.val) {\n                return lowestCommonAncestor(root.left, p, q);\n            }\n            // If both target values are greater than the current node, move to the right subtree\n            if (p.val > root.val && q.val > root.val) {\n                return lowestCommonAncestor(root.right, p, q);\n            }\n            \n            // If the values split on either side or match the root, we have found the LCA\n            return root;\n        }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}