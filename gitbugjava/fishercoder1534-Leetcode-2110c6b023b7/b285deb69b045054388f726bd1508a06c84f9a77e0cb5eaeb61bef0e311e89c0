{
    "generation": "        public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n            if (root == null || p == root || q == root) {\n                return root;\n            }\n           TreeNode left = lowestCommonAncestor(root.left, p, q);\n            TreeNode right = lowestCommonAncestor(root.right, p, q);\n            if (left != null && right != null) {\n                return root;\n            }\n            if (left != null) {\n                return left;\n            }\n            if (right != null) {\n                return lowestCommonAncestor(root.right, p, q);\n            }\n            return root;\n        }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}