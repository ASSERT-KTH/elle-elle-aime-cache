{
    "generation": "public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n    if (root == null || p == root || q == root) {\n        return root;\n    }\n    if ((root.val - p.val) * (root.val - q.val) > 0) {\n        if (root.val - p.val > 0) {\n            return lowestCommonAncestor(root.left, p, q);\n        } else {\n            return lowestCommonAncestor(root.right, p, q);\n        }\n    } else if ((root.val - p.val) * (root.val - q.val) < 0) {\n        return root;\n    } else {\n        // If both differences are zero, it means p and q are the same node, return either.\n        return root;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}