{
    "generation": "public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n    if (root == null) {\n        return null;\n    }\n    int current = root.val;\n    int pVal = p.val;\n    int qVal = q.val;\n    \n    // If both p and q are greater than current, LCA lies in the right subtree\n    if (pVal > current && qVal > current) {\n        return lowestCommonAncestor(root.right, p, q);\n    }\n    // If both p and q are smaller than current, LCA lies in the left subtree\n    else if (pVal < current && qVal < current) {\n        return lowestCommonAncestor(root.left, p, q);\n    }\n    // If one is smaller and the other is larger, or if one of them is the root,\n    // then the current node is the LCA\n    else {\n        return root;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}