{
    "generation": "        public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n            if (root == null || p == root || q == root) {\n                return root;\n            }\n            if (p.val > q.val) {\n                TreeNode temp = p;\n                p = q;\n                q = temp;\n            }\n            if ((root.val - p.val) * (root.val - q.val) > 0) {\n                if (root.val - p.val > 0) {\n                    return lowestCommonAncestor(root.left, p, q);\n                }\n                return lowestCommonAncestor(root.right, p, q);\n            }\n            return root;\n        }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}