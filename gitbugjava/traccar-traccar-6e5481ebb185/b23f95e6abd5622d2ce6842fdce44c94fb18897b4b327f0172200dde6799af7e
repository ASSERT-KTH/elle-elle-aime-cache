{
    "generation": "private boolean decodeLbs(Position position, ByteBuf buf, int type, boolean hasLength) {\n    if (hasLength) {\n        int length = buf.readUnsignedByte();\n        if (length == 0) {\n            if (buf.getUnsignedByte(buf.readerIndex())!= 0x00 \n                && buf.getUnsignedByte(buf.readerIndex() + 9) == 0x00\n                && buf.getUnsignedByte(buf.readerIndex() + 45)!= 0x00 \n                && checkZeroPayload(buf, length)) {\n                buf.skipBytes(45);\n            } else {\n                buf.skipBytes(length);\n                return true;\n            }\n        } else {\n            // do not skip bytes in this else block\n            // but still return false to read lbs data below\n        }\n    }\n    if (buf.isReadable() && buf.readUnsignedShort() == 0x00) {\n        int mcc = buf.readUnsignedShort();\n        int mnc;\n        if (BitUtil.check(mcc, 15) || type == MSG_GPS_LBS_6) {\n            mnc = buf.readUnsignedShort();\n        } else {\n            mnc = buf.readUnsignedByte();\n        }\n        int lac;\n        if (type == MSG_LBS_ALARM) {\n            lac = buf.readInt();\n        } else {\n            lac = buf.readUnsignedShort();\n        }\n        long cid;\n        if (type == MSG_LBS_ALARM || type == MSG_GPS_LBS_7) {\n            cid = buf.readLong();\n        } else if (type == MSG_GPS_LBS_6) {\n            cid = buf.readUnsignedInt();\n        } else {\n            cid = buf.readUnsignedMedium();\n        }\n        position.setNetwork(new Network(CellTower.from(mcc, mnc, lac, cid)));\n        // return only if we already skipped 0x00 at beginning of lbs packet\n        if (length == 0) return true; \n    } else if (hasLength) {\n        buf.readerIndex(buf.readerIndex() - length);\n    } else if (buf.readerIndex() > 10) { // add 10 so we don't get OOB exception \n        // move readerIndex back after 0x00 were read\n        buf.readerIndex(buf.readerIndex() - 3);\n        return false; // because we moved the reader back\n    } else return false; // to not let the reader pass\n    return true; // everything went fine or lbs info were read.\n}\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}