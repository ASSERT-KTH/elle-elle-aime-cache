{
    "generation": "    private Object decodeBasic(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n        int length = buf.readUnsignedByte();\n        int dataLength = length - 5;\n        int type = buf.readUnsignedByte();\n\n        ByteBuf content = buf.readSlice(dataLength);\n        int serialNumber = buf.readUnsignedShort(); // read serial number\n\n        Position position = new Position(getProtocolName());\n        DeviceSession deviceSession = null;\n        if (type != MSG_LOGIN) {\n            deviceSession = getDeviceSession(channel, remoteAddress);\n            if (deviceSession == null) {\n                return null;\n            }\n            position.setDeviceId(deviceSession.getDeviceId());\n            if (!deviceSession.contains(DeviceSession.KEY_TIMEZONE)) {\n                deviceSession.set(DeviceSession.KEY_TIMEZONE, getTimeZone(deviceSession.getDeviceId()));\n            }\n        }\n\n        if (type == MSG_LOGIN) {\n\n            String imei = ByteBufUtil.hexDump(content.readSlice(8)).substring(1);\n            content.readUnsignedShort(); // type\n\n            deviceSession = getDeviceSession(channel, remoteAddress, imei);\n            if (deviceSession != null && !deviceSession.contains(DeviceSession.KEY_TIMEZONE)) {\n                deviceSession.set(DeviceSession.KEY_TIMEZONE, getTimeZone(deviceSession.getDeviceId()));\n            }\n\n            if (dataLength > 10) {\n                int extensionBits = content.readUnsignedShort();\n                int hours = (extensionBits >> 4) / 100;\n                int minutes = (extensionBits >> 4) % 100;\n                int offset = (hours * 60 + minutes) * 60;\n                if ((extensionBits & 0x8) != 0) {\n                    offset = -offset;\n                }\n                if (deviceSession != null) {\n                    TimeZone timeZone = deviceSession.get(DeviceSession.KEY_TIMEZONE);\n                    if (timeZone.getRawOffset() == 0) {\n                        timeZone.setRawOffset(offset * 1000);\n                        deviceSession.set(DeviceSession.KEY_TIMEZONE, timeZone);\n                    }\n                }\n            }\n\n            if (deviceSession != null) {\n                sendResponse(channel, false, type, serialNumber, null);\n            }\n\n            return null;\n\n        } else if (type == MSG_HEARTBEAT) {\n\n            getLastLocation(position, null);\n\n            int status = content.readUnsignedByte();\n            position.set(Position.KEY_ARMED, BitUtil.check(status, 0));\n            position.set(Position.KEY_IGNITION, BitUtil.check(status, 1));\n            position.set(Position.KEY_CHARGE, BitUtil.check(status, 2));\n\n            if (content.readableBytes() >= 2) {\n                position.set(Position.KEY_BATTERY, content.readUnsignedShort() * 0.01);\n            }\n            if (content.readableBytes() >= 1) {\n                position.set(Position.KEY_RSSI, content.readUnsignedByte());\n            }\n\n            sendResponse(channel, false, type, serialNumber, null);\n\n            return position;\n\n        } else if (type == MSG_ADDRESS_REQUEST) {\n\n            String response = \"NA&&NA&&0##\";\n            ByteBuf respContent = Unpooled.buffer();\n            respContent.writeByte(response.length());\n            respContent.writeInt(0);\n            respContent.writeBytes(response.getBytes(StandardCharsets.US_ASCII));\n            sendResponse(channel, true, MSG_ADDRESS_RESPONSE, serialNumber, respContent);\n\n            return null;\n\n        } else if (type == MSG_TIME_REQUEST) {\n\n            Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"));\n            ByteBuf respContent = Unpooled.buffer();\n            respContent.writeByte(calendar.get(Calendar.YEAR) - 2000);\n            respContent.writeByte(calendar.get(Calendar.MONTH) + 1);\n            respContent.writeByte(calendar.get(Calendar.DAY_OF_MONTH));\n            respContent.writeByte(calendar.get(Calendar.HOUR_OF_DAY));\n            respContent.writeByte(calendar.get(Calendar.MINUTE));\n            respContent.writeByte(calendar.get(Calendar.SECOND));\n            sendResponse(channel, false, MSG_TIME_REQUEST, serialNumber, respContent);\n\n            return null;\n\n        } else if (type == MSG_X1_GPS) {\n\n            content.readUnsignedInt(); // data and alarm\n\n            decodeGps(position, content, false, deviceSession.get(DeviceSession.KEY_TIMEZONE));\n\n            content.readUnsignedShort(); // terminal info\n\n            position.set(Position.KEY_ODOMETER, content.readUnsignedInt());\n\n            position.setNetwork(new Network(CellTower.from(\n                    content.readUnsignedShort(), content.readUnsignedByte(),\n                    content.readUnsignedShort(), content.readUnsignedInt())));\n\n            long driverId = content.readUnsignedInt();\n            if (driverId > 0) {\n                position.set(Position.KEY_DRIVER_UNIQUE_ID, String.valueOf(driverId));\n            }\n\n            position.set(Position.KEY_BATTERY, content.readUnsignedShort() * 0.01);\n            position.set(Position.KEY_POWER, content.readUnsignedShort() * 0.01);\n\n            long portInfo = content.readUnsignedInt();\n\n            position.set(Position.KEY_INPUT, content.readUnsignedByte());\n            position.set(Position.KEY_OUTPUT, content.readUnsignedByte());\n\n            for (int i = 1; i <= BitUtil.between(portInfo, 20, 24); i++) {\n                position.set(Position.PREFIX_ADC + i, content.readUnsignedShort() * 0.01);\n            }\n\n            return position;\n\n        } else if (type == MSG_X1_PHOTO_INFO) {\n\n            content.skipBytes(6); // time\n            content.readUnsignedByte(); // fix status\n            content.readUnsignedInt(); // latitude\n            content.readUnsignedInt(); // longitude\n            content.readUnsignedByte(); // camera id\n            content.readUnsignedByte(); // photo source\n            content.readUnsignedByte(); // picture format\n\n            ByteBuf photo = Unpooled.buffer(content.readInt());\n            int pictureId = content.readInt();\n            photos.put(pictureId, photo);\n            sendPhotoRequest(channel, pictureId);\n\n            return null;\n\n        } else if (type == MSG_WIFI || type == MSG_WIFI_2 || type == MSG_WIFI_4) {\n\n            ByteBuf time = content.readSlice(6);\n            DateBuilder dateBuilder = new DateBuilder()\n                    .setYear(BcdUtil.readInteger(time, 2))\n                    .setMonth(BcdUtil.readInteger(time, 2))\n                    .setDay(BcdUtil.readInteger(time, 2))\n                    .setHour(BcdUtil.readInteger(time, 2))\n                    .setMinute(BcdUtil.readInteger(time, 2))\n                    .setSecond(BcdUtil.readInteger(time, 2));\n            getLastLocation(position, dateBuilder.getDate());\n\n            Network network = new Network();\n\n            int wifiCount;\n            if (type == MSG_WIFI_4) {\n                wifiCount = content.readUnsignedByte();\n            } else {\n                wifiCount = content.getUnsignedByte(2);\n            }\n\n            for (int i = 0; i < wifiCount; i++) {\n                if (type == MSG_WIFI_4) {\n                    content.skipBytes(2);\n                }\n                WifiAccessPoint wifiAccessPoint = new WifiAccessPoint();\n                wifiAccessPoint.setMacAddress(String.format(\"%02x:%02x:%02x:%02x:%02x:%02x\",\n                        content.readUnsignedByte(), content.readUnsignedByte(), content.readUnsignedByte(),\n                        content.readUnsignedByte(), content.readUnsignedByte(), content.readUnsignedByte()));\n                if (type != MSG_WIFI_4) {\n                    wifiAccessPoint.setSignalStrength((int) content.readUnsignedByte());\n                }\n                network.addWifiAccessPoint(wifiAccessPoint);\n            }\n\n            if (type != MSG_WIFI_4) {\n\n                int cellCount = content.readUnsignedByte();\n                int mcc = content.readUnsignedShort();\n                int mnc = content.readUnsignedByte();\n                for (int i = 0; i < cellCount; i++) {\n                    network.addCellTower(CellTower.from(\n                            mcc, mnc, content.readUnsignedShort(), content.readUnsignedShort(), content.readUnsignedByte()));\n                }\n\n                if (channel != null) {\n                    ByteBuf response = Unpooled.buffer();\n                    response.writeShort(0x7878);\n                    response.writeByte(0);\n                    response.writeByte(type);\n                    response.writeBytes(time.resetReaderIndex());\n                    response.writeByte('\\r');\n                    response.writeByte('\\n');\n                    channel.writeAndFlush(new NetworkMessage(response, channel.remoteAddress()));\n                }\n\n            }\n\n            position.setNetwork(network);\n\n            return position;\n\n        } else if (type == MSG_INFO) {\n\n            getLastLocation(position, null);\n\n            position.set(Position.KEY_POWER, content.readShort() * 0.01);\n\n            return position;\n\n        } else if (type == MSG_LBS_MULTIPLE_3 && variant == Variant.SR411_MINI) {\n\n            decodeGps(position, content, false, deviceSession.get(DeviceSession.KEY_TIMEZONE));\n\n            decodeLbs(position, content, type, false);\n\n            position.set(Position.KEY_IGNITION, content.readUnsignedByte() > 0);\n            position.set(Position.KEY_POWER, content.readUnsignedShort() * 0.01);\n            position.set(Position.KEY_BATTERY, content.readUnsignedShort() * 0.01);\n\n            return position;\n\n        } else if (type == MSG_LBS_MULTIPLE_1 || type == MSG_LBS_MULTIPLE_2 || type == MSG_LBS_MULTIPLE_3\n                || type == MSG_LBS_EXTEND || type == MSG_LBS_WIFI || type == MSG_LBS_2\n                || type == MSG_WIFI_3 || type == MSG_WIFI_5) {\n\n            boolean longFormat = type == MSG_LBS_2 || type == MSG_WIFI_3 || type == MSG_WIFI_5;\n\n            DateBuilder dateBuilder = new DateBuilder((TimeZone) deviceSession.get(DeviceSession.KEY_TIMEZONE))\n                    .setDate(content.readUnsignedByte(), content.readUnsignedByte(), content.readUnsignedByte())\n                    .setTime(content.readUnsignedByte(), content.readUnsignedByte(), content.readUnsignedByte());\n\n            getLastLocation(position, dateBuilder.getDate());\n\n            if (variant == Variant.WANWAY_S20) {\n                content.readUnsignedByte(); // ta\n            }\n\n            int mcc = content.readUnsignedShort();\n            int mnc = BitUtil.check(mcc, 15) ? content.readUnsignedShort() : content.readUnsignedByte();\n            Network network = new Network();\n\n            int cellCount = variant == Variant.WANWAY_S20 ? content.readUnsignedByte() : type == MSG_WIFI_5 ? 6 : 7;\n            for (int i = 0; i < cellCount; i++) {\n                int lac = longFormat ? content.readInt() : content.readUnsignedShort();\n                int cid = longFormat ? (int) content.readLong() : content.readUnsignedMedium();\n                int rssi = -content.readUnsignedByte();\n                if (lac > 0) {\n                    network.addCellTower(CellTower.from(BitUtil.to(mcc, 15), mnc, lac, cid, rssi));\n                }\n            }\n\n            if (variant != Variant.WANWAY_S20) {\n                content.readUnsignedByte(); // ta\n            }\n\n            if (type != MSG_LBS_MULTIPLE_1 && type != MSG_LBS_MULTIPLE_2 && type != MSG_LBS_MULTIPLE_3\n                    && type != MSG_LBS_2) {\n                int wifiCount = content.readUnsignedByte();\n                for (int i = 0; i < wifiCount; i++) {\n                    String mac = ByteBufUtil.hexDump(content.readSlice(6)).replaceAll(\"(..)\", \"$1:\");\n                    network.addWifiAccessPoint(WifiAccessPoint.from(\n                            mac.substring(0, mac.length() - 1), content.readUnsignedByte()));\n                }\n            }\n\n            position.setNetwork(network);\n\n        } else if (type == MSG_STRING) {\n\n            getLastLocation(position, null);\n\n            int commandLength = content.readUnsignedByte();\n\n            if (commandLength > 0) {\n                content.readUnsignedInt(); // server flag (reserved)\n                String data = content.readSlice(commandLength - 4).toString(StandardCharsets.US_ASCII);\n                if (data.startsWith(\"<ICCID:\")) {\n                    position.set(Position.KEY_ICCID, data.substring(7, 27));\n                } else {\n                    position.set(Position.KEY_RESULT, data);\n                }\n            }\n\n        } else if (type == MSG_BMS) {\n\n            content.skipBytes(8); // serial number\n\n            getLastLocation(position, new Date(content.readUnsignedInt() * 1000));\n\n            position.set(\"relativeCapacity\", content.readUnsignedByte());\n            position.set(\"remainingCapacity\", content.readUnsignedShort());\n            position.set(\"absoluteCapacity\", content.readUnsignedByte());\n            position.set(\"fullCapacity\", content.readUnsignedShort());\n            position.set(\"batteryHealth\", content.readUnsignedByte());\n            position.set(\"batteryTemp\", content.readUnsignedShort() * 0.1 - 273.1);\n            position.set(\"current\", content.readUnsignedShort());\n            position.set(Position.KEY_BATTERY, content.readUnsignedShort() * 0.001);\n            position.set(\"cycleIndex\", content.readUnsignedShort());\n            for (int i = 1; i <= 14; i++) {\n                position.set(\"batteryCell\" + i, content.readUnsignedShort() * 0.001);\n            }\n            position.set(\"currentChargeInterval\", content.readUnsignedShort());\n            position.set(\"maxChargeInterval\", content.readUnsignedShort());\n            position.set(\"barcode\", content.readCharSequence(16, StandardCharsets.US_ASCII).toString().trim());\n            position.set(\"batteryVersion\", content.readUnsignedShort());\n            position.set(\"manufacturer\", content.readCharSequence(16, StandardCharsets.US_ASCII).toString().trim());\n            position.set(\"batteryStatus\", content.readUnsignedInt());\n\n            position.set(\"controllerStatus\", content.readUnsignedInt());\n            position.set(\"controllerFault\", content.readUnsignedInt());\n\n            sendResponse(channel, false, type, serialNumber, null);\n\n            return position;\n\n        } else if (type == MSG_STATUS && content.readableBytes() == 22) {\n\n            getLastLocation(position, null);\n\n            content.readUnsignedByte(); // information content\n            content.readUnsignedShort(); // satellites\n            content.readUnsignedByte(); // alarm\n            content.readUnsignedByte(); // language\n\n            position.set(Position.KEY_BATTERY_LEVEL, content.readUnsignedByte());\n\n            content.readUnsignedByte(); // working mode\n            content.readUnsignedShort(); // working voltage\n            content.readUnsignedByte(); // reserved\n            content.readUnsignedShort(); // working times\n            content.readUnsignedShort(); // working time\n\n            int value = content.readUnsignedShort();\n            double temperature = BitUtil.to(value, 15) * 0.1;\n            position.set(Position.PREFIX_TEMP + 1, BitUtil.check(value, 15) ? temperature : -temperature);\n\n        } else if (isSupported(type)) {\n\n            if (type == MSG_LBS_STATUS && variant == Variant.SPACE10X) {\n                return null; // multi-lbs message\n            }\n\n            if (hasGps(type)) {\n                decodeGps(position, content, false, deviceSession.get(DeviceSession.KEY_TIMEZONE));\n            } else {\n                getLastLocation(position, null);\n            }\n\n            if (hasLbs(type)) {\n                decodeLbs(position, content, type, hasStatus(type) && type != MSG_LBS_ALARM);\n            }\n\n            if (hasStatus(type)) {\n                decodeStatus(position, content);\n                if (variant == Variant.OBD6) {\n                    int signal = content.readUnsignedShort();\n                    int satellites = BitUtil.between(signal, 10, 15) + BitUtil.between(signal, 5, 10);\n                    position.set(Position.KEY_SATELLITES, satellites);\n                    position.set(Position.KEY_RSSI, BitUtil.to(signal, 5));\n                    position.set(Position.KEY_ALARM, decodeAlarm(content.readUnsignedByte()));\n                    content.readUnsignedByte(); // language\n                    position.set(Position.KEY_BATTERY_LEVEL, content.readUnsignedByte());\n                    content.readUnsignedByte(); // working mode\n                    position.set(Position.KEY_POWER, content.readUnsignedShort() / 100.0);\n                } else {\n                    position.set(Position.KEY_BATTERY_LEVEL, content.readUnsignedByte() * 100 / 6);\n                    position.set(Position.KEY_RSSI, content.readUnsignedByte());\n                    position.set(Position.KEY_ALARM, decodeAlarm(content.readUnsignedByte()));\n                }\n            }\n\n            if (type == MSG_GPS_LBS_1) {\n                if (variant == Variant.GT06E_CARD) {\n                    position.set(Position.KEY_ODOMETER, content.readUnsignedInt());\n                    String data = content.readCharSequence(content.readUnsignedByte(), StandardCharsets.US_ASCII).toString();\n                    content.readUnsignedByte(); // alarm\n                    content.readUnsignedByte(); // swiped\n                    position.set(\"driverLicense\", data.trim());\n                } else if (variant == Variant.BENWAY) {\n                    int mask = content.readUnsignedShort();\n                    position.set(Position.KEY_IGNITION, BitUtil.check(mask, 8 + 7));\n                    position.set(Position.PREFIX_IN + 2, BitUtil.check(mask, 8 + 6));\n                    if (BitUtil.check(mask, 8 + 4)) {\n                        int value = BitUtil.to(mask, 8 + 1);\n                        if (BitUtil.check(mask, 8 + 1)) {\n                            value = -value;\n                        }\n                        position.set(Position.PREFIX_TEMP + 1, value);\n                    } else {\n                        int value = BitUtil.to(mask, 8 + 2);\n                        if (BitUtil.check(mask, 8 + 5)) {\n                            position.set(Position.PREFIX_ADC + 1, value);\n                        } else {\n                            position.set(Position.PREFIX_ADC + 1, value * 0.1);\n                        }\n                    }\n                } else if (variant == Variant.VXT01) {\n                    decodeStatus(position, content);\n                    position.set(Position.KEY_POWER, content.readUnsignedShort() * 0.01);\n                    position.set(Position.KEY_RSSI, content.readUnsignedByte());\n                    content.readUnsignedByte(); // alarm extension\n                } else if (variant == Variant.S5) {\n                    decodeStatus(position, content);\n                    position.set(Position.KEY_POWER, content.readUnsignedShort() * 0.01);\n                    position.set(Position.KEY_RSSI, content.readUnsignedByte());\n                    position.set(Position.KEY_ALARM, decodeAlarm(content.readUnsignedByte()));\n                    position.set(\"oil\", content.readUnsignedShort());\n                    int temperature = content.readUnsignedByte();\n                    if (BitUtil.check(temperature, 7)) {\n                        temperature = -BitUtil.to(temperature, 7);\n                    }\n                    position.set(Position.PREFIX_TEMP + 1, temperature);\n                    position.set(Position.KEY_ODOMETER, content.readUnsignedInt() * 10);\n                }\n            }\n\n            if ((type == MSG_GPS_LBS_2 || type == MSG_GPS_LBS_3 || type == MSG_GPS_LBS_4)\n                    && content.readableBytes() >= 3) {\n                position.set(Position.KEY_IGNITION, content.readUnsignedByte() > 0);\n                position.set(Position.KEY_EVENT, content.readUnsignedByte()); // reason\n                position.set(Position.KEY_ARCHIVE, content.readUnsignedByte() > 0);\n            }\n\n            if (type == MSG_GPS_LBS_3) {\n                int module = content.readUnsignedShort();\n                int subLength = content.readUnsignedByte();\n                switch (module) {\n                    case 0x0027:\n                        position.set(Position.KEY_POWER, content.readUnsignedShort() * 0.01);\n                        break;\n                    case 0x002E:\n                        position.set(Position.KEY_ODOMETER, content.readUnsignedInt());\n                        break;\n                    case 0x003B:\n                        position.setAccuracy(content.readUnsignedShort() * 0.01);\n                        break;\n                    default:\n                        content.skipBytes(subLength);\n                        break;\n                }\n            }\n\n            if (content.readableBytes() == 4) {\n                position.set(Position.KEY_ODOMETER, content.readUnsignedInt());\n            }\n\n        } else if (type == MSG_ALARM) {\n\n            boolean extendedAlarm = dataLength > 7;\n            if (extendedAlarm) {\n                decodeGps(position, content, false, false, false, deviceSession.get(DeviceSession.KEY_TIMEZONE));\n            } else {\n                DateBuilder dateBuilder = new DateBuilder((TimeZone) deviceSession.get(DeviceSession.KEY_TIMEZONE))\n                        .setDate(content.readUnsignedByte(), content.readUnsignedByte(), content.readUnsignedByte())\n                        .setTime(content.readUnsignedByte(), content.readUnsignedByte(), content.readUnsignedByte());\n                getLastLocation(position, dateBuilder.getDate());\n            }\n            short alarmType = content.readUnsignedByte();\n            switch (alarmType) {\n                case 0x01:\n                    position.set(Position.KEY_ALARM, extendedAlarm ? Position.ALARM_SOS : Position.ALARM_GENERAL);\n                    break;\n                case 0x80:\n                    position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);\n                    break;\n                case 0x87:\n                    position.set(Position.KEY_ALARM, Position.ALARM_OVERSPEED);\n                    break;\n                case 0x90:\n                    position.set(Position.KEY_ALARM, Position.ALARM_ACCELERATION);\n                    break;\n                case 0x91:\n                    position.set(Position.KEY_ALARM, Position.ALARM_BRAKING);\n                    break;\n                case 0x92:\n                    position.set(Position.KEY_ALARM, Position.ALARM_CORNERING);\n                    break;\n                case 0x93:\n                    position.set(Position.KEY_ALARM, Position.ALARM_ACCIDENT);\n                    break;\n                default:\n                    position.set(Position.KEY_ALARM, Position.ALARM_GENERAL);\n                    break;\n            }\n\n        } else {\n\n            if (dataLength > 0) {\n                content.skipBytes(dataLength);\n            }\n            if (type != MSG_COMMAND_0 && type != MSG_COMMAND_1 && type != MSG_COMMAND_2) {\n                sendResponse(channel, false, type, serialNumber, null);\n            }\n            return null;\n\n        }\n\n        if (hasLanguage(type)) {\n            content.readUnsignedShort();\n        }\n\n        if (type == MSG_GPS_LBS_STATUS_3 || type == MSG_FENCE_MULTI) {\n            position.set(Position.KEY_GEOFENCE, content.readUnsignedByte());\n        }\n\n        sendResponse(channel, false, type, serialNumber, null);\n\n        return position;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}