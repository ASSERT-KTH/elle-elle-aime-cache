{
    "generation": "    @Override\n    protected Object decode(\n            Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {\n        ByteBuf buf = (ByteBuf) msg;\n        buf.skipBytes(1); // '[' header\n        manufacturer = buf.readSlice(2).toString(StandardCharsets.US_ASCII);\n        buf.skipBytes(1); // '*' delimiter\n        int idIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) '*');\n        String id = buf.readSlice(idIndex - buf.readerIndex()).toString(StandardCharsets.US_ASCII);\n        DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, id);\n        if (deviceSession == null) {\n            return null;\n        }\n        buf.skipBytes(1); // '*' delimiter\n        String index = null;\n        int contentIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) '*');\n        if (contentIndex + 5 < buf.writerIndex() && buf.getByte(contentIndex + 5) == '*'\n                && buf.toString(contentIndex + 1, 4, StandardCharsets.US_ASCII).matches(\"\\\\p{XDigit}+\")) {\n            int indexLength = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) '*') - buf.readerIndex();\n            hasIndex = true;\n            index = buf.readSlice(indexLength).toString(StandardCharsets.US_ASCII);\n            buf.skipBytes(1); // '*' delimiter\n        }\n        buf.skipBytes(4); // length\n        buf.skipBytes(1); // '*' delimiter\n        buf.writerIndex(buf.writerIndex() - 1); // ']' ignore ending\n        contentIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',');\n        if (contentIndex < 0) {\n            contentIndex = buf.writerIndex();\n        }\n        String type = buf.readSlice(contentIndex - buf.readerIndex()).toString(StandardCharsets.US_ASCII);\n        if (contentIndex < buf.writerIndex()) {\n            buf.readerIndex(contentIndex + 1);\n        }\n        if (type.equals(\"INIT\")) {\n            sendResponse(channel, id, index, \"INIT,1\");\n        } else if (type.equals(\"LK\")) {\n            sendResponse(channel, id, index, \"LK\");\n            if (buf.isReadable()) {\n                String[] values = buf.toString(StandardCharsets.US_ASCII).split(\",\");\n                if (values.length >= 3) {\n                    Position position = new Position(getProtocolName());\n                    position.setDeviceId(deviceSession.getDeviceId());\n                    getLastLocation(position, null);\n                    position.set(Position.KEY_BATTERY_LEVEL, Integer.parseInt(values[2]));\n                    position.set(Position.KEY_STEPS, Integer.parseInt(values[0]));\n                    return position;\n                }\n            }\n        } else if (type.startsWith(\"UD\") || type.startsWith(\"AL\") || type.startsWith(\"WT\")) {\n            Position position = decodePosition(deviceSession, buf.toString(StandardCharsets.US_ASCII));\n            if (type.startsWith(\"AL\")) {\n// buggy code\n//                if (position != null) {\n//                    position.set(Position.KEY_ALARM, Position.ALARM_GENERAL);\n//                }\n//                sendResponse(channel, id, index, \"AL\");\n//            }\n//            return position;\n//        } else if (type.equals(\"TKQ\") || type.equals(\"TKQ2\")) {\n//            sendResponse(channel, id, index, type);\n//        } else if (type.equalsIgnoreCase(\"PULSE\")\n//                || type.equalsIgnoreCase(\"HEART\")\n//                || type.equalsIgnoreCase(\"BLOOD\")\n//                || type.equalsIgnoreCase(\"BPHRT\")\n//                || type.equalsIgnoreCase(\"btemp2\")) {\n//            if (buf.isReadable()) {\n//                Position position = new Position(getProtocolName());\n//                position.setDeviceId(deviceSession.getDeviceId());\n//                getLastLocation(position, new Date());\n//                String[] values = buf.toString(StandardCharsets.US_ASCII).split(\",\");\n//                int valueIndex = 0;\n//                if (type.equalsIgnoreCase(\"btemp2\")) {\n//                    position.set(Position.PREFIX_TEMP + 1, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 2, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 3, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 4, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 5, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 6, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 7, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 8, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 9, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 10, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 11, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 12, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 13, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 14, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 15, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 16, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 17, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 18, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 19, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 20, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 21, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 22, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 23, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 24, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 25, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 26, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 27, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 28, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 29, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 30, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 31, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 32, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 33, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 34, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 35, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 36, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 37, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 38, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 39, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 40, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 41, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 42, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 43, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 44, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 45, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 46, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 47, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 48, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 49, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 50, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 51, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 52, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 53, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 54, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 55, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 56, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 57, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 58, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 59, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 60, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 61, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 62, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 63, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 64, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 65, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 66, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 67, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 68, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 69, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 70, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 71, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 72, Double.parseDouble(values[valueIndex++]));\n//                    position.set(Position.PREFIX_TEMP + 73, Double.parseDouble(\n                    if (Integer.parseInt(values[valueIndex++]) > 0) {\n                        position.set(Position.PREFIX_TEMP + 1, Double.parseDouble(values[valueIndex]));\n                    }\n                } else {\n                    if (type.equalsIgnoreCase(\"BPHRT\") || type.equalsIgnoreCase(\"BLOOD\")) {\n                        position.set(\"pressureHigh\", values[valueIndex++]);\n                        position.set(\"pressureLow\", values[valueIndex++]);\n                    }\n                    if (valueIndex <= values.length - 1) {\n                        position.set(Position.KEY_HEART_RATE, Integer.parseInt(values[valueIndex]));\n                    }\n                }\n                return position;\n            }\n        } else if (type.equals(\"img\")) {\n            Position position = new Position(getProtocolName());\n            position.setDeviceId(deviceSession.getDeviceId());\n            getLastLocation(position, null);\n            int timeIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',');\n            buf.readerIndex(timeIndex + 12 + 2);\n            position.set(Position.KEY_IMAGE, writeMediaFile(id, buf, \"jpg\"));\n            return position;\n        } else if (type.equals(\"JXTK\")) {\n            int dataIndex = BufferUtil.indexOf(buf, buf.readerIndex(), buf.writerIndex(), (byte) ',', 4) + 1;\n            String[] values = buf.readCharSequence(\n                    dataIndex - buf.readerIndex(), StandardCharsets.US_ASCII).toString().split(\",\");\n            int current = Integer.parseInt(values[2]);\n            int total = Integer.parseInt(values[3]);\n            if (audio == null) {\n                audio = Unpooled.buffer();\n            }\n            audio.writeBytes(buf);\n            sendResponse(channel, id, index, \"JXTKR,1\");\n            if (current < total) {\n                return null;\n            } else {\n                Position position = new Position(getProtocolName());\n                position.setDeviceId(deviceSession.getDeviceId());\n                getLastLocation(position, null);\n                position.set(Position.KEY_AUDIO, writeMediaFile(id, audio, \"amr\"));\n                audio.release();\n                audio = null;\n                return position;\n            }\n        } else if (type.equals(\"TK\")) {\n            if (buf.readableBytes() == 1) {\n                return null;\n            }\n            Position position = new Position(getProtocolName());\n            position.setDeviceId(deviceSession.getDeviceId());\n            getLastLocation(position, null);\n            position.set(Position.KEY_AUDIO, writeMediaFile(id, buf, \"amr\"));\n            return position;\n        }\n        return null;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}