{
    "generation": "    protected Object decodeAvrmc(\n            String sentence, Channel channel, SocketAddress remoteAddress) {\n        Parser parser = new Parser(PATTERN_AVRMC, sentence);\n        if (!parser.matches()) {\n            return null;\n        }\n        DeviceSession deviceSession =\n            getDeviceSession(channel, remoteAddress, parser.next());\n        if (deviceSession == null) {\n            return null;\n        }\n        String deviceModel = null;\n        Device device = getCacheManager().getObject(Device.class, deviceSession.getDeviceId());\n        if (device != null) {\n            deviceModel = device.getModel();\n// buggy code\n//        }\n//        Position position = new Position(getProtocolName());\n//        position.setDeviceId(deviceSession.getDeviceId());\n//        DateBuilder dateBuilder = new DateBuilder()\n//                .setTime(parser.nextInt(0), parser.nextInt(0), parser.nextInt(0));\n//        String status = parser.next();\n//        String upperCaseStatus = status.toUpperCase();\n//        position.setValid(upperCaseStatus.equals(\"A\") || upperCaseStatus.equals(\"R\") || upperCaseStatus.equals(\"P\"));\n//        position.set(Position.KEY_STATUS, status);\n//        position.setLatitude(parser.nextCoordinate());\n//        position.setLongitude(parser.nextCoordinate());\n//        position.setSpeed(parser.nextDouble(0));\n//        position.setCourse(parser.nextDouble(0));\n//        dateBuilder.setDateReverse(parser.nextInt(0), parser.nextInt(0), parser.nextInt(0));\n//        position.setTime(dateBuilder.getDate());\n//        String event = parser.next();\n//        position.set(Position.KEY_ALARM, decodeAlarm(event));\n//        position.set(Position.KEY_EVENT, decodeEvent(event, position, deviceModel));\n//        position.set(Position.KEY_BATTERY, Double.parseDouble(parser.next().replaceAll(\"\\\\.\", \"\")) * 0.001);\n//        position.set(Position.KEY_ODOMETER, parser.nextDouble() * 1000);\n//        position.set(Position.KEY_GPS, parser.nextInt());\n//        position.set(Position.PREFIX_ADC + 1, parser.nextDouble() * 0.001);\n//        if (\"AVL110\".equals(deviceModel) || \"AVL120\".equals(deviceModel)) {\n//            position.set(Position.PREFIX_ADC + 2, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 3, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 4, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 5, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 6, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 7, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 8, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 9, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 10, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 11, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 12, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 13, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 14, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 15, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 16, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 17, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 18, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 19, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 20, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 21, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 22, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 23, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 24, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 25, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 26, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 27, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 28, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 29, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 30, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 31, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 32, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 33, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 34, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 35, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 36, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 37, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 38, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 39, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 40, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 41, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 42, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 43, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 44, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 45, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 46, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 47, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 48, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 49, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 50, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 51, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 52, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 53, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 54, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 55, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 56, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 57, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 58, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 59, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 60, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 61, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 62, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 63, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 64, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 65, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 66, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 67, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 68, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 69, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 70, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 71, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 72, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 73, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 74, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 75, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 76, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 77, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 78, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 79, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 80, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 81, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 82, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 83, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 84, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 85, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 86, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 87, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 88, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 89, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 90, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 91, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 92, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 93, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 94, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 95, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 96, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 97, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 98, parser.nextDouble() * 0.001);\n//            position.set(Position.PREFIX_ADC + 99, parser.nextDouble() * 0.001);\n        }\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n        DateBuilder dateBuilder = new DateBuilder()\n                .setTime(parser.nextInt(0), parser.nextInt(0), parser.nextInt(0));\n        String status = parser.next();\n        String upperCaseStatus = status.toUpperCase();\n        position.setValid(upperCaseStatus.equals(\"A\") || upperCaseStatus.equals(\"R\") || upperCaseStatus.equals(\"P\"));\n        position.set(Position.KEY_STATUS,\n        }\n        Integer lac = parser.nextHexInt();\n        Integer cid = parser.nextHexInt();\n        Integer mcc = parser.nextInt();\n        Integer mnc = parser.nextInt();\n        if (lac != null && cid != null && mcc != null && mnc != null) {\n            position.setNetwork(new Network(CellTower.from(mcc, mnc, lac, cid)));\n        }\n        parser.next(); // unused\n        String checksum = parser.next();\n        if (channel != null) {\n            sendAcknowledge(status, event, checksum, channel, remoteAddress);\n            String devicePassword = AttributeUtil.getDevicePassword(\n                    getCacheManager(), deviceSession.getDeviceId(), getProtocolName(), DEFAULT_DEVICE_PASSWORD);\n            sendEventResponse(event, devicePassword, channel, remoteAddress);\n        }\n        return position;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}