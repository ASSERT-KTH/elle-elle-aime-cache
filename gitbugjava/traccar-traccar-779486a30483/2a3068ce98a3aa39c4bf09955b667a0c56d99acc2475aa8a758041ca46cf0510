{
    "generation": "    protected Object decodeAvrmc(\n            String sentence, Channel channel, SocketAddress remoteAddress) {\n        Parser parser = new Parser(PATTERN_AVRMC, sentence);\n        if (!parser.matches()) {\n            return null;\n        }\n        DeviceSession deviceSession =\n            getDeviceSession(channel, remoteAddress, parser.next());\n        if (deviceSession == null) {\n            return null;\n        }\n        String deviceModel = null;\n        Device device = getCacheManager().getObject(Device.class, deviceSession.getDeviceId());\n        if (device != null) {\n            deviceModel = device.getModel();\n       }\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n        DateBuilder dateBuilder = new DateBuilder()\n                .setDate(parser.nextInt(), parser.nextInt(), parser.nextInt())\n                .setTime(parser.nextInt(), parser.nextInt(), parser.nextInt());\n        position.setValid(parser.next().equals(\"A\"));\n        position.setLatitude(parser.nextCoordinate());\n        position.setLongitude(parser.nextCoordinate());\n        position.setSpeed(UnitsConverter.knotsFromKph(parser.nextDouble()));\n        position.setCourse(parser.nextDouble());\n        position.setAltitude(parser.nextDouble());\n        position.set(Position.KEY_SATELLITES, parser.nextInt());\n        position.set(Position.KEY_HDOP, parser.nextDouble());\n        position.set(Position.KEY_ODOMETER, parser.nextDouble());\n        position.set(Position.KEY_RSSI, parser.nextInt());\n        position        }\n        Integer lac = parser.nextHexInt();\n        Integer cid = parser.nextHexInt();\n        Integer mcc = parser.nextInt();\n        Integer mnc = parser.nextInt();\n        if (lac != null && cid != null && mcc != null && mnc != null) {\n            position.setNetwork(new Network(CellTower.from(mcc, mnc, lac, cid)));\n        }\n        parser.next(); \n        String checksum = parser.next();\n        if (channel != null) {\n            sendAcknowledge(status, event, checksum, channel, remoteAddress);\n            String devicePassword = AttributeUtil.getDevicePassword(\n                    getCacheManager(), deviceSession.getDeviceId(), getProtocolName(), DEFAULT_DEVICE_PASSWORD);\n            sendEventResponse(event, devicePassword, channel, remoteAddress);\n        }\n        return position;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}