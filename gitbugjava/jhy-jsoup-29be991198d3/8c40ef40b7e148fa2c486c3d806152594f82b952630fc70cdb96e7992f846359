{
    "generation": "void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {\n    final boolean prettyPrint = out.prettyPrint();\n    final Element parent = parentNode instanceof Element ? ((Element) parentNode) : null;\n    final boolean normaliseWhite = prettyPrint && !Element.preserveWhitespace(parentNode);\n\n    boolean trimLeading = false;\n    boolean trimTrailing = false;\n    if (normaliseWhite) {\n        trimLeading = (siblingIndex == 0 && parent != null && parent.tag().isBlock()) ||\n            parentNode instanceof Document;\n        trimTrailing = nextSibling() == null && parent != null && parent.tag().isBlock();\n\n        // if this text is just whitespace, and the next node will cause an indent, skip this text:\n        Node next = this.nextSibling();\n        boolean couldSkip = (next instanceof Element && ((Element) next).shouldIndent(out)) // next will indent\n            || (next instanceof TextNode && (((TextNode) next).isBlank())); // next is blank text, from re-parenting\n        if (couldSkip && isBlank()) return;\n\n        if ((siblingIndex == 0 && parent != null && parent.tag().formatAsBlock() && !isBlank()) ||\n            (out.outline() && siblingNodes().size() > 0 && !isBlank()))\n            indent(accum, depth, out);\n    }\n\n    boolean isTrailingWhitespace = false;\n    if (nextSibling() == null && parent != null && parent.tag().isInline()) {\n        // if this is the last node in an inline parent, and the parent has block siblings, we should\n        // add a trailing space to ensure the right whitespace rendering.\n        for (Node sibling : parent.siblingNodes()) {\n            if (sibling instanceof Element && ((Element) sibling).tag().isBlock()) {\n                isTrailingWhitespace = true;\n                break;\n            }\n        }\n    }\n\n    Entities.escape(accum, coreValue(), out, isTrailingWhitespace, normaliseWhite, trimLeading, trimTrailing);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}