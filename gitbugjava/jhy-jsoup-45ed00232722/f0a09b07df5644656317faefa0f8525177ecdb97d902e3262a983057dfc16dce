{
    "generation": "    static URL encodeUrl(URL u) {\n        u = punyUrl(u);\n        try {\n            // Convert URL to a string and then to a URI\n            String urlS = u.toExternalForm();\n            URI uri = new URI(urlS);\n\n            // Build a new URI with encoded parts\n            URI encodedUri = new URI(\n                uri.getScheme(),\n                uri.getAuthority(),\n                encodeURIComponent(uri.getPath()),\n                uri.getQuery() != null ? encodeURIComponent(uri.getQuery()) : null,\n                uri.getFragment() != null ? encodeURIComponent(uri.getFragment()) : null\n            );\n\n            return new URL(encodedUri.toASCIIString());\n        } catch (URISyntaxException | MalformedURLException e) {\n            // If encoding fails, return the original input\n            return u;\n        }\n    }\n\n    // Helper method to encode URI components\n    private static String encodeURIComponent(String component) {\n        try {\n            return URLEncoder.encode(component, \"UTF-8\")\n                .replaceAll(\"\\\\+\", \"%20\")\n                .replaceAll(\"\\\\%21\", \"!\")\n                .replaceAll(\"\\\\%27\", \"'\")\n                .replaceAll(\"\\\\%28\", \"(\")\n                .replaceAll(\"\\\\%29\", \")\")\n                .replaceAll(\"\\\\%7E\", \"~\");\n        } catch (UnsupportedEncodingException e) {\n            throw new RuntimeException(e.getMessage(), e);\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}