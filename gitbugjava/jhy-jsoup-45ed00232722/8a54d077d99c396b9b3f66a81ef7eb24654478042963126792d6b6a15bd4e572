{
    "generation": "import java.io.UnsupportedEncodingException;\nimport java.net.*;\n\npublic class HttpConnection {\n    static URL encodeUrl(URL u) {\n        u = punyUrl(u);\n        try {\n            URI uri = u.toURI();\n\n            String scheme = uri.getScheme();\n            String authority = uri.getAuthority();\n            String path = uri.getPath();\n            String query = uri.getQuery();\n            String fragment = uri.getFragment();\n\n            // Encode path and query\n            String encodedPath = encodePath(path);\n            String encodedQuery = encodeQuery(query);\n\n            // Reconstruct URI\n            URI encodedUri = new URI(scheme, authority, encodedPath, encodedQuery, fragment);\n            return encodedUri.toURL();\n        } catch (URISyntaxException | MalformedURLException e) {\n            return u;\n        }\n    }\n\n    private static String encodePath(String path) {\n        if (path == null) {\n            return null;\n        }\n        // Define unreserved characters for path\n        String unreserved = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~\";\n        return encodeComponent(path, unreserved);\n    }\n\n    private static String encodeQuery(String query) {\n        if (query == null) {\n            return null;\n        }\n        // Define unreserved characters for query\n        String unreserved = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~:/?#[]@!$&'()*+,;=\";\n        return encodeComponent(query, unreserved);\n    }\n\n    private static String encodeComponent(String component, String unreserved) {\n        try {\n            String encoded = URLEncoder.encode(component, \"UTF-8\")\n                                       .replace(\"+\", \"%20\")\n                                       .replace(\"*\", \"%2A\")\n                                       .replace(\"%7E\", \"~\");\n            return encoded;\n        } catch (UnsupportedEncodingException e) {\n            throw new RuntimeException(\"UTF-8 encoding not supported\", e);\n        }\n    }\n\n    // Dummy method to simulate punycode conversion\n    private static URL punyUrl(URL u) {\n        try {\n            return new URL(u.toString());\n        } catch (MalformedURLException e) {\n            return u;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}