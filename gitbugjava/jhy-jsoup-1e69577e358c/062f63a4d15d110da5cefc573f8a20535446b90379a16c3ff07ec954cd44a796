{
    "generation": "URL build() {\n    try {\n        // use the URI class to encode non-ascii in path\n        URI uri = new URI(\n            u.getProtocol(),\n            u.getUserInfo(),\n            IDN.toASCII(u.getHost()), // puny-code\n            u.getPort(),\n            u.getPath(), // do not decode the path to keep encoded characters\n            u.getQuery(), u.getRef() // query and fragment are now appended directly\n        );\n\n        String normUrl = uri.toASCIIString();\n        u =  new URL(normUrl);\n        return u;\n    } catch (MalformedURLException | URISyntaxException e) {\n        // we assert here so that any incomplete normalization issues can be caught in devel. but in practise,\n        // the remote end will be able to handle it, so in prod we just pass the original URL.\n        assert Validate.assertFail(e.toString());\n        return u;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}