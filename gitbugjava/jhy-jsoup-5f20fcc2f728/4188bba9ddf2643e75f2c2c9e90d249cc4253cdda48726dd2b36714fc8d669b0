{
    "generation": "/**\n * Add a list of allowed elements to a safelist. (If a tag is not allowed, it will be removed from the HTML.)\n *\n * @param tags tag names to allow\n * @return this (for chaining)\n */\npublic Safelist addTags(String... tags) {\n    Validate.notNull(tags);\n\n    for (String tagName : tags) {\n        Validate.notEmpty(tagName);\n        if (isValidTag(tagName)) {\n            tagNames.add(TagName.valueOf(tagName));\n        } else {\n            throw new ValidationException(\"Tag name '\" + tagName + \"' is unsupported\");\n        }\n    }\n    return this;\n}\n\nprivate boolean isValidTag(String tagName) {\n    // Implement the logic to check if the tag is valid\n    // This is a placeholder implementation\n    return !\"NOSCRIPT\".equalsIgnoreCase(tagName);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}