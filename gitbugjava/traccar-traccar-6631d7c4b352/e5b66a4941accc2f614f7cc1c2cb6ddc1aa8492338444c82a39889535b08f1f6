{
    "generation": "    @Override\n    protected Object decode(\n            ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n        int endIndex = -1;\n        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {\n            if (buf.getByte(i) == ']') {\n                endIndex = i + 1;\n                break;\n            }\n        }\n\n        if (endIndex > 0 && buf.readerIndex() < endIndex) {\n            ByteBuf frame = Unpooled.buffer();\n            int originalReaderIndex = buf.readerIndex();\n            try {\n                while (buf.readerIndex() < endIndex) {\n                    byte b1 = buf.readByte();\n                    if (b1 == '}') {\n                        if (buf.readableBytes() < 1) {\n                            throw new IllegalArgumentException(\"Incomplete escape sequence\");\n                        }\n                        byte b2 = buf.readByte();\n                        switch (b2) {\n                            case 0x01:\n                                frame.writeByte('}');\n                                break;\n                            case 0x02:\n                                frame.writeByte('[');\n                                break;\n                            case 0x03:\n                                frame.writeByte(']');\n                                break;\n                            case 0x04:\n                                frame.writeByte(',');\n                                break;\n                            case 0x05:\n                                frame.writeByte('*');\n                                break;\n                            default:\n                                throw new IllegalArgumentException(String.format(\n                                        \"unexpected byte at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n                        }\n                    } else {\n                        frame.writeByte(b1);\n                    }\n                }\n\n                if (buf.readerIndex() == endIndex) {\n                    return frame;\n                } else {\n                    buf.readerIndex(originalReaderIndex); // Restore the reader index if decoding is incomplete.\n                    return null;\n                }\n            } catch (Exception e) {\n                buf.readerIndex(originalReaderIndex); // Restore the reader index in case of an error.\n                throw e;\n            }\n        }\n\n        return null;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}