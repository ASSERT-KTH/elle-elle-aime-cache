{
    "generation": "@Override\nprotected Object decode(ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n    int endIndex = buf.readerIndex();\n    while (endIndex < buf.writerIndex()) {\n        if (buf.getByte(endIndex) == ']') {\n            endIndex++; // include the ']'\n            break;\n        }\n        endIndex++;\n    }\n    if (endIndex == buf.writerIndex()) {\n        return null; // no complete frame yet\n    }\n\n    ByteBuf frameData = buf.readRetainedSlice(endIndex - buf.readerIndex());\n    ByteBuf frame = Unpooled.buffer();\n    while (frameData.isReadable()) {\n        byte b1 = frameData.readByte();\n        if (b1 == '}') {\n            byte b2 = frameData.readByte();\n            switch (b2) {\n                case 0x01:\n                    frame.writeByte('}');\n                    break;\n                case 0x02:\n                    frame.writeByte('[');\n                    break;\n                case 0x03:\n                    frame.writeByte(']');\n                    break;\n                case 0x04:\n                    frame.writeByte(',');\n                    break;\n                case 0x05:\n                    frame.writeByte('*');\n                    break;\n                default:\n                    throw new IllegalArgumentException(String.format(\n                            \"unexpected byte at %d: 0x%02x\", frameData.readerIndex() - 1, b2));\n            }\n        } else {\n            frame.writeByte(b1);\n        }\n    }\n    frameData.release();\n    return frame;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}