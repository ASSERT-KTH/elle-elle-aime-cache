{
    "generation": "@Override\nprotected Object decode(ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n    // Find the position of the first ']' from the current readerIndex\n    int endIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ']');\n    \n    if (endIndex != -1) {\n        // Extract the bytes from readerIndex to endIndex\n        int startIndex = buf.readerIndex();\n        ByteBuf frame = Unpooled.buffer(endIndex - startIndex);\n        buf.markReaderIndex();\n        for (int i = 0; i < endIndex - startIndex; i++) {\n            byte b1 = buf.readByte();\n            if (b1 == '}') {\n                byte b2 = buf.readByte();\n                switch (b2) {\n                    case 0x01:\n                        frame.writeByte('}');\n                        break;\n                    case 0x02:\n                        frame.writeByte('[');\n                        break;\n                    case 0x03:\n                        frame.writeByte(']');\n                        break;\n                    case 0x04:\n                        frame.writeByte(',');\n                        break;\n                    case 0x05:\n                        frame.writeByte('*');\n                        break;\n                    default:\n                        throw new IllegalArgumentException(String.format(\n                                \"unexpected byte at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n                }\n            } else {\n                frame.writeByte(b1);\n            }\n        }\n        buf.resetReaderIndex();\n        buf.readerIndex(endIndex + 1); // Advance readerIndex past the ']'\n        return frame;\n    }\n\n    return null; // No complete frame available yet\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}