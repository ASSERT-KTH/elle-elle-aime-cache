{
    "generation": "@Override\nprotected Object decode(\n        ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n    int endIndex = -1;\n    for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {\n        if (buf.getByte(i) == ']') {\n            endIndex = i + 1;\n            break;\n        }\n    }\n\n    if (endIndex > buf.readerIndex()) { // Fix: ensure endIndex is within bounds\n        ByteBuf frame = Unpooled.buffer(endIndex - buf.readerIndex()); // Fix: preallocate buffer size\n        buf.readBytes(frame, endIndex - buf.readerIndex()); // Fix: read directly into frame\n\n        // Apply decoding\n        ByteBuf decodedFrame = Unpooled.buffer();\n        byte[] frameArray = new byte[frame.readableBytes()];\n        frame.readBytes(frameArray);\n        for (byte b : frameArray) {\n            if (b == '}') {\n                byte b2 = frameArray[frameArray.indexOf(b) + 1]; // assume next byte is available\n                switch (b2) {\n                    case 0x01:\n                        decodedFrame.writeByte('}');\n                        break;\n                    case 0x02:\n                        decodedFrame.writeByte('[');\n                        break;\n                    case 0x03:\n                        decodedFrame.writeByte(']');\n                        break;\n                    case 0x04:\n                        decodedFrame.writeByte(',');\n                        break;\n                    case 0x05:\n                        decodedFrame.writeByte('*');\n                        break;\n                    default:\n                        throw new IllegalArgumentException(String.format(\n                                \"unexpected byte at %d: 0x%02x\", frame.readerIndex() - 1, b2));\n                }\n                // Skip next byte as it's already processed\n                frameArray = Arrays.copyOfRange(frameArray, 0, frameArray.indexOf(b)) \n                           + Arrays.copyOfRange(frameArray, frameArray.indexOf(b) + 2, frameArray.length);\n            } else {\n                decodedFrame.writeByte(b);\n            }\n        }\n        return decodedFrame;\n    }\n\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}