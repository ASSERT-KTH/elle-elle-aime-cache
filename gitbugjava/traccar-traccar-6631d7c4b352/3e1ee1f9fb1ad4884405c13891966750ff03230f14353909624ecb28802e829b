{
    "generation": "@Override\nprotected Object decode(\n        ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n    List<ByteBuf> frames = new ArrayList<>();\n\n    while (buf.isReadable()) {\n        int endIndex = -1;\n        for (int i = buf.writerIndex() - 1; i >= buf.readerIndex(); i--) {\n            if (buf.getByte(i) == ']') {\n                endIndex = i + 1;\n                break;\n            }\n        }\n\n        if (endIndex > 0) {\n            ByteBuf frame = Unpooled.buffer();\n            int startIndex = buf.readerIndex();\n            while (buf.readerIndex() < endIndex) {\n                byte b1 = buf.readByte();\n                if (b1 == '}') {\n                    byte b2 = buf.readByte();\n                    switch (b2) {\n                        case 0x01:\n                            frame.writeByte('}');\n                            break;\n                        case 0x02:\n                            frame.writeByte('[');\n                            break;\n                        case 0x03:\n                            frame.writeByte(']');\n                            break;\n                        case 0x04:\n                            frame.writeByte(',');\n                            break;\n                        case 0x05:\n                            frame.writeByte('*');\n                            break;\n                        default:\n                            throw new IllegalArgumentException(String.format(\n                                    \"unexpected byte at %d: 0x%02x\", buf.readerIndex() - 1, b2));\n                    }\n                } else {\n                    frame.writeByte(b1);\n                }\n            }\n            frames.add(frame);\n\n            // Discard bytes up to and including the current frame's end\n            buf.readerIndex(endIndex);\n        } else {\n            // Not enough data to form a complete frame, reset readerIndex and return null\n            buf.readerIndex(startIndex);\n            break;\n        }\n    }\n\n    if (frames.isEmpty()) {\n        return null;\n    } else if (frames.size() == 1) {\n        return frames.get(0);\n    } else {\n        return frames;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}