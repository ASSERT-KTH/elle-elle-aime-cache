{
    "generation": "@Override\nprotected Object decode(\n        ChannelHandlerContext ctx, Channel channel, ByteBuf buf) throws Exception {\n\n    int startIndex = buf.readerIndex();\n    int endIndex = -1;\n    \n    for (int i = buf.readerIndex(); i < buf.writerIndex(); i++) {\n        if (buf.getByte(i) == ']') {\n            endIndex = i + 1;\n            break;\n        }\n    }\n\n    if (endIndex > 0) {\n        ByteBuf frame = Unpooled.buffer(endIndex - startIndex);\n        \n        while (startIndex < endIndex) {\n            byte b1 = buf.getByte(startIndex++);\n            \n            if (b1 == '}') {\n                if (startIndex >= endIndex) {\n                    throw new IllegalArgumentException(\n                            String.format(\"unexpected end of buffer after escaping character at %d\", startIndex - 1));\n                }\n                byte b2 = buf.getByte(startIndex++);\n                switch (b2) {\n                    case 0x01:\n                        frame.writeByte('}');\n                        break;\n                    case 0x02:\n                        frame.writeByte('[');\n                        break;\n                    case 0x03:\n                        frame.writeByte(']');\n                        break;\n                    case 0x04:\n                        frame.writeByte(',');\n                        break;\n                    case 0x05:\n                        frame.writeByte('*');\n                        break;\n                    default:\n                        throw new IllegalArgumentException(String.format(\n                                \"unexpected byte at %d: 0x%02x\", startIndex - 1, b2));\n                }\n            } else {\n                frame.writeByte(b1);\n            }\n        }\n        \n        buf.readerIndex(endIndex);\n        return frame;\n    }\n\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}