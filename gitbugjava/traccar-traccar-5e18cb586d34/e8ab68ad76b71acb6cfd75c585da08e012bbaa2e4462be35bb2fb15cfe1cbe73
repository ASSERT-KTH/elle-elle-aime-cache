{
    "generation": "    private Object decodeCan(Channel channel, SocketAddress remoteAddress, String sentence) throws ParseException {\n        Position position = new Position(getProtocolName());\n        int index = 0;\n        String[] values = sentence.split(\",\");\n        index += 1; \n        index += 1; \n        DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, values[index++]);\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        long reportMask = Long.parseLong(values[index++], 16);\n        long reportMaskExt = 0;\n        if (BitUtil.check(reportMask, 0)) {\n            position.set(Position.KEY_VIN, values[index++]);\n        }\n        // ... rest of your code ...\n\n        if (BitUtil.check(reportMaskExt, 0) && !values[index++].isEmpty()) {\n            position.set(\"adBlueLevel\", Integer.parseInt(values[index - 1]));\n        }\n        // ... rest of your code ...\n\n        DateFormat dateFormat = new SimpleDateFormat(\"yyyyMMddHHmmss\");\n        dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        if (BitUtil.check(reportMask, 30)) {\n            while (values[index].isEmpty()) {\n                index += 1;\n            }\n            position.setValid(Integer.parseInt(values[index++]) > 0);\n            // ... rest of your code ...\n\n            position.setTime(dateFormat.parse(values[index++]));\n        } else {\n            getLastLocation(position, null);\n        }\n        if (BitUtil.check(reportMask, 31)) {\n            index += 4; \n            index += 1; \n        }\n        if (ignoreFixTime) {\n            position.setTime(dateFormat.parse(values[index]));\n        } else {\n            position.setDeviceTime(dateFormat.parse(values[index]));\n        }\n        return position;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}