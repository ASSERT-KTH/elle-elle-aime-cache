{
    "generation": "    private Object decodeCan(Channel channel, SocketAddress remoteAddress, String sentence) throws ParseException {\n        Position position = new Position(getProtocolName());\n        int index = 0;\n        String[] values = sentence.split(\",\");\n        index += 1; \n        index += 1; \n        DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, values[index++]);\n        position.setDeviceId(deviceSession.getDeviceId());\n       int reportMask = Integer.parseInt(values[index++], 16);\n        if (BitUtil.check(reportMask, 0)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMask, 1)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMask, 2)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMask, 3)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMask, 4)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMask, 5)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMask, 6)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMask, 7)) {\n            index += 1; \n        }\n        int reportMaskExt = Integer.parseInt(values[index++], 16);\n               }\n        if (BitUtil.check(reportMaskExt, 0) && !values[index++].isEmpty()) {\n            position.set(\"adBlueLevel\", Integer.parseInt(values[index - 1]));\n        }\n        if (BitUtil.check(reportMaskExt, 1) && !values[index++].isEmpty()) {\n            position.set(\"axleWeight1\", Integer.parseInt(values[index - 1]));\n        }\n        if (BitUtil.check(reportMaskExt, 2) && !values[index++].isEmpty()) {\n            position.set(\"axleWeight3\", Integer.parseInt(values[index - 1]));\n        }\n        if (BitUtil.check(reportMaskExt, 3) && !values[index++].isEmpty()) {\n            position.set(\"axleWeight4\", Integer.parseInt(values[index - 1]));\n        }\n        if (BitUtil.check(reportMaskExt, 4)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMaskExt, 5)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMaskExt, 6)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMaskExt, 7) && !values[index++].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 1, Integer.parseInt(values[index - 1]) * 0.001);\n        }\n        if (BitUtil.check(reportMaskExt, 8)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMaskExt, 9)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMaskExt, 10)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMaskExt, 11)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMaskExt, 12)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMaskExt, 13)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMaskExt, 14)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMaskExt, 15) && !values[index++].isEmpty()) {\n            position.set(\"driver1Card\", values[index - 1]);\n        }\n        if (BitUtil.check(reportMaskExt, 16) && !values[index++].isEmpty()) {\n            position.set(\"driver2Card\", values[index - 1]);\n        }\n        if (BitUtil.check(reportMaskExt, 17) && !values[index++].isEmpty()) {\n            position.set(\"driver1Name\", values[index - 1]);\n        }\n        if (BitUtil.check(reportMaskExt, 18) && !values[index++].isEmpty()) {\n            position.set(\"driver2Name\", values[index - 1]);\n        }\n        if (BitUtil.check(reportMaskExt, 19) && !values[index++].isEmpty()) {\n            position.set(\"registration\", values[index - 1]);\n        }\n        if (BitUtil.check(reportMaskExt, 20)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMaskExt, 21)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMaskExt, 22)) {\n            index += 1; \n        }\n        if (BitUtil.check(reportMaskExt, 23)) {\n            index += 1; \n        }\n        DateFormat dateFormat = new SimpleDateFormat(\"yyyyMMddHHmmss\");\n        dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        if (BitUtil.check(reportMask, 30)) {\n            while (values[index].isEmpty()) {\n                index += 1;\n            }\n            position.setValid(Integer.parseInt(values[index++]) > 0);\n            if (!values[index].isEmpty()) {\n                position.setSpeed(UnitsConverter.knotsFromKph(Double.parseDouble(values[index++])));\n                position.setCourse(Integer.parseInt(values[index++]));\n                position.setAltitude(Double.parseDouble(values[index++]));\n                position.setLongitude(Double.parseDouble(values[index++]));\n                position.setLatitude(Double.parseDouble(values[index++]));\n                position.setTime(dateFormat.parse(values[index++]));\n            } else {\n                index += 6; \n                getLastLocation(position, null);\n            }\n        } else {\n            getLastLocation(position, null);\n        }\n        if (BitUtil.check(reportMask, 31)) {\n            index += 4; \n            index += 1; \n        }\n        if (ignoreFixTime) {\n            position.setTime(dateFormat.parse(values[index]));\n        } else {\n            position.setDeviceTime(dateFormat.parse(values[index]));\n        }\n        return position;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}