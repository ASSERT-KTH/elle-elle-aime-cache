{
    "generation": "String[] values = sentence.split(\",\");\n...\nint index = ...;\n...\nif (!values[index++].isEmpty()) {\n    position.set(\"driver1Name\", values[index - 1]);\n}\nif (!values[index++].isEmpty()) {\n    position.set(\"driver2Name\", values[index - 1]);\n}\nif (!values[index++].isEmpty()) {\n    position.set(\"registration\", values[index - 1]);\n}\n...\nif (!values[index++].isEmpty() && !values[index].isEmpty()) {\n    position.set(Position.KEY_FUEL_CONSUMPTION, Double.parseDouble(values[index].substring(1)));\n}\nif (!values[index++].isEmpty() && !values[index].isEmpty()) {\n    position.set(Position.KEY_FUEL_LEVEL, Double.parseDouble(values[index].substring(1)));\n}\n...\nif (BitUtil.check(reportMaskExt, 14) && !values[index++].isEmpty()) {\n    position.set(\"idleFuelConsumption\", Double.parseDouble(values[index - 1]));\n}\nif (BitUtil.check(reportMaskExt, 15) && !values[index++].isEmpty()) {\n    position.set(Position.KEY_AXLE_WEIGHT, Integer.parseInt(values[index - 1]));\n}\n...\nif (!values[index++].isEmpty()) {\n    position.set(\"adBlueLevel\", Integer.parseInt(values[index - 1]));\n}\n...\nif (!values[index++].isEmpty()) {\n    position.set(Position.PREFIX_ADC + 1, Integer.parseInt(values[index - 1]) * 0.001);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}