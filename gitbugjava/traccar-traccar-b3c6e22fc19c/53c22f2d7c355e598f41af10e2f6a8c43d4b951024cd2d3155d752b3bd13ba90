{
    "generation": "void decodeGps(Position position, ByteBuf buf, boolean extended, boolean fasterResponse, boolean ignorePower, TimeZone timeZone) {\n    int flags = buf.readUnsignedByte();\n    if (flags == 0) {\n        return;\n    }\n    int longitude = 0;\n    int latitude = 0;\n    if (BitUtil.check(flags, 0)) {\n        latitude = buf.readInt();\n        longitude = buf.readInt();\n    }\n    float altitude = 0;\n    if (BitUtil.check(flags, 4)) {\n        altitude = buf.readInt() * (float) 0.1;\n    }\n    Float speed;\n    if (BitUtil.check(flags, 1)) {\n        speed = BcdUtil.readInteger(buf, 4) * (float) 0.1;\n        if ((flags & 0x30) == 0) {\n            speed = speed * (float) 1.852;\n        }\n    } else {\n        speed = null;\n    }\n    Double course = null;\n    if (BitUtil.check(flags, 2)) {\n        course = BcdUtil.readInteger(buf, 4);\n    }\n\n    if (!BitUtil.check(flags, 5)) {\n        return;\n    }\n\n    Date date = null;\n    if (!extended) {\n        ByteBuf dateBuf = buf.readSlice(6);\n        DateBuilder dateBuilder = new DateBuilder(timeZone);\n        if (BitUtil.check( BitUtil.between(flags, 6, 7), 0)) {\n            dateBuilder.setDate(BcdUtil.readInteger(dateBuf, 5));\n        }\n        if (BitUtil.check(BitUtil.between(flags, 6, 7), 1)) {\n            dateBuilder.setTime(BcdUtil.readInteger(dateBuf, 4));\n        }\n        date = dateBuilder.getDate();\n    } else if (extended && BitUtil.check(flags, 3)) {\n        date = new Date(buf.readInt() * 1000);\n    }\n\n    if (fastestResponse) {\n        position.setCoordinate(new Coordinate(latitude * (float) 0.000001, longitude * (float) 0.000001));\n        position.setAltitude(altitude);\n        position.setSpeed(speed);\n        position.setCourse(course);\n    } else {\n        if (latitude != 0 || longitude != 0) {\n            position.setTime(date);\n            position.setCoordinate(new Coordinate(latitude * (float) 0.000001, longitude * (float) 0.000001));\n            position.setAltitude(altitude);\n            position.setSpeed(speed);\n            position.setCourse(course);\n        }\n        if (altitude != 0) {\n            position.set(\"validAltitude\", true);\n        }\n    }\n    if (ignorePower) {\n        buf.skipBytes(1 + 1);\n    } else {\n        position.set(Position.KEY_BATTERY_LEVEL, decodeBatteryLevel(buf.readUnsignedByte()));\n        position.set(Position.KEY_POWER, buf.readUnsignedByte());\n    }\n    if (BitUtil.check(flags, 7)) {\n        position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n    }\n}\n\n...\n\ncase MSG_ALARM:\n    ...\n    switch (alarmType) {\n        case 0x01:\n            position.set(Position.KEY_ALARM, extendedAlarm ? Position.ALARM_SOS : Position.ALARM_GENERAL);\n            break;\n        case 0x80:\n            position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);\n            break;\n        case 0x87:\n            position.set(Position.KEY_ALARM, Position.ALARM_OVERSPEED);\n            break;\n        case 0x90:\n            position.set(Position.KEY_ALARM, Position.ALARM_ACCELERATION);\n            break;\n        case 0x91:\n            position.set(Position.KEY_ALARM, Position.ALARM_BRAKING);\n            break;\n        case 0x92:\n            position.set(Position.KEY_ALARM, Position.ALARM_CORNERING);\n            break;\n        case 0x93:\n            position.set(Position.KEY_ALARM, extendedAlarm ? Position.ALARM_ACCIDENT : Position.ALARM_GENERAL);\n            break;\n        ...\n    }\n    ...\n    break;\n\n...",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}