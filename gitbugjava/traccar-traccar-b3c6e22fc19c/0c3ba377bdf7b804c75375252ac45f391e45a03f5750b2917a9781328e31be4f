{
    "generation": "    private Object decodeBasic(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n        int length = buf.readUnsignedByte();\n        int dataLength = length - 5;\n        int type = buf.readUnsignedByte();\n\n        Position position = new Position(getProtocolName());\n        DeviceSession deviceSession = null;\n        if (type != MSG_LOGIN) {\n            deviceSession = getDeviceSession(channel, remoteAddress);\n            if (deviceSession == null) {\n                return null;\n            }\n            position.setDeviceId(deviceSession.getDeviceId());\n            if (!deviceSession.contains(DeviceSession.KEY_TIMEZONE)) {\n                deviceSession.set(DeviceSession.KEY_TIMEZONE, getTimeZone(deviceSession.getDeviceId()));\n            }\n        }\n\n        if (type == MSG_LOGIN) {\n\n            String imei = ByteBufUtil.hexDump(buf.readSlice(8)).substring(1);\n            buf.readUnsignedShort(); // type\n\n            deviceSession = getDeviceSession(channel, remoteAddress, imei);\n            if (deviceSession != null && !deviceSession.contains(DeviceSession.KEY_TIMEZONE)) {\n                deviceSession.set(DeviceSession.KEY_TIMEZONE, getTimeZone(deviceSession.getDeviceId()));\n            }\n\n            if (dataLength > 10) {\n                int extensionBits = buf.readUnsignedShort();\n                int hours = (extensionBits >> 4) / 100;\n                int minutes = (extensionBits >> 4) % 100;\n                int offset = (hours * 60 + minutes) * 60;\n                if ((extensionBits & 0x8) != 0) {\n                    offset = -offset;\n                }\n                if (deviceSession != null) {\n                    TimeZone timeZone = deviceSession.get(DeviceSession.KEY_TIMEZONE);\n                    if (timeZone.getRawOffset() == 0) {\n                        timeZone.setRawOffset(offset * 1000);\n                        deviceSession.set(DeviceSession.KEY_TIMEZONE, timeZone);\n                    }\n                }\n            }\n\n            if (deviceSession != null) {\n                sendResponse(channel, false, type, buf.getShort(buf.writerIndex() - 6), null);\n            }\n\n            return null;\n\n        } else if (type == MSG_HEARTBEAT) {\n\n            getLastLocation(position, null);\n\n            int status = buf.readUnsignedByte();\n            position.set(Position.KEY_ARMED, BitUtil.check(status, 0));\n            position.set(Position.KEY_IGNITION, BitUtil.check(status, 1));\n            position.set(Position.KEY_CHARGE, BitUtil.check(status, 2));\n\n            if (buf.readableBytes() >= 2 + 6) {\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.01);\n            }\n            if (buf.readableBytes() >= 1 + 6) {\n                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n            }\n\n            sendResponse(channel, false, type, buf.getShort(buf.writerIndex() - 6), null);\n\n            return position;\n\n        } else if (type == MSG_ADDRESS_REQUEST) {\n\n            String response = \"NA&&NA&&0##\";\n            ByteBuf content = Unpooled.buffer();\n            content.writeByte(response.length());\n            content.writeInt(0);\n            content.writeBytes(response.getBytes(StandardCharsets.US_ASCII));\n            sendResponse(channel, true, MSG_ADDRESS_RESPONSE, 0, content);\n\n            return null;\n\n        } else if (type == MSG_TIME_REQUEST) {\n\n            Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"));\n            ByteBuf content = Unpooled.buffer();\n            content.writeByte(calendar.get(Calendar.YEAR) - 2000);\n            content.writeByte(calendar.get(Calendar.MONTH) + 1);\n            content.writeByte(calendar.get(Calendar.DAY_OF_MONTH));\n            content.writeByte(calendar.get(Calendar.HOUR_OF_DAY));\n            content.writeByte(calendar.get(Calendar.MINUTE));\n            content.writeByte(calendar.get(Calendar.SECOND));\n            sendResponse(channel, false, MSG_TIME_REQUEST, 0, content);\n\n            return null;\n        } else if (type == MSG_X1_PHOTO_INFO) {\n            buf.skipBytes(6); // time\n            buf.readUnsignedByte(); // fix status\n            buf.readUnsignedInt(); // latitude\n            buf.readUnsignedInt(); // longitude\n            buf.readUnsignedByte(); // camera id\n            buf.readUnsignedByte(); // photo source\n            buf.readUnsignedByte(); // picture format\n\n            ByteBuf photo = Unpooled.buffer(buf.readInt());\n            int pictureId = buf.readInt();\n            photos.put(pictureId, photo);\n            sendPhotoRequest(channel, pictureId);\n\n            return null;\n\n        } else if (isSupported(type)) {\n\n            if (type == MSG_LBS_STATUS && variant == Variant.SPACE10X) {\n                return null; // multi-lbs message\n            }\n\n            if (hasGps(type)) {\n                decodeGps(position, buf, false, deviceSession.get(DeviceSession.KEY_TIMEZONE));\n            } else {\n                getLastLocation(position, null);\n            }\n\n            if (hasLbs(type) && buf.readableBytes() > 6) {\n                boolean hasLength = hasStatus(type)\n                        && type != MSG_LBS_STATUS\n                        && type != MSG_LBS_ALARM\n                        && (type != MSG_GPS_LBS_STATUS_1 || variant != Variant.VXT01);\n                decodeLbs(position, buf, type, hasLength);\n            }\n\n            if (hasStatus(type)) {\n                decodeStatus(position, buf);\n                if (variant == Variant.OBD6) {\n                    int signal = buf.readUnsignedShort();\n                    int satellites = BitUtil.between(signal, 10, 15) + BitUtil.between(signal, 5, 10);\n                    position.set(Position.KEY_SATELLITES, satellites);\n                    position.set(Position.KEY_RSSI, BitUtil.to(signal, 5));\n                    position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedByte()));\n                    buf.readUnsignedByte(); // language\n                    position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                    buf.readUnsignedByte(); // working mode\n                    position.set(Position.KEY_POWER, buf.readUnsignedShort() / 100.0);\n                } else if (type == MSG_GPS_LBS_STATUS_3 && buf.readableBytes() >= 3) {\n                    position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte() * 100 / 6);\n                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                    position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedByte()));\n                }\n\n            }\n\n\n            if (type == MSG_ALARM) {\n                short alarmType = buf.readUnsignedByte();\n                position.set(Position.KEY_ALARM, decodeAlarm(alarmType));\n            }\n\n\n        }\n\n        if (hasLanguage(type)) {\n            buf.readUnsignedShort();\n        }\n\n\n        if (channel != null && type != MSG_COMMAND_0 && type != MSG_COMMAND_1 && type != MSG_COMMAND_2) {\n            sendResponse(channel, false, type, buf.getShort(buf.writerIndex() - 6), null);\n        }\n\n        return position;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}