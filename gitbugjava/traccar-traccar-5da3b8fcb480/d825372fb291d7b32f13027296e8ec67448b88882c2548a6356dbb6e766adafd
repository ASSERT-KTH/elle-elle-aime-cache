{
    "generation": "\ncase 0xfe:\n\n    if (length == 1) {\n\n        position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n\n    } else {\n\n        int mark = buf.readUnsignedByte();\n\n        if (mark == 0x7c) {\n\n            while (buf.readerIndex() < endIndex) {\n\n                int extendedType = buf.readUnsignedByte();\n\n                int extendedLength = buf.readUnsignedByte();\n\n                switch (extendedType) {\n\n                    case 0x01:\n\n                        long alarms = buf.readUnsignedInt();\n\n                        if (BitUtil.check(alarms, 0)) {\n\n                            position.set(Position.KEY_ALARM, Position.ALARM_ACCELERATION);\n\n                        }\n\n                        if (BitUtil.check(alarms, 1)) {\n\n                            position.set(Position.KEY_ALARM, Position.ALARM_BRAKING);\n\n                        }\n\n                        if (BitUtil.check(alarms, 2)) {\n\n                            position.set(Position.KEY_ALARM, Position.ALARM_CORNERING);\n\n                        }\n\n                        if (BitUtil.check(alarms, 3)) {\n\n                            position.set(Position.KEY_ALARM, Position.ALARM_ACCIDENT);\n\n                        }\n\n                        if (BitUtil.check(alarms, 4)) {\n\n                            position.set(Position.KEY_ALARM, Position.ALARM_TAMPERING);\n\n                        }\n\n                        break;\n\n                    default:\n\n                        buf.skipBytes(extendedLength);\n\n                        break;\n\n                }\n\n            }\n\n        }\n\n        position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n\n    }\n\n    break;\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}