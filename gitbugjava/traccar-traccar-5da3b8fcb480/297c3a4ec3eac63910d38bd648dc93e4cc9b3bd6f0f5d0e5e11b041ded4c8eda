{
    "generation": "private Position decodeLocation(DeviceSession deviceSession, ByteBuf buf) {\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedInt()));\n\n    decodeCoordinates(position, buf);\n\n    position.setAltitude((double) buf.readShort());\n    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort() * 0.1));\n    position.setCourse((double) buf.readUnsignedShort());\n    position.setTime(readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE)));\n\n    if (buf.readableBytes() == 20) {\n\n        buf.skipBytes(4); // remaining battery and mileage\n        position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);\n        position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n        buf.readUnsignedInt(); // area id\n        position.set(Position.KEY_RSSI, (double) buf.readUnsignedByte());\n        buf.skipBytes(3); // reserved\n\n        return position;\n\n    }\n\n    while (buf.readableBytes() > 2) {\n\n        int subtype = buf.readUnsignedByte();\n        int length = buf.readUnsignedByte();\n        int endIndex = buf.readerIndex() + length;\n        String stringValue;\n        switch (subtype) {\n            case 0x01:\n                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 100);\n                break;\n            case 0x02:\n                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedShort() * 0.1);\n                break;\n            case 0x30:\n                position.set(Position.KEY_RSSI, (double) buf.readUnsignedByte());\n                break;\n            case 0x33:\n                stringValue = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n                if (stringValue.startsWith(\"*M00\")) {\n                    String lockStatus = stringValue.length() >= 15 ? stringValue.substring(8, 15) : \"\";\n                    if (lockStatus.length() >= 5 && lockStatus.substring(2, 5).matches(\"\\\\d+\")) {\n                        position.set(Position.KEY_BATTERY, Integer.parseInt(lockStatus.substring(2, 5)) * 0.01);\n                    }\n                }\n                break;\n            case 0x91:\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n                position.set(Position.KEY_RPM, buf.readUnsignedShort());\n                position.set(Position.KEY_OBD_SPEED, buf.readUnsignedByte());\n                position.set(Position.KEY_THROTTLE, buf.readUnsignedByte() * 100 / 255.0);\n                position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte() * 100 / 255.0);\n                position.set(Position.KEY_COOLANT_TEMP, (double) buf.readUnsignedByte() - 40);\n                buf.readUnsignedShort();\n                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 0.01);\n                buf.readUnsignedShort();\n                buf.readUnsignedInt();\n                buf.readUnsignedShort();\n                position.set(Position.KEY_FUEL_USED, buf.readUnsignedShort() * 0.01);\n                break;\n            case 0xD3:\n                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);\n                break;\n            case 0xD4:\n                position.set(Position.KEY_BATTERY_LEVEL, (double) buf.readUnsignedByte());\n                break;\n            case 0xFE:\n                if (length == 1) {\n                    position.set(Position.KEY_BATTERY_LEVEL, (double) buf.readUnsignedByte());\n                } else {\n                    int mark = buf.readUnsignedByte();\n                    if (mark == 0x7C) {\n                        while (buf.readerIndex() < endIndex) {\n                            int extendedType = buf.readUnsignedByte();\n                            int extendedLength = buf.readUnsignedByte();\n                            switch (extendedType) {\n                                case 0x01:\n                                    long alarms = buf.readUnsignedInt();\n                                    if (BitUtil.check(alarms, 0)) {\n                                        position.set(Position.KEY_ALARM, Position.ALARM_ACCELERATION);\n                                    }\n                                    if (BitUtil.check(alarms, 1)) {\n                                        position.set(Position.KEY_ALARM, Position.ALARM_BRAKING);\n                                    }\n                                    if (BitUtil.check(alarms, 2)) {\n                                        position.set(Position.KEY_ALARM, Position.ALARM_CORNERING);\n                                    }\n                                    if (BitUtil.check(alarms, 3)) {\n                                        position.set(Position.KEY_ALARM, Position.ALARM_ACCIDENT);\n                                    }\n                                    if (BitUtil.check(alarms, 4)) {\n                                        position.set(Position.KEY_ALARM, Position.ALARM_TAMPERING);\n                                    }\n                                    break;\n                                default:\n                                    buf.skipBytes(extendedLength);\n                                    break;\n                            }\n                        }\n                    }\n                    position.set(Position.KEY_BATTERY_LEVEL, (double) buf.readUnsignedByte());\n                }\n                break;\n            default:\n                break;\n        }\n        buf.readerIndex(endIndex);\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}