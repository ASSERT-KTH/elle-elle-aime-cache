{
    "generation": "\n@Override\n\nprotected Object decode(\n\n        Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {\n\n    ByteBuf buf = (ByteBuf) msg;\n\n    buf.order(ByteOrder.LITTLE_ENDIAN); // Set to little-endian\n\n    buf.readUnsignedShort(); // data length\n\n    String imei = String.format(\"%015d\", buf.readLong());\n\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);\n\n    if (deviceSession == null) {\n\n        return null;\n\n    }\n\n    int type = buf.readUnsignedByte();\n\n    if (type == MSG_RECORDS || type == MSG_EXTENDED_RECORDS) {\n\n        List<Position> positions = new LinkedList<>();\n\n        buf.readUnsignedByte(); // records left\n\n        int count = buf.readUnsignedByte();\n\n        for (int i = 0; i < count; i++) {\n\n            Position position = new Position(getProtocolName());\n\n            position.setDeviceId(deviceSession.getDeviceId());\n\n            position.setTime(new Date(buf.readUnsignedInt() * 1000));\n\n            buf.readUnsignedByte(); // timestamp extension\n\n            if (type == MSG_EXTENDED_RECORDS) {\n\n                int recordExtension = buf.readUnsignedByte();\n\n                int mergeRecordCount = BitUtil.from(recordExtension, 4);\n\n                int currentRecord = BitUtil.to(recordExtension, 4);\n\n                if (currentRecord > 0 && currentRecord <= mergeRecordCount) {\n\n                    position = positions.remove(positions.size() - 1);\n\n                }\n\n            }\n\n            buf.readUnsignedByte(); // priority (reserved)\n\n            position.setValid(true);\n\n            position.setLongitude(buf.readInt() / 16777216.0); // Adjusted scaling\n\n            position.setLatitude(buf.readInt() / 16777216.0); // Adjusted scaling\n\n            position.setAltitude(buf.readUnsignedShort() / 10.0);\n\n            position.setCourse(buf.readUnsignedShort() / 100.0);\n\n            position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n\n            position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort()));\n\n            position.set(Position.KEY_HDOP, buf.readUnsignedByte() / 10.0);\n\n            if (type == MSG_EXTENDED_RECORDS) {\n\n                position.set(Position.KEY_EVENT, buf.readUnsignedShort());\n\n            } else {\n\n                position.set(Position.KEY_EVENT, buf.readUnsignedByte());\n\n            }\n\n            // Read 1 byte data\n\n            int valueCount = buf.readUnsignedByte();\n\n            for (int j = 0; j < valueCount; j++) {\n\n                int id = type == MSG_EXTENDED_RECORDS ? buf.readUnsignedShort() : buf.readUnsignedByte();\n\n                decodeParameter(position, id, buf, 1);\n\n            }\n\n            // Read 2 byte data\n\n            valueCount = buf.readUnsignedByte();\n\n            for (int j = 0; j < valueCount; j++) {\n\n                int id = type == MSG_EXTENDED_RECORDS ? buf.readUnsignedShort() : buf.readUnsignedByte();\n\n                decodeParameter(position, id, buf, 2);\n\n            }\n\n            // Read 4 byte data\n\n            valueCount = buf.readUnsignedByte();\n\n            for (int j = 0; j < valueCount; j++) {\n\n                int id = type == MSG_EXTENDED_RECORDS ? buf.readUnsignedShort() : buf.readUnsignedByte();\n\n                decodeParameter(position, id, buf, 4);\n\n            }\n\n            // Read 8 byte data\n\n            valueCount = buf.readUnsignedByte();\n\n            for (int j = 0; j < valueCount; j++) {\n\n                int id = type == MSG_EXTENDED_RECORDS ? buf.readUnsignedShort() : buf.readUnsignedByte();\n\n                decodeParameter(position, id, buf, 8);\n\n            }\n\n            decodeDriver(position, Position.PREFIX_IO + 126, Position.PREFIX_IO + 127); // can driver\n\n            decodeDriver(position, Position.PREFIX_IO + 155, Position.PREFIX_IO + 156); // tco driver\n\n            Long tagIdPart1 = (Long) position.getAttributes().remove(Position.PREFIX_IO + 760);\n\n            Long tagIdPart2 = (Long) position.getAttributes().remove(Position.PREFIX_IO + 761);\n\n            if (tagIdPart1 != null && tagIdPart2 != null) {\n\n                position.set(\"tagId\", Long.toHexString(tagIdPart1) + Long.toHexString(tagIdPart2));\n\n            }\n\n            positions.add(position);\n\n        }\n\n        if (channel != null) {\n\n            channel.writeAndFlush(new NetworkMessage(\n\n                    Unpooled.wrappedBuffer(DataConverter.parseHex(\"0002640113bc\")), remoteAddress));\n\n        }\n\n        return positions;\n\n    } else if (type == MSG_DTCS) {\n\n        List<Position> positions = new LinkedList<>();\n\n        int count = buf.readUnsignedByte();\n\n        for (int i = 0; i < count; i++) {\n\n            Position position = new Position(getProtocolName());\n\n            position.setDeviceId(deviceSession.getDeviceId());\n\n            buf.readUnsignedByte(); // reserved\n\n            position.setTime(new Date(buf.readUnsignedInt() * 1000));\n\n            position.setValid(true);\n\n            position.setLongitude(buf.readInt() / 16777216.0); // Adjusted scaling\n\n            position.setLatitude(buf.readInt() / 16777216.0); // Adjusted scaling\n\n            if (buf.readUnsignedByte() == 2) {\n\n                position.set(Position.KEY_ARCHIVE, true);\n\n            }\n\n            position.set(Position.KEY_DTCS, buf.readSlice(5).toString(StandardCharsets.US_ASCII));\n\n            positions.add(position);\n\n        }\n\n        if (channel != null) {\n\n            channel.writeAndFlush(new NetworkMessage(\n\n                    Unpooled.wrappedBuffer(DataConverter.parseHex(\"00026d01c4a4\")), remoteAddress));\n\n        }\n\n        return positions;\n\n    } else if (type == MSG_FILES) {\n\n        int subtype = buf.readUnsignedByte();\n\n        int source = buf.readUnsignedByte();\n\n        if (subtype == 2) {\n\n            ByteBuf filename = buf.readSlice(8);\n\n            int total = buf.readUnsignedShort();\n\n            int current = buf.readUnsignedShort();\n\n            if (photo == null) {\n\n                photo = Unpooled.buffer();\n\n            }\n\n            photo.writeBytes(buf.readSlice(buf.readableBytes() - 2));\n\n            if (current < total - 1) {\n\n                ByteBuf content = Unpooled.buffer();\n\n                content.writeByte(subtype);\n\n                content.writeByte(source);\n\n                content.writeBytes(filename);\n\n                content.writeShort(current + 1);\n\n                ByteBuf response = RuptelaProtocolEncoder.encodeContent(type, content);\n\n                content.release();\n\n                if (channel != null) {\n\n                    channel.writeAndFlush(new NetworkMessage(response, remoteAddress));\n\n                }\n\n            } else {\n\n                Position position = new Position(getProtocolName());\n\n                position.setDeviceId(deviceSession.getDeviceId());\n\n                getLastLocation(position, null);\n\n                position.set(Position.KEY_IMAGE, writeMediaFile(imei, photo, \"jpg\"));\n\n                photo.release();\n\n                photo = null;\n\n                return position;\n\n            }\n\n        }\n\n        return null;\n\n    } else if (type == MSG_IDENTIFICATION) {\n\n        ByteBuf content = Unpooled.buffer();\n\n        content.writeByte(1);\n\n        ByteBuf response = RuptelaProtocolEncoder.encodeContent(type, content);\n\n        content.release();\n\n        if (channel != null) {\n\n            channel.writeAndFlush(new NetworkMessage(response, remoteAddress));\n\n        }\n\n        return null;\n\n    } else {\n\n        return decodeCommandResponse(deviceSession, type, buf);\n\n    }\n\n}\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}