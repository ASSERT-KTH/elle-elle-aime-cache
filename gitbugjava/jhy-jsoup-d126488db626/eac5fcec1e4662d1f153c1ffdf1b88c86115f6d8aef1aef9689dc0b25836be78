{
    "generation": "private String consumeSubQuery() {\n    StringBuilder sq = StringUtil.borrowBuilder();\n    while (!tq.isEmpty()) {\n        if (tq.matches(\"(\")) {\n            sq.append(\"(\").append(tq.chompBalanced('(', ')')).append(\")\");\n        } else if (tq.matches(\"[\")) {\n            sq.append(\"[\").append(tq.chompBalanced('[', ']')).append(\"]\");\n        } else if (tq.matchesAny(Combinators)) {\n            if (sq.length() > 0) {\n                break;\n            } else {\n                tq.consume();\n            }\n        } else {\n            String token = tq.consume();\n            if (token.equals(\">\") || token.equals(\"+\") || token.equals(\"~\")) {\n                sq.append(\" \").append(token).append(\" \");\n            } else {\n                sq.append(token);\n            }\n        }\n    }\n    return StringUtil.releaseBuilder(sq);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}