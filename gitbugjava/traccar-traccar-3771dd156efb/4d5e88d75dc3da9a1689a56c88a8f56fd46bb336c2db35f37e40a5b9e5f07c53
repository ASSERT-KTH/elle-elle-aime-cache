{
    "generation": "    private Position decodePosition(DeviceSession deviceSession, String data) {\n        Parser parser = new Parser(PATTERN_POSITION, data);\n        if (!parser.matches()) {\n            return null;\n        }\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n        position.setTime(parser.nextDateTime(Parser.DateTimeFormat.DMY_HMS));\n        position.setValid(parser.next().equals(\"A\"));\n        position.setLatitude(parser.nextCoordinate(Parser.CoordinateFormat.DEG_HEM));\n        position.setLongitude(parser.nextCoordinate(Parser.CoordinateFormat.DEG_HEM));\n        position.setSpeed(UnitsConverter.knotsFromKph(parser.nextDouble(0)));\n        position.setCourse(parser.nextDouble(0));\n        position.setAltitude(parser.nextDouble(0));\n        position.set(Position.KEY_SATELLITES, parser.nextInt(0));\n        position.set(Position.KEY_RSSI, parser.nextInt(0));\n        position.set(Position.KEY_BATTERY_LEVEL, parser.nextInt(0));\n        position.set(Position.KEY_STEPS, parser.nextInt(0));\n        int status = parser.nextHexInt(0);\n        position.set(Position.KEY_ALARM, decodeAlarm(status));\n        if (BitUtil.check(status, 4)) {\n            position.set(Position.KEY_MOTION, true);\n        }\n        String[] values = parser.next().split(\",\");\n        int index = 0;\n// buggy code\n//        Network network = new Network();\n//        int cellCount = Integer.parseInt(values[index++]);\n//        if (cellCount > 0) {\n//            index += 1; // timing advance\n//            int mcc = !values[index].isEmpty() ? Integer.parseInt(values[index++]) : 0;\n//            int mnc = !values[index].isEmpty() ? Integer.parseInt(values[index++]) : 0;\n//            for (int i = 0; i < cellCount; i++) {\n//                int lac = Integer.parseInt(values[index++]);\n//                int cid = Integer.parseInt(values[index++]);\n//                String rssi = values[index++];\n//                if (!rssi.isEmpty()) {\n//                    network.addCellTower(CellTower.from(mcc, mnc, lac, cid, Integer.parseInt(rssi)));\n//                } else {\n//                    network.addCellTower(CellTower.from(mcc, mnc, lac, cid));\n//                }\n//            }\n//        }\n//        if (index < values.length && !values[index].isEmpty()) {\n//            int wifiCount = Integer.parseInt(values[index++]);\n//            for (int i = 0; i < wifiCount; i++) {\n//                index += 1; // wifi name\n//                String macAddress = values[index++];\n//                String rssi = values[index++];\n//                if (!macAddress.isEmpty() && !macAddress.equals(\"0\") && !rssi.isEmpty()) {\n//                    network.addWifiAccessPoint(WifiAccessPoint.from(macAddress, Integer.parseInt(rssi)));\n//                }\n//            }\n//        }\n//        if (network.getCellTowers() != null || network.getWifiAccessPoints() != null) {\n//            position.setNetwork(network);\n//        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.KEY_ODOMETER, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.KEY_RPM, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.KEY_FUEL_LEVEL, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.KEY_OBD_SPEED, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.KEY_OBD_ODOMETER, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 1, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 2, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 3, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 4, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 5, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 6, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 7, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 8, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 9, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 10, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 11, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 12, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 13, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 14, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 15, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 16, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 17, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 18, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 19, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 20, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 21, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 22, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 23, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 24, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 25, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 26, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 27, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 28, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 29, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 30, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 31, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 32, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 33, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 34, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 35, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 36, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 37, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 38, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 39, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 40, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 41, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 42, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 43, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 44, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 45, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 46, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 47, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 48, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 49, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 50, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 51, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 52, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 53, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 54, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 55, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 56, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 57, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 58, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 59, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.PREFIX_ADC + 60, Integer.parseInt(values[index++]));\n        }\n        if (index < values.length && !values[index].isEmpty()) {\n            position.set(Position.KEY_EVENT, Integer.parseInt(values[index\n        }\n        return position;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}