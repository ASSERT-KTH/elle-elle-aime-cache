{
    "generation": "/**\n * Builds the {@link BackOffPolicy} with the given parameters.\n * @return the {@link BackOffPolicy} instance\n */\npublic BackOffPolicy build() {\n    if ((this.multiplier != null && this.multiplier > 0) || this.multiplierSupplier != null) {\n        // Correcting the usage of multiplier\n        ExponentialBackOffPolicy policy = Boolean.TRUE.equals(this.random)\n            ? new ExponentialRandomBackOffPolicy()\n            : new ExponentialBackOffPolicy();\n        applyCommonPolicySettings(policy);\n        if (this.multiplier != null) {\n            policy.setMultiplier(this.multiplier);\n        }\n        if (this.multiplierSupplier != null) {\n            policy.setMultiplierSupplier(this.multiplierSupplier); // Corrected method name\n        }\n        return policy;\n    }\n    if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {\n        UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();\n        applyCommonPolicySettings(policy);\n        policy.setMaxBackOffPeriod(this.maxDelay);\n        if (this.maxDelaySupplier != null) {\n            policy.setMaxBackOffPeriodSupplier(this.maxDelaySupplier); // Corrected method name\n        }\n        return policy;\n    }\n    FixedBackOffPolicy policy = new FixedBackOffPolicy();\n    if (this.delay != null) {\n        policy.setBackOffPeriod(this.delay);\n    }\n    if (this.sleeper != null) {\n        policy.setSleeper(this.sleeper);\n    }\n    return policy;\n}\n\nprivate void applyCommonPolicySettings(BackOffPolicy policy) {\n    if (this.delay != null) {\n        policy.setInitialInterval(this.delay);\n    }\n    if (this.delaySupplier != null) {\n        policy.setInitialIntervalSupplier(this.delaySupplier); // Corrected method name\n    }\n    if (this.maxDelay != null && this.delay != null) {\n        policy.setMaxInterval(this.maxDelay > this.delay ? this.maxDelay : BackOffPolicy.DEFAULT_MAX_INTERVAL);\n    }\n    if (this.sleeper != null) {\n        policy.setSleeper(this.sleeper);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}