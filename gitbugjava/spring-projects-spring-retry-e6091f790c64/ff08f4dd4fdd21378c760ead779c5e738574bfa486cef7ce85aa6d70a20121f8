{
    "generation": "public BackOffPolicy build() {\n    if (this.multiplier != null && this.multiplier > 0 || this.multiplierSupplier != null) {\n        // Code as is...\n    }\n    else if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {\n        UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy(this.delay, this.maxDelay);\n        if (this.delaySupplier != null) {\n            policy.minBackOffPeriodSupplier(this.delaySupplier);\n        }\n        if (this.maxDelaySupplier != null) {\n            policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);\n        }\n        if (this.sleeper != null) {\n            policy.setSleeper(this.sleeper);\n        }\n        return policy;\n    }\n    else {\n        FixedBackOffPolicy policy = new FixedBackOffPolicy();\n        if (this.delay != null) {\n            policy.setBackOffPeriod(this.delay);\n        }\n        if (this.sleeper != null) {\n            policy.setSleeper(this.sleeper);\n        }\n        return policy;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}