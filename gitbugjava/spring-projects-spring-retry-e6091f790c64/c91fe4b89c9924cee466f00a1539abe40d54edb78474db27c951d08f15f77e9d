{
    "generation": "public BackOffPolicy build() {\n    if (this.multiplier != null && this.multiplier > 0 || this.multiplierSupplier != null) {\n        ExponentialBackOffPolicy policy;\n        if (this.random != null && this.random) {\n            policy = new ExponentialRandomBackOffPolicy();\n        } else {\n            policy = new ExponentialBackOffPolicy();\n        }\n        setCommonProperties(policy);\n        setExponentialProperties(policy);\n        return policy;\n    } else if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {\n        UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();\n        setCommonProperties(policy);\n        setUniformProperties(policy);\n        return policy;\n    } else {\n        FixedBackOffPolicy policy = new FixedBackOffPolicy();\n        setCommonProperties(policy);\n        setFixedProperties(policy);\n        return policy;\n    }\n}\n\nprivate void setCommonProperties(BackOffPolicy policy) {\n    if (this.delay != null) {\n        setDelay(policy, this.delay);\n    }\n    if (this.delaySupplier != null) {\n        setDelaySupplier(policy, this.delaySupplier);\n    }\n    if (this.sleeper != null) {\n        policy.setSleeper(this.sleeper);\n    }\n}\n\nprivate void setExponentialProperties(ExponentialBackOffPolicy policy) {\n    if (this.multiplier != null) {\n        policy.setMultiplier(this.multiplier);\n    }\n    if (this.multiplierSupplier != null) {\n        policy.multiplierSupplier(this.multiplierSupplier);\n    }\n    if (this.maxDelay != null && this.delay != null) {\n        long maxInterval = this.maxDelay > this.delay ? this.maxDelay : ExponentialBackOffPolicy.DEFAULT_MAX_INTERVAL;\n        policy.setMaxInterval(maxInterval);\n    }\n    if (this.maxDelaySupplier != null) {\n        policy.maxIntervalSupplier(this.maxDelaySupplier);\n    }\n}\n\nprivate void setUniformProperties(UniformRandomBackOffPolicy policy) {\n    if (this.delay != null) {\n        policy.setMinBackOffPeriod(this.delay);\n    }\n    if (this.delaySupplier != null) {\n        policy.minBackOffPeriodSupplier(this.delaySupplier);\n    }\n    if (this.maxDelay != null) {\n        policy.setMaxBackOffPeriod(this.maxDelay);\n    }\n    if (this.maxDelaySupplier != null) {\n        policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);\n    }\n}\n\nprivate void setFixedProperties(FixedBackOffPolicy policy) {\n    if (this.delay != null) {\n        policy.setBackOffPeriod(this.delay);\n    }\n}\n\nprivate void setDelay(BackOffPolicy policy, Long delay) {\n    if (policy instanceof ExponentialBackOffPolicy) {\n        ((ExponentialBackOffPolicy) policy).setInitialInterval(delay);\n    } else if (policy instanceof UniformRandomBackOffPolicy) {\n        ((UniformRandomBackOffPolicy) policy).setMinBackOffPeriod(delay);\n    } else if (policy instanceof FixedBackOffPolicy) {\n        ((FixedBackOffPolicy) policy).setBackOffPeriod(delay);\n    }\n}\n\nprivate void setDelaySupplier(BackOffPolicy policy, Supplier<Long> delaySupplier) {\n    if (policy instanceof ExponentialBackOffPolicy) {\n        ((ExponentialBackOffPolicy) policy).initialIntervalSupplier(delaySupplier);\n    } else if (policy instanceof UniformRandomBackOffPolicy) {\n        ((UniformRandomBackOffPolicy) policy).minBackOffPeriodSupplier(delaySupplier);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}