{
    "generation": "public BackOffPolicy build() {\n    if ((this.multiplier != null && this.multiplier > 0) || this.multiplierSupplier != null) {\n        logger.info(\"Building ExponentialBackOffPolicy with random={}\", this.random);\n        ExponentialBackOffPolicy policy;\n        if (Boolean.TRUE.equals(this.random)) {\n            policy = new ExponentialRandomBackOffPolicy();\n        } else {\n            policy = new ExponentialBackOffPolicy();\n        }\n        setInitialInterval(policy);\n        setMultiplier(policy);\n        setMaxInterval(policy);\n        if (this.sleeper != null) {\n            policy.setSleeper(this.sleeper);\n        }\n        return policy;\n    } else if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {\n        logger.info(\"Building UniformRandomBackOffPolicy\");\n        UniformRandomBackOffPolicy policy = new UniformRandomBackOffPolicy();\n        setMinBackOffPeriod(policy);\n        setMaxBackOffPeriod(policy);\n        if (this.sleeper != null) {\n            policy.setSleeper(this.sleeper);\n        }\n        return policy;\n    } else {\n        logger.info(\"Building FixedBackOffPolicy\");\n        FixedBackOffPolicy policy = new FixedBackOffPolicy();\n        setBackOffPeriod(policy);\n        if (this.sleeper != null) {\n            policy.setSleeper(this.sleeper);\n        }\n        return policy;\n    }\n}\n\nprivate void setInitialInterval(ExponentialBackOffPolicy policy) {\n    if (this.delaySupplier != null) {\n        policy.initialIntervalSupplier(this.delaySupplier);\n    } else if (this.delay != null) {\n        policy.setInitialInterval(this.delay);\n    }\n}\n\nprivate void setMultiplier(ExponentialBackOffPolicy policy) {\n    if (this.multiplierSupplier != null) {\n        policy.multiplierSupplier(this.multiplierSupplier);\n    } else if (this.multiplier != null) {\n        policy.setMultiplier(this.multiplier);\n    }\n}\n\nprivate void setMaxInterval(ExponentialBackOffPolicy policy) {\n    if (this.maxDelaySupplier != null) {\n        policy.maxIntervalSupplier(this.maxDelaySupplier);\n    } else if (this.maxDelay != null && this.delay != null && this.maxDelay > this.delay) {\n        policy.setMaxInterval(this.maxDelay);\n    } else {\n        policy.setMaxInterval(ExponentialBackOffPolicy.DEFAULT_MAX_INTERVAL);\n    }\n}\n\nprivate void setMinBackOffPeriod(UniformRandomBackOffPolicy policy) {\n    if (this.delaySupplier != null) {\n        policy.minBackOffPeriodSupplier(this.delaySupplier);\n    } else if (this.delay != null) {\n        policy.setMinBackOffPeriod(this.delay);\n    }\n}\n\nprivate void setMaxBackOffPeriod(UniformRandomBackOffPolicy policy) {\n    if (this.maxDelaySupplier != null) {\n        policy.maxBackOffPeriodSupplier(this.maxDelaySupplier);\n    } else if (this.maxDelay != null) {\n        policy.setMaxBackOffPeriod(this.maxDelay);\n    }\n}\n\nprivate void setBackOffPeriod(FixedBackOffPolicy policy) {\n    if (this.delaySupplier != null) {\n        policy.backOffPeriodSupplier(this.delaySupplier);\n    } else if (this.delay != null) {\n        policy.setBackOffPeriod(this.delay);\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}