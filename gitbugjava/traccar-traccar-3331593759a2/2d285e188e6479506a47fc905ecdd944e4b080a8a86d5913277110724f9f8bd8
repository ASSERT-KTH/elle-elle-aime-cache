{
    "generation": "private Position decodeTransparent(DeviceSession deviceSession, ByteBuf buf) {\n    int type = buf.readUnsignedByte();\n    if (type == 0xF0) {\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n        Date time = readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE));\n        if (buf.readUnsignedByte() > 0) {\n            position.set(Position.KEY_ARCHIVE, true);\n        }\n        buf.readUnsignedByte(); \n        int count;\n        int subtype = buf.readUnsignedByte();\n        switch (subtype) {\n            case 0x01:\n                // ...\n                break;\n            case 0x03:\n                count = buf.readUnsignedByte();\n                for (int i = 0; i < count; i++) {\n                    position = new Position(getProtocolName());\n                    int id = buf.readUnsignedShort();\n                    int length = buf.readUnsignedByte();\n                    switch (id) {\n                        // ...\n                    }\n                    buf.skipBytes(length);\n                }\n                decodeCoordinates(position, buf);\n                position.setTime(time);\n                break;\n            case 0x0B:\n                // ...\n                break;\n            default:\n                return null;\n        }\n        return position;\n    }\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}