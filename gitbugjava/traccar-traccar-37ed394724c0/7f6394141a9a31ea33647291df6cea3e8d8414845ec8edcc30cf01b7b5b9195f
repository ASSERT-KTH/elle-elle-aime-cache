{
    "generation": "private Object decodeBasic(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n\n    int length = buf.readUnsignedByte();\n    int dataLength = length - 5;\n    int type = buf.readUnsignedByte();\n\n    Position position = new Position(getProtocolName());\n    DeviceSession deviceSession = null;\n\n    if (type != MSG_LOGIN) {\n        deviceSession = getDeviceSession(channel, remoteAddress);\n        if (deviceSession == null) {\n            return null;\n        }\n        position.setDeviceId(deviceSession.getDeviceId());\n        if (!deviceSession.contains(DeviceSession.KEY_TIMEZONE)) {\n            deviceSession.set(DeviceSession.KEY_TIMEZONE, getTimeZone(deviceSession.getDeviceId()));\n        }\n    } else {\n        String imei = ByteBufUtil.hexDump(buf.readSlice(8)).substring(1);\n        buf.readUnsignedShort(); // skip type\n        deviceSession = getDeviceSession(channel, remoteAddress, imei);\n        if (deviceSession != null && !deviceSession.contains(DeviceSession.KEY_TIMEZONE)) {\n            deviceSession.set(DeviceSession.KEY_TIMEZONE, getTimeZone(deviceSession.getDeviceId()));\n        }\n\n        if (dataLength > 10) {\n            int extensionBits = buf.readUnsignedShort();\n            int hours = (extensionBits >> 4) / 100;\n            int minutes = (extensionBits >> 4) % 100;\n            int offset = (hours * 60 + minutes) * 60;\n            if ((extensionBits & 0x8) != 0) {\n                offset = -offset;\n            }\n            if (deviceSession != null) {\n                TimeZone timeZone = deviceSession.get(DeviceSession.KEY_TIMEZONE);\n                if (timeZone != null && timeZone.getRawOffset() == 0) {\n                    timeZone.setRawOffset(offset * 1000);\n                    deviceSession.set(DeviceSession.KEY_TIMEZONE, timeZone);\n                }\n            }\n        }\n\n        if (deviceSession != null) {\n            sendResponse(channel, false, type, buf.getShort(buf.readerIndex() + dataLength - 6), null);\n        }\n        return null;\n    }\n\n    if (type == MSG_HEARTBEAT) {\n        getLastLocation(position, null);\n\n        int status = buf.readUnsignedByte();\n        position.set(Position.KEY_ARMED, BitUtil.check(status, 0));\n        position.set(Position.KEY_IGNITION, BitUtil.check(status, 1));\n        position.set(Position.KEY_CHARGE, BitUtil.check(status, 2));\n\n        if (buf.readableBytes() >= 2) {\n            position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.01);\n        }\n        if (buf.readableBytes() >= 1) {\n            position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n        }\n\n        sendResponse(channel, false, type, buf.getShort(buf.readerIndex() + buf.readableBytes() - 6), null);\n        return position;\n    }\n\n    if (type == MSG_INFO) {\n        getLastLocation(position, null);\n        position.set(Position.KEY_POWER, buf.readShort() * 0.01);\n        return position;\n    }\n\n    // Other message types handling\n    if (type == MSG_LBS_MULTIPLE_1 || type == MSG_LBS_MULTIPLE_2 || type == MSG_LBS_MULTIPLE_3) {\n        DateBuilder dateBuilder = new DateBuilder((TimeZone) deviceSession.get(DeviceSession.KEY_TIMEZONE))\n                .setDate(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte())\n                .setTime(buf.readUnsignedByte(), buf.readUnsignedByte(), buf.readUnsignedByte());\n        getLastLocation(position, dateBuilder.getDate());\n\n        int mcc = buf.readUnsignedShort();\n        int mnc = buf.readUnsignedByte();\n        Network network = new Network();\n\n        int cellCount = buf.readUnsignedByte();\n        for (int i = 0; i < cellCount; i++) {\n            int lac = buf.readUnsignedShort();\n            int cid = buf.readUnsignedMedium();\n            int rssi = buf.readUnsignedByte();\n            network.addCellTower(CellTower.from(mcc, mnc, lac, cid, -rssi));\n        }\n        position.setNetwork(network);\n        return position;\n    }\n\n    // Default handling for unrecognized or unsupported messages\n    if (dataLength > 0) {\n        buf.skipBytes(dataLength);\n    }\n    if (type != MSG_COMMAND_0 && type != MSG_COMMAND_1 && type != MSG_COMMAND_2) {\n        sendResponse(channel, false, type, buf.getShort(buf.readerIndex() + dataLength - 6), null);\n    }\n    return null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}