{
    "generation": "    @Override\n    public String asStringLiteral()\n    {\n// buggy code\n//        return '\"' + this.value + '\"';\n       return '\"' + this.value.replace(\"\\\\\", \"\\\\\\\\\").replace(\"\\\"\", \"\\\\\\\"\").replace(\"\\b\", \"\\\\b\").replace(\"\\f\", \"\\\\f\").replace(\"\\n\", \"\\\\n\").replace(\"\\r\", \"\\\\r\").replace(\"\\t\", \"\\\\t\") + '\"';\n    }\n\n    @Override\n    public String asCharLiteral()\n    {\n        return '\\'' + this.value + '\\'';\n    }\n\n    @Override\n    public String asIntLiteral()\n    {\n        return this.value;\n    }\n\n    @Override\n    public String asLongLiteral()\n    {\n        return this.value;\n    }\n\n    @Override\n    public String asFloatLiteral()\n    {\n        return this.value;\n    }\n\n    @Override\n    public String asDoubleLiteral()\n    {\n        return this.value;\n    }\n\n    @Override\n    public String asBooleanLiteral()\n    {\n        return this.value;\n    }\n\n    @Override\n    public String asNullLiteral()\n    {\n        return this.value;\n    }\n\n    @Override\n    public String asString()\n    {\n        return this.value;\n    }\n\n    @Override\n    public String asChar()\n    {\n        return this.value;\n    }\n\n    @Override\n    public int asInt()\n    {\n        return Integer.parseInt(this.value);\n    }\n\n    @Override\n    public long asLong()\n    {\n        return Long.parseLong(this.value);\n    }\n\n    @Override\n    public float asFloat()\n    {\n        return Float.parseFloat(this.value);\n    }\n\n    @Override\n    public double asDouble()\n    {\n        return Double.parseDouble(this.value);\n    }\n\n    @Override\n    public boolean asBoolean()\n    {\n        return Boolean.parseBoolean(this.value);\n    }\n\n    @Override\n    public boolean isStringLiteral()\n    {\n        return true;\n    }\n\n    @Override\n    public boolean isCharLiteral()\n    {\n        return false;\n    }\n\n    @Override\n    public boolean isIntLiteral()\n    {\n        return false;\n    }\n\n    @Override\n    public boolean isLongLiteral()\n    {\n        return false;\n    }\n\n    @Override\n    public boolean isFloatLiteral()\n    {\n        return false;\n    }\n\n    @Override\n    public boolean isDoubleLiteral()\n    {\n        return false;\n    }\n\n    @Override\n    public boolean isBooleanLiteral()\n    {\n        return false;\n    }\n\n    @Override\n    public boolean isNullLiteral()\n    {\n        return false;\n    }\n\n    @Override\n    public boolean isString()\n    {\n        return true;\n    }\n\n    @Override\n    public boolean isChar()\n    {\n        return false;\n    }\n\n    @Override\n    public boolean isInt()\n    {\n        return false;\n    }\n\n    @Override\n    public boolean isLong()\n    {\n        return false;\n    }\n\n    @Override\n    public boolean isFloat()\n    {\n        return false;\n    }\n\n    @Override\n    public boolean isDouble()\n    {\n        return false;\n    }\n\n    @Override\n    public boolean isBoolean()\n    {\n        return false;\n    }\n\n    @Override\n    public boolean isNull()\n    {\n        return false;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}