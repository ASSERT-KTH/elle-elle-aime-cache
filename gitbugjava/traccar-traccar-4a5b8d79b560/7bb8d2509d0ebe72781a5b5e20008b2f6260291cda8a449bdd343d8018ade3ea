{
    "generation": "@Override\nprotected Object decode(\n        Channel channel, SocketAddress remoteAddress, Object msg) throws Exception {\n\n    String sentence = (String) msg;\n    sentence = sentence.substring(sentence.indexOf('|') + 1, sentence.lastIndexOf('|'));\n\n    Position position = new Position();\n    position.setProtocol(getProtocolName());\n\n    DeviceSession deviceSession = null;\n\n    for (String entry : sentence.split(\",\")) {\n        int delimiter = entry.indexOf('=');\n        if (delimiter == -1) {\n            continue; // Skip malformed entries\n        }\n        String key = entry.substring(0, delimiter).trim();\n        String value = entry.substring(delimiter + 1).trim();\n\n        switch (key) {\n            case \"unit\":\n                deviceSession = getDeviceSession(channel, remoteAddress, value);\n                if (deviceSession != null) {\n                    position.setDeviceId(deviceSession.getDeviceId());\n                }\n                break;\n            case \"gps_valid\":\n                position.setValid(!value.isEmpty() && Integer.parseInt(value) != 0);\n                break;\n            case \"datetime_actual\":\n                if (!value.isEmpty()) {\n                    position.setTime(new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss\").parse(value));\n                }\n                break;\n            case \"latitude\":\n                if (!value.isEmpty()) {\n                    position.setLatitude(Double.parseDouble(value));\n                }\n                break;\n            case \"longitude\":\n                if (!value.isEmpty()) {\n                    position.setLongitude(Double.parseDouble(value));\n                }\n                break;\n            case \"altitude\":\n                if (!value.isEmpty()) {\n                    position.setAltitude(Double.parseDouble(value));\n                }\n                break;\n            case \"velocity\":\n                if (!value.isEmpty()) {\n                    position.setSpeed(UnitsConverter.knotsFromKph(Integer.parseInt(value)));\n                }\n                break;\n            case \"heading\":\n                if (!value.isEmpty()) {\n                    position.setCourse(Integer.parseInt(value));\n                }\n                break;\n            case \"eventid\":\n                if (!value.isEmpty()) {\n                    position.set(Position.KEY_EVENT, Integer.parseInt(value));\n                }\n                break;\n            case \"mileage\":\n                if (!value.isEmpty()) {\n                    position.set(Position.KEY_ODOMETER, (long) (Double.parseDouble(value) * 1000));\n                }\n                break;\n            case \"satellites\":\n                if (!value.isEmpty()) {\n                    position.set(Position.KEY_SATELLITES, Integer.parseInt(value));\n                }\n                break;\n            case \"ignition\":\n                if (!value.isEmpty()) {\n                    position.set(Position.KEY_IGNITION, Integer.parseInt(value) != 0);\n                }\n                break;\n            case \"door\":\n                if (!value.isEmpty()) {\n                    position.set(Position.KEY_DOOR, Integer.parseInt(value) != 0);\n                }\n                break;\n            case \"arm\":\n                if (!value.isEmpty()) {\n                    position.set(Position.KEY_ARMED, Integer.parseInt(value) != 0);\n                }\n                break;\n            case \"fuel\":\n                if (!value.isEmpty()) {\n                    position.set(Position.KEY_FUEL_LEVEL, Integer.parseInt(value));\n                }\n                break;\n            case \"rpm\":\n                if (!value.isEmpty()) {\n                    position.set(Position.KEY_RPM, Integer.parseInt(value));\n                }\n                break;\n            case \"main_voltage\":\n                if (!value.isEmpty()) {\n                    position.set(Position.KEY_POWER, Double.parseDouble(value));\n                }\n                break;\n            case \"backup_voltage\":\n                if (!value.isEmpty()) {\n                    position.set(Position.KEY_BATTERY, Double.parseDouble(value));\n                }\n                break;\n            case \"analog1\":\n            case \"analog2\":\n            case \"analog3\":\n                if (!value.isEmpty()) {\n                    position.set(Position.PREFIX_ADC + (key.charAt(key.length() - 1) - '0'), Double.parseDouble(value));\n                }\n                break;\n            default:\n                if (!value.isEmpty()) {\n                    position.set(key, value);\n                }\n        }\n    }\n\n    if (deviceSession == null) {\n        return null; // Return null if device session couldn't be resolved\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}