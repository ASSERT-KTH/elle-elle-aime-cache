{
    "generation": "private void decodeLocation(Position position, ByteBuf buf, int codec, String model) {\n\n    int globalMask = 0x0f;\n\n    if (codec == CODEC_GH3000) {\n\n        long time = buf.readUnsignedInt() & 0x3fffffff;\n        time += 1167609600; // 2007-01-01 00:00:00\n\n        globalMask = buf.readUnsignedByte();\n        if (BitUtil.check(globalMask, 0)) {\n\n            position.setTime(new Date(time * 1000));\n\n            int locationMask = buf.readUnsignedByte();\n\n            if (BitUtil.check(locationMask, 0) && buf.readableBytes() >= 8) { // Modify to ensure sufficient bytes\n                position.setLatitude(buf.readFloat());\n                position.setLongitude(buf.readFloat());\n            }\n\n            if (BitUtil.check(locationMask, 1) && buf.readableBytes() >= 2) { // Modify to ensure sufficient bytes\n                position.setAltitude(buf.readUnsignedShort());\n            }\n\n            if (BitUtil.check(locationMask, 2) && buf.readableBytes() >= 1) { // Modify to ensure sufficient bytes\n                position.setCourse(buf.readUnsignedByte() * 360.0 / 256);\n            }\n\n            if (BitUtil.check(locationMask, 3) && buf.readableBytes() >= 1) { // Modify to ensure sufficient bytes\n                position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedByte()));\n            }\n\n            if (BitUtil.check(locationMask, 4) && buf.readableBytes() >= 1) { // Modify to ensure sufficient bytes\n                position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n            }\n\n            if (BitUtil.check(locationMask, 5)) {\n                if (buf.readableBytes() >= 4) { // Modify to ensure sufficient bytes for CellTower info\n                    CellTower cellTower = CellTower.fromLacCid(\n                            getConfig(), buf.readUnsignedShort(), buf.readUnsignedShort());\n\n                    if (BitUtil.check(locationMask, 6) && buf.readableBytes() >= 1) { // Signal strength\n                        cellTower.setSignalStrength((int) buf.readUnsignedByte());\n                    }\n\n                    if (BitUtil.check(locationMask, 7) && buf.readableBytes() >= 4) { // Operator setting\n                        cellTower.setOperator(buf.readUnsignedInt());\n                    }\n\n                    position.setNetwork(new Network(cellTower));\n                }\n            } else {\n                if (BitUtil.check(locationMask, 6) && buf.readableBytes() >= 1) { // Modify to ensure sufficient bytes\n                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                }\n                if (BitUtil.check(locationMask, 7) && buf.readableBytes() >= 4) { // Modify to ensure sufficient bytes\n                    position.set(Position.KEY_OPERATOR, buf.readUnsignedInt());\n                }\n            }\n\n        } else {\n\n            getLastLocation(position, new Date(time * 1000));\n\n        }\n\n    } else {\n\n        if (buf.readableBytes() >= 8) {\n            position.setTime(new Date(buf.readLong()));\n        }\n\n        if (buf.readableBytes() >= 1) {\n            position.set(\"priority\", buf.readUnsignedByte());\n        }\n\n        if (buf.readableBytes() >= 8) {\n            position.setLongitude(buf.readInt() / 10000000.0);\n            position.setLatitude(buf.readInt() / 10000000.0);\n        }\n\n        if (buf.readableBytes() >= 2) {\n            position.setAltitude(buf.readShort());\n            position.setCourse(buf.readUnsignedShort());\n        }\n\n        if (buf.readableBytes() >= 1) {\n            int satellites = buf.readUnsignedByte();\n            position.set(Position.KEY_SATELLITES, satellites);\n            position.setValid(satellites != 0);\n        }\n\n        if (buf.readableBytes() >= 2) {\n            position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort()));\n        }\n\n        if (buf.readableBytes() >= 1) {\n            position.set(Position.KEY_EVENT, readExtByte(buf, codec, CODEC_8_EXT, CODEC_16));\n        }\n\n        if (codec == CODEC_16 && buf.readableBytes() >= 1) {\n            buf.readUnsignedByte(); // generation type\n        }\n\n        if (buf.readableBytes() >= 1) {\n            readExtByte(buf, codec, CODEC_8_EXT); // total IO data records\n        }\n    }\n\n    // Process 1, 2, 4, 8, 16-byte data, ensure readableBytes for safety checks\n    if (BitUtil.check(globalMask, 1) && buf.readableBytes() >= 1) {\n        int cnt = readExtByte(buf, codec, CODEC_8_EXT);\n        for (int j = 0; j < cnt; j++) {\n            decodeParameter(position, readExtByte(buf, codec, CODEC_8_EXT, CODEC_16), buf, 1, codec, model);\n        }\n    }\n\n    if (BitUtil.check(globalMask, 2) && buf.readableBytes() >= 2) {\n        int cnt = readExtByte(buf, codec, CODEC_8_EXT);\n        for (int j = 0; j < cnt; j++) {\n            decodeParameter(position, readExtByte(buf, codec, CODEC_8_EXT, CODEC_16), buf, 2, codec, model);\n        }\n    }\n\n    if (BitUtil.check(globalMask, 3) && buf.readableBytes() >= 4) {\n        int cnt = readExtByte(buf, codec, CODEC_8_EXT);\n        for (int j = 0; j < cnt; j++) {\n            decodeParameter(position, readExtByte(buf, codec, CODEC_8_EXT, CODEC_16), buf, 4, codec, model);\n        }\n    }\n\n    if ((codec == CODEC_8 || codec == CODEC_8_EXT || codec == CODEC_16) && buf.readableBytes() >= 8) {\n        int cnt = readExtByte(buf, codec, CODEC_8_EXT);\n        for (int j = 0; j < cnt; j++) {\n            decodeParameter(position, readExtByte(buf, codec, CODEC_8_EXT, CODEC_16), buf, 8, codec, model);\n        }\n    }\n\n    if (extended && buf.readableBytes() >= 16) {\n        int cnt = readExtByte(buf, codec, CODEC_8_EXT);\n        for (int j = 0; j < cnt; j++) {\n            int id = readExtByte(buf, codec, CODEC_8_EXT, CODEC_16);\n            if (buf.readableBytes() >= 16) {\n                position.set(Position.PREFIX_IO + id, ByteBufUtil.hexDump(buf.readSlice(16)));\n            }\n        }\n    }\n\n    if (codec == CODEC_8_EXT && buf.readableBytes() >= 2) {\n        int cnt = buf.readUnsignedShort();\n        for (int j = 0; j < cnt; j++) {\n            if (buf.readableBytes() >= 4) {\n                int id = buf.readUnsignedShort();\n                int length = buf.readUnsignedShort();\n                if (buf.readableBytes() >= length) {\n                    if (id == 256) {\n                        position.set(Position.KEY_VIN,\n                                buf.readSlice(length).toString(StandardCharsets.US_ASCII));\n                    } else if (id == 281) {\n                        position.set(Position.KEY_DTCS,\n                                buf.readSlice(length).toString(StandardCharsets.US_ASCII).replace(',', ' '));\n                    } else if (id == 385) {\n                        ByteBuf data = buf.readSlice(length);\n                        if (data.readableBytes() >= 1) {\n                            data.readUnsignedByte(); // Data part\n                        }\n                        int index = 1;\n                        while (data.isReadable()) {\n                            int flags = data.readUnsignedByte();\n                            if (BitUtil.from(flags, 4) > 0 && data.readableBytes() >= 20) {\n                                position.set(\"beacon\" + index + \"Uuid\", ByteBufUtil.hexDump(data.readSlice(16)));\n                                position.set(\"beacon\" + index + \"Major\", data.readUnsignedShort());\n                                position.set(\"beacon\" + index + \"Minor\", data.readUnsignedShort());\n                            } else if (data.readableBytes() >= 16) {\n                                position.set(\"beacon\" + index + \"Namespace\", ByteBufUtil.hexDump(data.readSlice(10)));\n                                position.set(\"beacon\" + index + \"Instance\", ByteBufUtil.hexDump(data.readSlice(6)));\n                            }\n                            if (data.readableBytes() >= 1) {\n                                position.set(\"beacon\" + index + \"Rssi\", (int) data.readByte());\n                            }\n                            if (BitUtil.check(flags, 1) && data.readableBytes() >= 2) {\n                                position.set(\"beacon\" + index + \"Battery\", data.readUnsignedShort() * 0.01);\n                            }\n                            if (BitUtil.check(flags, 2) && data.readableBytes() >= 2) {\n                                position.set(\"beacon\" + index + \"Temp\", data.readUnsignedShort());\n                            }\n                            index += 1;\n                        }\n                    } else {\n                        position.set(Position.PREFIX_IO + id, ByteBufUtil.hexDump(buf.readSlice(length)));\n                    }\n                }\n            }\n        }\n    }\n\n    decodeNetwork(position, model);\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}