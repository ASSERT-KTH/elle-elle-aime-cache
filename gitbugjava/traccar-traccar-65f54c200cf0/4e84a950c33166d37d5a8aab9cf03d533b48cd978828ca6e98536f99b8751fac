{
    "generation": "\nprivate void decodeLocation(Position position, ByteBuf buf, int codec, String model) {\n\n    int globalMask = 0x0f;\n\n    if (codec == CODEC_GH3000) {\n\n        long time = buf.readUnsignedInt() & 0x3fffffff;\n\n        time += 1167609600; // 2007-01-01 00:00:00\n\n        globalMask = buf.readUnsignedByte();\n\n        if (BitUtil.check(globalMask, 0)) {\n\n            position.setTime(new Date(time * 1000));\n\n            int locationMask = buf.readUnsignedByte();\n\n            if (BitUtil.check(locationMask, 0)) {\n\n                position.setLatitude(buf.readFloat());\n\n                position.setLongitude(buf.readFloat());\n\n            }\n\n            if (BitUtil.check(locationMask, 1)) {\n\n                position.setAltitude(buf.readUnsignedShort());\n\n            }\n\n            if (BitUtil.check(locationMask, 2)) {\n\n                position.setCourse(buf.readUnsignedByte() * 360.0 / 256);\n\n            }\n\n            if (BitUtil.check(locationMask, 3)) {\n\n                position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedByte()));\n\n            }\n\n            if (BitUtil.check(locationMask, 4)) {\n\n                position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n\n            }\n\n            if (BitUtil.check(locationMask, 5)) {\n\n                CellTower cellTower = CellTower.fromLacCid(\n\n                        getConfig(), buf.readUnsignedShort(), buf.readUnsignedShort());\n\n                if (BitUtil.check(locationMask, 6)) {\n\n                    cellTower.setSignalStrength((int) buf.readUnsignedByte());\n\n                }\n\n                if (BitUtil.check(locationMask, 7)) {\n\n                    cellTower.setOperator(buf.readUnsignedInt());\n\n                }\n\n                position.setNetwork(new Network(cellTower));\n\n            } else {\n\n                if (BitUtil.check(locationMask, 6)) {\n\n                    position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n\n                }\n\n                if (BitUtil.check(locationMask, 7)) {\n\n                    position.set(Position.KEY_OPERATOR, buf.readUnsignedInt());\n\n                }\n\n            }\n\n        } else {\n\n            getLastLocation(position, new Date(time * 1000));\n\n        }\n\n    } else {\n\n        position.setTime(new Date(buf.readLong()));\n\n        position.set(\"priority\", buf.readUnsignedByte());\n\n        position.setLongitude(buf.readInt() / 10000000.0);\n\n        position.setLatitude(buf.readInt() / 10000000.0);\n\n        position.setAltitude(buf.readShort());\n\n        position.setCourse(buf.readUnsignedShort());\n\n        int satellites = buf.readUnsignedByte();\n\n        position.set(Position.KEY_SATELLITES, satellites);\n\n        position.setValid(satellites != 0);\n\n        position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort()));\n\n        position.set(Position.KEY_EVENT, readExtByte(buf, codec, CODEC_8_EXT, CODEC_16));\n\n        if (codec == CODEC_16) {\n\n            buf.readUnsignedByte(); // generation type\n\n        }\n\n        readExtByte(buf, codec, CODEC_8_EXT); // total IO data records\n\n    }\n\n    // Read 1 byte data\n\n    if (BitUtil.check(globalMask, 1)) {\n\n        int cnt = readExtByte(buf, codec, CODEC_8_EXT);\n\n        for (int j = 0; j < cnt; j++) {\n\n            decodeParameter(position, readExtByte(buf, codec, CODEC_8_EXT, CODEC_16), buf, 1, codec, model);\n\n        }\n\n    }\n\n    // Read 2 byte data\n\n    if (BitUtil.check(globalMask, 2)) {\n\n        int cnt = readExtByte(buf, codec, CODEC_8_EXT);\n\n        for (int j = 0; j < cnt; j++) {\n\n            decodeParameter(position, readExtByte(buf, codec, CODEC_8_EXT, CODEC_16), buf, 2, codec, model);\n\n        }\n\n    }\n\n    // Read 4 byte data\n\n    if (BitUtil.check(globalMask, 3)) {\n\n        int cnt = readExtByte(buf, codec, CODEC_8_EXT);\n\n        for (int j = 0; j < cnt; j++) {\n\n            decodeParameter(position, readExtByte(buf, codec, CODEC_8_EXT, CODEC_16), buf, 4, codec, model);\n\n        }\n\n    }\n\n    // Read 8 byte data\n\n    if (codec == CODEC_8 || codec == CODEC_8_EXT || codec == CODEC_16) {\n\n        int cnt = readExtByte(buf, codec, CODEC_8_EXT);\n\n        for (int j = 0; j < cnt; j++) {\n\n            decodeParameter(position, readExtByte(buf, codec, CODEC_8_EXT, CODEC_16), buf, 8, codec, model);\n\n        }\n\n    }\n\n    // Read 16 byte data\n\n    if (extended) {\n\n        int cnt = readExtByte(buf, codec, CODEC_8_EXT);\n\n        for (int j = 0; j < cnt; j++) {\n\n            int id = readExtByte(buf, codec, CODEC_8_EXT, CODEC_16);\n\n            position.set(Position.PREFIX_IO + id, ByteBufUtil.hexDump(buf.readSlice(16)));\n\n        }\n\n    }\n\n    // Read X byte data\n\n    if (codec == CODEC_8_EXT) {\n\n        int cnt = buf.readUnsignedShort();\n\n        for (int j = 0; j < cnt; j++) {\n\n            int id = buf.readUnsignedShort();\n\n            int length = buf.readUnsignedShort();\n\n            if (id == 256) {\n\n                position.set(Position.KEY_VIN,\n\n                        buf.readSlice(length).toString(StandardCharsets.US_ASCII));\n\n            } else if (id == 281) {\n\n                position.set(Position.KEY_DTCS,\n\n                        buf.readSlice(length).toString(StandardCharsets.US_ASCII).replace(',', ' '));\n\n            } else if (id == 385) {\n\n                ByteBuf data = buf.readSlice(length);\n\n                data.readUnsignedByte(); // data part\n\n                int index = 1;\n\n                while (data.isReadable()) {\n\n                    int flags = data.readUnsignedByte();\n\n                    if (BitUtil.from(flags, 4) > 0) {\n\n                        position.set(\"beacon\" + index + \"Uuid\", ByteBufUtil.hexDump(data.readSlice(16)));\n\n                        position.set(\"beacon\" + index + \"Major\", data.readUnsignedShort());\n\n                        position.set(\"beacon\" + index + \"Minor\", data.readUnsignedShort());\n\n                    } else {\n\n                        position.set(\"beacon\" + index + \"Namespace\", ByteBufUtil.hexDump(data.readSlice(10)));\n\n                        position.set(\"beacon\" + index + \"Instance\", ByteBufUtil.hexDump(data.readSlice(6)));\n\n                    }\n\n                    position.set(\"beacon\" + index + \"Rssi\", (int) data.readByte());\n\n                    if (BitUtil.check(flags, 1)) {\n\n                        position.set(\"beacon\" + index + \"Battery\", data.readUnsignedShort() * 0.01);\n\n                    }\n\n                    if (BitUtil.check(flags, 2)) {\n\n                        position.set(\"beacon\" + index + \"Temp\", data.readUnsignedShort());\n\n                    }\n\n                    index += 1;\n\n                }\n\n            } else {\n\n                position.set(Position.PREFIX_IO + id, ByteBufUtil.hexDump(buf.readSlice(length)));\n\n            }\n\n        }\n\n    }\n\n    decodeNetwork(position, model);\n\n}\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}