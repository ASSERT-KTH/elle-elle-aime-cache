{
    "generation": "private void readBinaryCustomData(Position position, ByteBuf buf, String form) {\n    CellTower cellTower = new CellTower();\n    String[] keys = form.substring(1).split(\"%\");\n    for (String key : keys) {\n        switch (key) {\n            //... existing cases\n            default:\n                buf.skipBytes(getDataLength(key));\n                break;\n        }\n    }\n\n    //... existing code\n}\n\nprivate int getDataLength(String key) {\n    switch (key) {\n        case \"SA\":\n        case \"GQ\":\n        case \"RL\":\n        case \"PC\":\n        case \"RP\":\n        case \"GS\":\n        case \"DT\":\n        case \"IA\":\n        case \"MP\":\n            return 1;\n        case \"MV\":\n        case \"BV\":\n        case \"ET\":\n        case \"AV1\":\n            return 2;\n        case \"CE\":\n        case \"NC\":\n        case \"AT\":\n        case \"TR\":\n        case \"EL\":\n        case \"FL\":\n        case \"ML\":\n        case \"FC\":\n        case \"CI\":\n        case \"VN\":\n        case \"MA\":\n        case \"PD\":\n        case \"SM\":\n        case \"GN\":\n        case \"GV\":\n        case \"ME\":\n            return 4;\n        case \"LC\":\n            return 2;\n        case \"CN\":\n            return 4;\n        case \"CD\":\n        case \"CM\":\n            return 8;\n        default:\n            return 0;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}