{
    "generation": "private Position decode04(Channel channel, SocketAddress remoteAddress, ByteBuf buf) throws ParseException {\n\n    buf.readUnsignedShortLE(); // length\n    buf.readUnsignedShortLE(); // checksum\n    int index = buf.readUnsignedShortLE();\n\n    String id = String.format(\"%08d%07d\", buf.readUnsignedIntLE(), buf.readUnsignedIntLE());\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, String.valueOf(id));\n    if (deviceSession == null) {\n        return null;\n    }\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n    position.set(Position.KEY_INDEX, index);\n\n    position.setDeviceTime(new Date(buf.readUnsignedIntLE() * 1000));\n\n    while (buf.isReadable()) {\n        int type = buf.readUnsignedByte();\n        switch (type) {\n            case 0:\n                position.set(Position.KEY_EVENT, buf.readUnsignedShortLE());\n                buf.readUnsignedIntLE(); // event data\n\n                int status = buf.readUnsignedShortLE();\n                position.set(Position.KEY_IGNITION, BitUtil.check(status, 5));\n                position.set(Position.KEY_STATUS, status);\n\n                double latitude = buf.readInt() * 0.00001;\n                double longitude = buf.readInt() * 0.00001;\n\n                if (Math.abs(latitude) <= 90 && Math.abs(longitude) <= 180) {\n                    position.setValid(true);\n                    position.setLatitude(latitude);\n                    position.setLongitude(longitude);\n                } else {\n                    throw new IllegalArgumentException(\"Latitude or longitude out of range\");\n                }\n\n                position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));\n                position.setCourse(buf.readUnsignedShortLE());\n\n                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                position.set(Position.KEY_GPS, buf.readUnsignedByte());\n                position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                position.set(Position.KEY_ODOMETER_TRIP, buf.readUnsignedShortLE());\n                position.set(\"maxAcceleration\", buf.readUnsignedShortLE() * 0.001);\n                position.set(\"maxDeceleration\", buf.readUnsignedShortLE() * 0.001);\n                buf.readUnsignedShortLE(); // bearing to landmark\n                buf.readUnsignedIntLE(); // distance to landmark\n\n                position.setFixTime(new Date(buf.readUnsignedIntLE() * 1000));\n\n                buf.readUnsignedByte(); // reserved\n                break;\n            // rest of the code ...\n        }\n    }\n\n    return position.getValid() ? position : null;\n\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}