{
    "generation": "@Override\npublic boolean matches(Element root, Element element) {\n    for (int i = evaluators.size() - 1; i >= 0; --i) {\n        if (element == null)\n            return false;\n        Evaluator eval = evaluators.get(i);\n        if (eval.getClass().equals(CombiningEvaluator.class) && \"( )\".contains(((CombiningEvaluator) eval).getCombinator())) {\n            // In case of a combinator like `parent > child`, we need to adjust the element\n            // for the child evaluator.\n            if (!eval.matches(root, element))\n                return false;\n        } else {\n            if (!eval.matches(root, element))\n                return false;\n        }\n        // Only go up the element tree if this is not a combinator,\n        // like `parent > child`, that needs the context of parent.\n        if (!(i > 0 && evaluators.get(i - 1).getClass().equals(CombiningEvaluator.class) && \"( )\".contains(((CombiningEvaluator) evaluators.get(i - 1)).getCombinator()))) {\n            element = element.parent();\n        }\n    }\n    return true;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}