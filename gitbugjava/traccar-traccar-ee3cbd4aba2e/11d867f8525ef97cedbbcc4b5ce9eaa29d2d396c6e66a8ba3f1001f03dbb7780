{
    "generation": "private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);\n    position.setValid(type!= MSG_LOCATION_REPORT_BLIND);\n\n    position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n    position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);\n\n    int battery = buf.readUnsignedByte();\n    if (battery <= 100) {\n        position.set(Position.KEY_BATTERY_LEVEL, battery);\n    } else if (battery == 0xAA) {\n        position.set(Position.KEY_CHARGE, true);\n    }\n\n    position.setNetwork(new Network(CellTower.fromCidLac(\n            getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));\n\n    int product = buf.readUnsignedByte();\n    int status = buf.readUnsignedShort();\n    int alarm = buf.readUnsignedShort();\n\n    if (product == 1 || product == 2) {\n        if (BitUtil.check(alarm, 0)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);\n        }\n    } else if (product == 3) {\n        position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));\n        if (BitUtil.check(alarm, 1)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);\n        }\n        if (BitUtil.check(alarm, 2)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);\n        }\n        if (BitUtil.check(alarm, 3)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);\n        }\n    }\n\n    position.set(Position.KEY_STATUS, status);\n\n    while (buf.readableBytes() > 2) {\n        int id = buf.readUnsignedByte();\n        int length = buf.readUnsignedByte();\n        switch (id) {\n            case 0x02:\n                position.setAltitude(buf.readShort());\n                break;\n            case 0x0C:\n                buf.skipBytes(2);\n                int x = (buf.readUnsignedByte()<<8)|buf.readUnsignedByte();\n                int y = (buf.readUnsignedByte()<<8)|buf.readUnsignedByte();\n                int z = (buf.readUnsignedByte()<<8)|buf.readUnsignedByte();\n                position.set(Position.PREFIX_ACCELEROMETER+1, ByteBuffer.allocate(4).order(ByteOrder.BIG_ENDIAN).putInt(x*100/2048-5000).getFloat());\n                position.set(Position.PREFIX_ACCELEROMETER+2, ByteBuffer.allocate(4).order(ByteOrder.BIG_ENDIAN).putInt(y*100/2048-5000).getFloat());\n                position.set(Position.PREFIX_ACCELEROMETER+3, ByteBuffer.allocate(4).order(ByteOrder.BIG_ENDIAN).putInt(z*100/2048-5000).getFloat());\n                buf.skipBytes(2);\n                break;\n            case 0x0f:\n                position.setTiltAngle((buf.readUnsignedByte()<<8)|buf.readUnsignedByte()-180, (buf.readUnsignedByte()<<8)|buf.readUnsignedByte()-90, (buf.readUnsignedByte()<<8)|buf.readUnsignedByte()-180);\n                position.setCourse((buf.readUnsignedByte()<<8)|buf.readUnsignedByte()/10f);\n                if(buf.readableBytes()==6)\n                    buf.readUnsignedInt();\n                if(buf.readableBytes()>2) {\n                    ((buf.readUnsignedByte() << 8) | buf.readUnsignedByte()-180)/10f\n                };\n                break;    \n            default:\n                buf.skipBytes(length);\n                break;\n        }\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}