{
    "generation": "\nprivate Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {\n\n    Position position = new Position(getProtocolName());\n\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);\n\n    position.setValid(type != MSG_LOCATION_REPORT_BLIND);\n\n    position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n\n    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n\n    position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);\n\n    int battery = buf.readUnsignedByte();\n\n    if (battery <= 100) {\n\n        position.set(Position.KEY_BATTERY_LEVEL, battery);\n\n    } else if (battery == 0xAA) {\n\n        position.set(Position.KEY_CHARGE, true);\n\n    }\n\n    position.setNetwork(new Network(CellTower.fromCidLac(\n\n            getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));\n\n    int product = buf.readUnsignedByte();\n\n    int status = buf.readUnsignedShort();\n\n    int alarm = buf.readUnsignedShort();\n\n    if (product == 1 || product == 2) {\n\n        if (BitUtil.check(alarm, 0)) {\n\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);\n\n        }\n\n    } else if (product == 3) {\n\n        position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));\n\n        if (BitUtil.check(alarm, 1)) {\n\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);\n\n        }\n\n        if (BitUtil.check(alarm, 2)) {\n\n            position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);\n\n        }\n\n        if (BitUtil.check(alarm, 3)) {\n\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);\n\n        }\n\n    }\n\n    position.set(Position.KEY_STATUS, status);\n\n    // Read gyro data if available\n\n    if (buf.readableBytes() >= 6) {\n\n        byte[] gyroData = new byte[6];\n\n        buf.readBytes(gyroData);\n\n        position.set(\"gyro\", Bytes.hex(gyroData));\n\n    }\n\n    return position;\n\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}