{
    "generation": "private Position decodeLocation2(DeviceSession deviceSession, ByteBuf buf, int type) {\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    Jt600ProtocolDecoder.decodeBinaryLocation(buf, position);\n    position.setValid(type != MSG_LOCATION_REPORT_BLIND);\n\n    position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n    position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n    position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000L);\n\n    int battery = buf.readUnsignedByte();\n    if (battery <= 100 && battery != 0xAA) {\n        position.set(Position.KEY_BATTERY_LEVEL, battery);\n    } else if (battery == 0xAA) {\n        position.set(Position.KEY_CHARGE, true);\n    }\n\n    position.setNetwork(new Network(CellTower.fromCidLac(\n            getConfig(), buf.readUnsignedInt(), buf.readUnsignedShort())));\n\n    int product = buf.readUnsignedByte();\n    int status = buf.readUnsignedShort();\n    int alarm = buf.readUnsignedShort();\n\n    if (product == 1 || product == 2) {\n        if (BitUtil.check(alarm, 0)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);\n        }\n    } else if (product == 3) {\n        position.set(Position.KEY_BLOCKED, BitUtil.check(status, 5));\n        if (BitUtil.check(alarm, 1)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_POWER);\n        }\n        if (BitUtil.check(alarm, 2)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);\n        }\n        if (BitUtil.check(alarm, 3)) {\n            position.set(Position.KEY_ALARM, Position.ALARM_LOW_BATTERY);\n        }\n    }\n\n    position.set(Position.KEY_STATUS, status);\n\n    // Ensure that the buffer has at least 7 bytes left\n    if (buf.readableBytes() >= 7) {\n        byte gyroX = buf.readByte();\n        byte gyroY = buf.readByte();\n        byte gyroZ = buf.readByte();\n        short accelerationX = buf.readShort();\n        short accelerationY = buf.readShort();\n        short accelerationZ = buf.readShort();\n\n        position.set(Position.PREFIX_GYRO + \"x\", gyroX);\n        position.set(Position.PREFIX_GYRO + \"y\", gyroY);\n        position.set(Position.PREFIX_GYRO + \"z\", gyroZ);\n        position.set(Position.PREFIX_ACCELEROMETER + \"x\", accelerationX);\n        position.set(Position.PREFIX_ACCELEROMETER + \"y\", accelerationY);\n        position.set(Position.PREFIX_ACCELEROMETER + \"z\", accelerationZ);\n    }\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}