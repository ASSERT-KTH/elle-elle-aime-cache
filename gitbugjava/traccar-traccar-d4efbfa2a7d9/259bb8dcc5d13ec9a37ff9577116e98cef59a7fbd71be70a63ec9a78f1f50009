{
    "generation": "\nprivate Position decodeLocation(DeviceSession deviceSession, ByteBuf buf) {\n\n    Position position = new Position(getProtocolName());\n\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    position.set(Position.KEY_ALARM, decodeAlarm(buf.readUnsignedInt()));\n\n    decodeCoordinates(position, buf);\n\n    position.setAltitude(buf.readShort());\n\n    position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShort() * 0.1));\n\n    position.setCourse(buf.readUnsignedShort());\n\n    position.setTime(readDate(buf, deviceSession.get(DeviceSession.KEY_TIMEZONE)));\n\n    if (buf.readableBytes() == 20) {\n\n        buf.skipBytes(4); // remaining battery and mileage\n\n        position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 1000);\n\n        position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n\n        buf.readUnsignedInt(); // area id\n\n        position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n\n        buf.skipBytes(3); // reserved\n\n        return position;\n\n    }\n\n    while (buf.readableBytes() > 2) {\n\n        int subtype = buf.readUnsignedByte();\n\n        int length = buf.readUnsignedByte();\n\n        int endIndex = buf.readerIndex() + length;\n\n        switch (subtype) {\n\n            case 0x01:\n\n                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt() * 100);\n\n                break;\n\n            case 0x02:\n\n                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedShort() * 0.1);\n\n                break;\n\n            case 0x2b:\n\n                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedInt());\n\n                break;\n\n            case 0x30:\n\n                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n\n                break;\n\n            case 0x31:\n\n                position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n\n                break;\n\n            case 0x33:\n\n                String sentence = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString();\n\n                if (sentence.startsWith(\"*M00\")) {\n\n                    String lockStatus = sentence.substring(8, 8 + 7);\n\n                    position.set(Position.KEY_BATTERY, Integer.parseInt(lockStatus.substring(2, 5)) * 0.01);\n\n                }\n\n                break;\n\n            case 0x80:\n\n                buf.readUnsignedByte(); // content\n\n                endIndex = buf.writerIndex() - 2;\n\n                decodeExtension(position, buf, endIndex);\n\n                break;\n\n            case 0x91:\n\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.1);\n\n                position.set(Position.KEY_RPM, buf.readUnsignedShort());\n\n                position.set(Position.KEY_OBD_SPEED, buf.readUnsignedByte());\n\n                position.set(Position.KEY_THROTTLE, buf.readUnsignedByte() * 100 / 255);\n\n                position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedByte() * 100 / 255);\n\n                position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedByte() - 40);\n\n                buf.readUnsignedShort();\n\n                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 0.01);\n\n                buf.readUnsignedShort();\n\n                buf.readUnsignedInt();\n\n                buf.readUnsignedShort();\n\n                position.set(Position.KEY_FUEL_USED, buf.readUnsignedShort() * 0.01);\n\n                break;\n\n            case 0x94:\n\n                if (length > 0) {\n\n                    position.set(\n\n                            Position.KEY_VIN, buf.readCharSequence(length, StandardCharsets.US_ASCII).toString());\n\n                }\n\n                break;\n\n            case 0xA7:\n\n                position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShort());\n\n                position.set(Position.PREFIX_ADC + 2, buf.readUnsignedShort());\n\n                break;\n\n            case 0xAC:\n\n                position.set(Position.KEY_ODOMETER, buf.readUnsignedInt());\n\n                break;\n\n            case 0xD0:\n\n                long userStatus = buf.readUnsignedInt();\n\n                if (BitUtil.check(userStatus, 3)) {\n\n                    position.set(Position.KEY_ALARM, Position.ALARM_VIBRATION);\n\n                }\n\n                break;\n\n            case 0xD3:\n\n                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.1);\n\n                break;\n\n            case 0xD4:\n\n                position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n\n                break;\n\n            case 0xD5:\n\n                if (length == 2) {\n\n                    position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.01);\n\n                } else {\n\n                    int count = buf.readUnsignedByte();\n\n                    for (int i = 1; i <= count; i++) {\n\n                        position.set(\"lock\" + i + \"Id\", ByteBufUtil.hexDump(buf.readSlice(5)));\n\n                        position.set(\"lock\" + i + \"Card\", ByteBufUtil.hexDump(buf.readSlice(5)));\n\n                        position.set(\"lock\" + i + \"Battery\", buf.readUnsignedByte());\n\n                        int status = buf.readUnsignedShort();\n\n                        position.set(\"lock\" + i + \"Locked\", !BitUtil.check(status, 5));\n\n                    }\n\n                }\n\n                break;\n\n            case 0xDA:\n\n                buf.readUnsignedShort(); // string cut count\n\n                int deviceStatus = buf.readUnsignedByte();\n\n                position.set(\"string\", BitUtil.check(deviceStatus, 0));\n\n                position.set(Position.KEY_MOTION, BitUtil.check(deviceStatus, 2));\n\n                position.set(\"cover\", BitUtil.check(deviceStatus, 3));\n\n                break;\n\n            case 0xE6:\n\n                while (buf.readerIndex() < endIndex) {\n\n                    int sensorIndex = buf.readUnsignedByte();\n\n                    buf.skipBytes(6); // mac\n\n                    position.set(Position.PREFIX_TEMP + sensorIndex, decodeCustomDouble(buf));\n\n                    position.set(\"humidity\" + sensorIndex, decodeCustomDouble(buf));\n\n                }\n\n                break;\n\n            case 0xEB:\n\n                if (buf.getUnsignedShort(buf.readerIndex()) > 200) {\n\n                    Network network = new Network();\n\n                    int mcc = buf.readUnsignedShort();\n\n                    int mnc = buf.readUnsignedByte();\n\n                    while (buf.readerIndex() < endIndex) {\n\n                        network.addCellTower(CellTower.from(\n\n                                mcc, mnc, buf.readUnsignedShort(), buf.readUnsignedShort(),\n\n                                buf.readUnsignedByte()));\n\n                    }\n\n                    position.setNetwork(network);\n\n                } else {\n\n                    while (buf.readerIndex() < endIndex) {\n\n                        int extendedLength = buf.readUnsignedShort();\n\n                        int extendedType = buf.readUnsignedShort();\n\n                        switch (extendedType) {\n\n                            case 0x0001:\n\n                                position.set(\"fuel1\", buf.readUnsignedShort() * 0.1);\n\n                                buf.readUnsignedByte(); // unused\n\n                                break;\n\n                            case 0x0023:\n\n                                position.set(\"fuel2\", Double.parseDouble(\n\n                                        buf.readCharSequence(6, StandardCharsets.US_ASCII).toString()));\n\n                                break;\n\n                            case 0x00CE:\n\n                                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.001);\n\n                                break;\n\n                            case 0x00D8:\n\n                                Network network = new Network();\n\n                                network.addCellTower(CellTower.from(\n\n                                        buf.readUnsignedShort(), buf.readUnsignedByte(),\n\n                                        buf.readUnsignedShort(), buf.readUnsignedInt()));\n\n                                position.setNetwork(network);\n\n                                break;\n\n                            case 0xE1:\n\n                                position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n\n                                break;\n\n                            default:\n\n                                buf.skipBytes(extendedLength - 2);\n\n                                break;\n\n                        }\n\n                    }\n\n                }\n\n                break;\n\n            case 0xED:\n\n                String license = buf.readCharSequence(length, StandardCharsets.US_ASCII).toString().trim();\n\n                position.set(\"driver\", license); // Changed from \"driverLicense\" to \"driver\"\n\n                break;\n\n            case 0xEE:\n\n                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n\n                position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.001);\n\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShort() * 0.001);\n\n                position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n\n                break;\n\n            case 0xF3:\n\n                while (buf.readerIndex() < endIndex) {\n\n                    int extendedType = buf.readUnsignedShort();\n\n                    int extendedLength = buf.readUnsignedByte();\n\n                    switch (extendedType) {\n\n                        case 0x0002:\n\n                            position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShort() * 0.1);\n\n                            break;\n\n                        case 0x0003:\n\n                            position.set(Position.KEY_RPM, buf.readUnsignedShort());\n\n                            break;\n\n                        case 0x0004:\n\n                            position.set(Position.KEY_POWER, buf.readUnsignedShort() * 0.001);\n\n                            break;\n\n                        case 0x0005:\n\n                            position.set(Position.KEY_OBD_ODOMETER, buf.readUnsignedInt() * 100);\n\n                            break;\n\n                        case 0x0007:\n\n                            position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShort() * 0.1);\n\n                            break;\n\n                        case 0x0008:\n\n                            position.set(Position.KEY_ENGINE_LOAD, buf.readUnsignedShort() * 0.1);\n\n                            break;\n\n                        case 0x0009:\n\n                            position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedShort() - 40);\n\n                            break;\n\n                        case 0x000B:\n\n                            position.set(\"intakePressure\", buf.readUnsignedShort());\n\n                            break;\n\n                        case 0x000C:\n\n                            position.set(\"intakeTemp\", buf.readUnsignedShort() - 40);\n\n                            break;\n\n                        case 0x000D:\n\n                            position.set(\"intakeFlow\", buf.readUnsignedShort());\n\n                            break;\n\n                        case 0x000E:\n\n                            position.set(Position.KEY_THROTTLE, buf.readUnsignedShort() * 100 / 255);\n\n                            break;\n\n                        case 0x0050:\n\n                            position.set(Position.KEY_VIN, buf.readSlice(17).toString(StandardCharsets.US_ASCII));\n\n                            break;\n\n                        case 0x0100:\n\n                            position.set(Position.KEY_ODOMETER_TRIP, buf.readUnsignedShort() * 0.1);\n\n                            break;\n\n                        case 0x0102:\n\n                            position.set(\"tripFuel\", buf.readUnsignedShort() * 0.1);\n\n                            break;\n\n                        case 0x0112:\n\n                            position.set(\"hardAccelerationCount\", buf.readUnsignedShort());\n\n                            break;\n\n                        case 0x0113:\n\n                            position.set(\"hardDecelerationCount\", buf.readUnsignedShort());\n\n                            break;\n\n                        case 0x0114:\n\n                            position.set(\"hardCorneringCount\", buf.readUnsignedShort());\n\n                            break;\n\n                        default:\n\n                            buf.skipBytes(extendedLength);\n\n                            break;\n\n                    }\n\n                }\n\n                break;\n\n            case 0xFE:\n\n                if (length == 1) {\n\n                    position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n\n                } else {\n\n                    int mark = buf.readUnsignedByte();\n\n                    if (mark == 0x7C) {\n\n                        while (buf.readerIndex() < endIndex) {\n\n                            int extendedType = buf.readUnsignedByte();\n\n                            int extendedLength = buf.readUnsignedByte();\n\n                            switch (extendedType) {\n\n                                case 0x01:\n\n                                    long alarms = buf.readUnsignedInt();\n\n                                    if (BitUtil.check(alarms, 0)) {\n\n                                        position.set(Position.KEY_ALARM, Position.ALARM_ACCELERATION);\n\n                                    }\n\n                                    if (BitUtil.check(alarms, 1)) {\n\n                                        position.set(Position.KEY_ALARM, Position.ALARM_BRAKING);\n\n                                    }\n\n                                    if (BitUtil.check(alarms, 2)) {\n\n                                        position.set(Position.KEY_ALARM, Position.ALARM_CORNERING);\n\n                                    }\n\n                                    if (BitUtil.check(alarms, 3)) {\n\n                                        position.set(Position.KEY_ALARM, Position.ALARM_ACCIDENT);\n\n                                    }\n\n                                    if (BitUtil.check(alarms, 4)) {\n\n                                        position.set(Position.KEY_ALARM, Position.ALARM_TAMPERING);\n\n                                    }\n\n                                    break;\n\n                                default:\n\n                                    buf.skipBytes(extendedLength);\n\n                                    break;\n\n                            }\n\n                        }\n\n                    }\n\n                    position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n\n                }\n\n                break;\n\n            default:\n\n                break;\n\n        }\n\n        buf.readerIndex(endIndex);\n\n    }\n\n    return position;\n\n}\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}