{
    "generation": "private List<Position> decodeBinaryE(Channel channel, SocketAddress remoteAddress, ByteBuf buf) {\n    List<Position> positions = new LinkedList<>();\n\n    int commaIndex = buf.indexOf(buf.readerIndex(), buf.writerIndex(), (byte) ',');\n    if (commaIndex == -1 || commaIndex + 1 + 15 > buf.writerIndex()) {\n        return null; // Insufficient data for IMEI\n    }\n    buf.readerIndex(commaIndex + 1);\n    String imei = buf.readSlice(15).toString(StandardCharsets.US_ASCII);\n    buf.skipBytes(1 + 3 + 1);\n\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);\n    if (deviceSession == null) {\n        return null;\n    }\n\n    if (buf.readableBytes() < 4 + 2) {\n        return null; // Insufficient data for remaining bytes and count\n    }\n    buf.readUnsignedIntLE(); // remaining cache\n    int count = buf.readUnsignedShortLE();\n\n    for (int i = 0; i < count; i++) {\n        Position position = new Position(getProtocolName());\n        position.setDeviceId(deviceSession.getDeviceId());\n\n        if (buf.readableBytes() < 2 + 2) {\n            return null; // Insufficient data for length and index\n        }\n        buf.readUnsignedShortLE(); // length\n        buf.readUnsignedShortLE(); // index\n\n        decodeParameters(buf, position);\n        decodeLongParameters(buf, position);\n\n        positions.add(position);\n    }\n\n    return positions;\n}\n\nprivate void decodeParameters(ByteBuf buf, Position position) {\n    int paramCount = buf.readUnsignedByte();\n    for (int j = 0; j < paramCount; j++) {\n        if (buf.readableBytes() < 1) {\n            return;\n        }\n        \n        boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n        int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n        \n        switch (id) {\n            case 0x01:\n                if (buf.readableBytes() < 1) return;\n                position.set(Position.KEY_EVENT, buf.readUnsignedByte());\n                break;\n            case 0x05:\n                if (buf.readableBytes() < 1) return;\n                position.setValid(buf.readUnsignedByte() > 0);\n                break;\n            case 0x06:\n                if (buf.readableBytes() < 1) return;\n                position.set(Position.KEY_SATELLITES, buf.readUnsignedByte());\n                break;\n            case 0x07:\n                if (buf.readableBytes() < 1) return;\n                position.set(Position.KEY_RSSI, buf.readUnsignedByte());\n                break;\n            case 0x14:\n                if (buf.readableBytes() < 1) return;\n                position.set(Position.KEY_OUTPUT, buf.readUnsignedByte());\n                break;\n            case 0x15:\n                if (buf.readableBytes() < 1) return;\n                position.set(Position.KEY_INPUT, buf.readUnsignedByte());\n                break;\n            case 0x47:\n                if (buf.readableBytes() < 1) return;\n                int lockState = buf.readUnsignedByte();\n                if (lockState > 0) {\n                    position.set(Position.KEY_LOCK, lockState == 2);\n                }\n                break;\n            case 0x97:\n                if (buf.readableBytes() < 1) return;\n                position.set(Position.KEY_THROTTLE, buf.readUnsignedByte());\n                break;\n            case 0x9D:\n                if (buf.readableBytes() < 1) return;\n                position.set(Position.KEY_FUEL_LEVEL, buf.readUnsignedByte());\n                break;\n            case 0xFE69:\n                if (buf.readableBytes() < 1) return;\n                position.set(Position.KEY_BATTERY_LEVEL, buf.readUnsignedByte());\n                break;\n            default:\n                if (buf.readableBytes() < (extension ? 2 : 1)) return;\n                buf.skipBytes(extension ? 2 : 1);\n                break;\n        }\n    }\n}\n\nprivate void decodeLongParameters(ByteBuf buf, Position position) {\n    int paramCount = buf.readUnsignedByte();\n    for (int j = 0; j < paramCount; j++) {\n        if (buf.readableBytes() < 1) {\n            return;\n        }\n\n        boolean extension = buf.getUnsignedByte(buf.readerIndex()) == 0xFE;\n        int id = extension ? buf.readUnsignedShort() : buf.readUnsignedByte();\n\n        switch (id) {\n            case 0x08:\n                if (buf.readableBytes() < 2) return;\n                position.setSpeed(UnitsConverter.knotsFromKph(buf.readUnsignedShortLE()));\n                break;\n            case 0x09:\n                if (buf.readableBytes() < 2) return;\n                position.setCourse(buf.readUnsignedShortLE());\n                break;\n            case 0x0A:\n                if (buf.readableBytes() < 2) return;\n                position.set(Position.KEY_HDOP, buf.readUnsignedShortLE());\n                break;\n            case 0x0B:\n                if (buf.readableBytes() < 2) return;\n                position.setAltitude(buf.readShortLE());\n                break;\n            case 0x16:\n                if (buf.readableBytes() < 2) return;\n                position.set(Position.PREFIX_ADC + 1, buf.readUnsignedShortLE() * 0.01);\n                break;\n            case 0x19:\n                if (buf.readableBytes() < 2) return;\n                position.set(Position.KEY_BATTERY, buf.readUnsignedShortLE() * 0.01);\n                break;\n            case 0x1A:\n                if (buf.readableBytes() < 2) return;\n                position.set(Position.KEY_POWER, buf.readUnsignedShortLE() * 0.01);\n                break;\n            case 0x40:\n                if (buf.readableBytes() < 2) return;\n                position.set(Position.KEY_EVENT, buf.readUnsignedShortLE());\n                break;\n            case 0x91:\n            case 0x92:\n                if (buf.readableBytes() < 2) return;\n                position.set(Position.KEY_OBD_SPEED, buf.readUnsignedShortLE());\n                break;\n            case 0x98:\n                if (buf.readableBytes() < 2) return;\n                position.set(Position.KEY_FUEL_USED, buf.readUnsignedShortLE());\n                break;\n            case 0x99:\n                if (buf.readableBytes() < 2) return;\n                position.set(Position.KEY_RPM, buf.readUnsignedShortLE());\n                break;\n            case 0x9C:\n                if (buf.readableBytes() < 2) return;\n                position.set(Position.KEY_COOLANT_TEMP, buf.readUnsignedShortLE());\n                break;\n            case 0x9F:\n                if (buf.readableBytes() < 2) return;\n                position.set(Position.PREFIX_TEMP + 1, buf.readUnsignedShortLE());\n                break;\n            case 0xC9:\n                if (buf.readableBytes() < 2) return;\n                position.set(Position.KEY_FUEL_CONSUMPTION, buf.readUnsignedShortLE());\n                break;\n            default:\n                if (buf.readableBytes() < 2) return;\n                buf.skipBytes(2);\n                break;\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}