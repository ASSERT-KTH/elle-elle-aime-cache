{
    "generation": "public static EnsembleSummaryView toView(Ensemble ensemble, MemberId memberId, MemberService memberService) {\n    List<MemberView> participantViews = transform(memberService, ensemble.acceptedMembers());\n    List<MemberView> spectatorViews = transform(memberService, ensemble.spectators());\n    return new EnsembleSummaryView(ensemble.getId().id(),\n                                   ensemble.name(),\n                                   DateTimeFormatting.formatAsDateTimeForCommonIso8601(ensemble.startDateTime()),\n                                   ensemble.acceptedCount(),\n                                   participantViews,\n                                   spectatorViews,\n                                   memberStatusToViewString(ensemble, memberId),\n                                   ensemble.meetingLink().toString(),\n                                   new GoogleCalendarLinkCreator().createFor(ensemble),\n                                   ensemble.recordingLink().toString()\n    );\n}\n\nprivate static List<MemberView> transform(MemberService memberService, List<MemberId> memberIds) {\n    return memberIds.stream()\n                    .map(id -> memberService.findById(id))\n                    .map(MemberView::from)\n                    .collect(Collectors.toList());\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}