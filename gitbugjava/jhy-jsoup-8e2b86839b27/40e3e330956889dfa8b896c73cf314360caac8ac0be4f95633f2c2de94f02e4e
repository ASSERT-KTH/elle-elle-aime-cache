{
    "generation": "    private boolean isFormatAsBlock(Document.OutputSettings out) {\n        return tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || (!out.outline() && isBlockTag(tag));\n    }\n\n    private boolean isBlockTag(Tag tag) {\n        // Define block level tags\n        String[] blockTags = {\"address\", \"article\", \"aside\", \"blockquote\", \"canvas\", \"dd\", \"div\", \"dl\", \"dt\",\n            \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"header\", \"hgroup\",\n            \"hr\", \"li\", \"main\", \"nav\", \"noscript\", \"ol\", \"output\", \"p\", \"pre\", \"section\", \"table\", \"tfoot\", \"ul\", \"video\"};\n        for (String blockTag : blockTags) {\n            if (tag.getName().equals(blockTag)) {\n                return true;\n            }\n        }\n        return false;\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}