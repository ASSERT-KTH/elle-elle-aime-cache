{
    "generation": "private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {\n    // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.\n    for (int i = 0; i < s.length(); i++) {\n        int c = s.codePointAt(i);\n        if (c == ' ') {\n            sb.append(spaceAsPlus ? '+' : \"%20\");\n        } else if (c > 127) { // out of ascii range\n            if (c <= 0xFFFF) { // BMP (Basic Multilingual Plane) character\n                sb.append(String.format(\"%%%02X\", c));\n            } else { // supplementary character\n                char[] chars = Character.toChars(c);\n                byte[] bytes = new String(chars).getBytes(UTF_8);\n                for (byte b : bytes) {\n                    sb.append(String.format(\"%%%02X\", b & 0xFF));\n                }\n                i++; // Skip the next char as it's part of the surrogate pair\n            }\n        } else {\n            sb.append((char) c);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}