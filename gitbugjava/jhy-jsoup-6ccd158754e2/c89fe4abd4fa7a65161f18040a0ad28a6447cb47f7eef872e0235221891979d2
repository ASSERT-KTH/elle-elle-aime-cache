{
    "generation": "private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) throws UnsupportedEncodingException {\n    // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.\n    for (int i = 0; i < s.length(); i++) {\n        int c = s.codePointAt(i);\n        if (Character.isHighSurrogate((char) c)) {\n            // Handle supplementary characters\n            if (i + 1 < s.length()) {\n                int supplementary = Character.toCodePoint((char) c, s.charAt(i + 1));\n                sb.append(URLEncoder.encode(new String(Character.toChars(supplementary)), \"UTF-8\"));\n                i++; // Skip the low surrogate\n                continue;\n            }\n        }\n        if (c == ' ') {\n            sb.append(spaceAsPlus ? '+' : \"%20\");\n        } else if (c > 127) { // out of ascii range\n            sb.append(URLEncoder.encode(new String(Character.toChars(c)), \"UTF-8\"));\n            // ^^ is a bit heavy-handed - if perf critical, we could optimize\n        } else {\n            sb.append((char) c);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}