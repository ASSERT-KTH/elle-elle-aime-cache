{
    "generation": "private static void appendToAscii(String s, boolean spaceAsPlus, StringBuilder sb) {\n    // minimal normalization of Unicode -> Ascii, and space normal. Existing escapes are left as-is.\n    for (int i = 0; i < s.length(); i++) {\n        int c = s.codePointAt(i);\n        if (Character.isSupplementaryCodePoint(c)) {\n            // Handle supplementary characters\n            sb.append(String.format(\"%%%02X%%%02X%%%02X%%%02X\", \n                (0xF0 | ((c >> 18) & 0x07)),\n                (0x80 | ((c >> 12) & 0x3F)),\n                (0x80 | ((c >> 6) & 0x3F)),\n                (0x80 | (c & 0x3F))\n            ));\n            i++; // Skip the next char as it's part of the surrogate pair\n        } else if (c == ' ') {\n            sb.append(spaceAsPlus ? '+' : \"%20\");\n        } else if (c > 127) { // out of ascii range\n            sb.append(String.format(\"%%%02X%%%02X\", \n                (0xC0 | (c >> 6)),\n                (0x80 | (c & 0x3F))\n            ));\n        } else {\n            sb.append((char) c);\n        }\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}