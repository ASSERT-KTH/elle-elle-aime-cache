{
    "generation": "private Object decodeLocationNew(\n        Channel channel, SocketAddress remoteAddress, String sentence) {\n\n    Parser parser = new Parser(PATTERN_NEW, sentence);\n    if (!parser.matches()) {\n        return null;\n    }\n\n    String imei = parser.next();\n    DeviceSession deviceSession = getDeviceSession(channel, remoteAddress, imei);\n    if (deviceSession == null) {\n        return null;\n    }\n\n    String index = parser.next();\n\n    Position position = new Position(getProtocolName());\n    position.setDeviceId(deviceSession.getDeviceId());\n\n    position.set(Position.KEY_ALARM, decodeAlarm(parser.nextInt()));\n\n    position.setDeviceTime(parser.nextDateTime());\n\n    Network network = new Network();\n    network.addCellTower(CellTower.from(\n            parser.nextInt(), parser.nextInt(), parser.nextHexInt(), parser.nextHexInt()));\n\n    position.set(Position.KEY_BATTERY, parser.nextDouble());\n    position.set(Position.KEY_BATTERY_LEVEL, parser.nextInt());\n    position.set(Position.KEY_STATUS, parser.nextHexInt());\n\n    if (parser.hasNext(5)) {\n        // Parse validity\n        boolean valid = parser.next().equals(\"A\");\n        position.setValid(valid);\n\n        // Parse fix time\n        position.setFixTime(parser.nextDateTime());\n\n        // Parse number of satellites\n        int satellites = parser.nextInt();\n        position.set(Position.KEY_SATELLITES, satellites);\n\n        // Parse speed in knots converted from kph\n        int speedKph = parser.nextInt();\n        position.setSpeed(UnitsConverter.knotsFromKph(speedKph));\n\n        // Parse latitude and longitude\n        double latitude = parser.nextDouble();\n        position.setLatitude(latitude);\n\n        double longitude = parser.nextDouble();\n        position.setLongitude(longitude);\n    } else {\n        // Parse Wi-Fi access points\n        String networkData = parser.next();\n        String[] points = networkData.split(\"\\\\|\");\n        for (String point : points) {\n            String[] wifi = point.split(\":\");\n            String mac = wifi[0].replaceAll(\"(..)\", \"$1:\");\n            network.addWifiAccessPoint(WifiAccessPoint.from(\n                    mac.substring(0, mac.length() - 1), Integer.parseInt(wifi[1])));\n        }\n    }\n\n    position.setNetwork(network);\n\n    DateFormat dateFormat = new SimpleDateFormat(\"yyMMddHHmmss\");\n    dateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n    String response = index + \",A03,\" + dateFormat.format(new Date());\n    sendResponse(channel, remoteAddress, imei, response);\n\n    return position;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}