{
    "generation": "    protected void replaceChild(Node out, Node in) {\n        Validate.isTrue(out.parentNode == this);\n        Validate.notNull(in);\n        if (in.parentNode != null) {\n            in.parentNode.removeChild(in);\n        }\n\n        final int index = out.siblingIndex;\n        List<Node> children = ensureChildNodes();\n        if (in == out) {\n            // was in = children.get(index), now we don't need to because we already know\n            return; // no change if replacing self\n        }\n        children.set(index, in);\n        in.parentNode = this;\n        in.setSiblingIndex(index);\n        out.parentNode = null;\n    }\n",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}