{
    "generation": "protected void replaceChild(Node out, Node in) {\n    if (out.parentNode != this) {\n        throw new IllegalStateException(\"The out node is not a child of this node.\");\n    }\n    if (in == null) {\n        throw new NullPointerException(\"The in node cannot be null.\");\n    }\n    if (in == out) {\n        return; // avoid redundant operations if out and in are the same node\n    }\n    if (in.parentNode != null) {\n        in.parentNode.removeChild(in);\n    }\n    int index = out.siblingIndex;\n    ensureChildNodes().set(index, in);\n    in.parentNode = this;\n    in.setSiblingIndex(index);\n    out.parentNode = null;\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}