{
    "generation": "    protected void replaceChild(Node out, Node in) {\n        Validate.isTrue(out.parentNode == this);\n        Validate.notNull(in);\n        if (in.parentNode != null)\n            in.parentNode.removeChild(in);\n\n        final int index = out.siblingIndex;\n\n        // Check if 'out' and 'in' are the same to handle replaceWith self scenario\n        if (out != in) {\n            ensureChildNodes().set(index, in);\n            in.parentNode = this;\n            in.setSiblingIndex(index);\n        }\n\n        // Set parentNode to null only if 'out' is not 'in'\n        if (out != in) {\n            out.parentNode = null;\n        }\n    }",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": false
}