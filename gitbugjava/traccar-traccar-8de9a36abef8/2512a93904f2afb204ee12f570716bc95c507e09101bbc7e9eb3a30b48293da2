{
    "generation": "private void decodeFragment(Position position, String fragment) {\n\n    int dataIndex = fragment.indexOf(':');\n    int[] index = new int[]{0};\n    String[] values;\n    if (fragment.length() == dataIndex + 1) {\n        values = new String[0];\n    } else {\n        values = fragment.substring(dataIndex + 1).split(\";\");\n    }\n\n    switch (fragment.substring(0, dataIndex)) {\n        case \"GPS\": {\n            String value;\n            value = nextValue(values, index);\n            position.setValid(\"A\".equals(value));\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.set(Position.KEY_SATELLITES, Integer.parseInt(value));\n            }\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.setLatitude(Double.parseDouble(value.substring(1)));\n                if (value.charAt(0) == 'S') {\n                    position.setLatitude(-position.getLatitude());\n                }\n            }\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.setLongitude(Double.parseDouble(value.substring(1)));\n                if (value.charAt(0) == 'W') {\n                    position.setLongitude(-position.getLongitude());\n                }\n            }\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.setSpeed(UnitsConverter.knotsFromKph(Double.parseDouble(value)));\n            }\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.setCourse(Double.parseDouble(value));\n            }\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.setAltitude(Double.parseDouble(value));\n            }\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.set(Position.KEY_HDOP, Double.parseDouble(value));\n            }\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.set(Position.KEY_VDOP, Double.parseDouble(value));\n            }\n            break;\n        }\n        case \"GSM\": {\n            index[0] += 2; // skip registration status and signal strength\n            String mccStr = nextValue(values, index);\n            String mncStr = nextValue(values, index);\n            String lacStr = nextValue(values, index);\n            String cidStr = nextValue(values, index);\n            String signalStr = nextValue(values, index);\n            if (mccStr != null && mncStr != null && lacStr != null && cidStr != null && signalStr != null &&\n                !mccStr.isEmpty() && !mncStr.isEmpty() && !lacStr.isEmpty() && !cidStr.isEmpty() && !signalStr.isEmpty()) {\n                int mcc = Integer.parseInt(mccStr);\n                int mnc = Integer.parseInt(mncStr);\n                int lac = Integer.parseInt(lacStr, 16);\n                int cid = Integer.parseInt(cidStr, 16);\n                int signal = Integer.parseInt(signalStr);\n                position.setNetwork(new Network(CellTower.from(mcc, mnc, lac, cid, signal)));\n            }\n            break;\n        }\n        case \"COT\": {\n            String value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.set(Position.KEY_ODOMETER, Long.parseLong(value));\n            }\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                String[] hours = value.split(\"-\");\n                int totalSeconds = 0;\n                if (hours.length > 0 && !hours[0].isEmpty()) {\n                    totalSeconds += Integer.parseInt(hours[0]) * 3600;\n                }\n                if (hours.length > 1 && !hours[1].isEmpty()) {\n                    totalSeconds += Integer.parseInt(hours[1]) * 60;\n                }\n                if (hours.length > 2 && !hours[2].isEmpty()) {\n                    totalSeconds += Integer.parseInt(hours[2]);\n                }\n                position.set(Position.KEY_HOURS, totalSeconds * 1000L);\n            }\n            break;\n        }\n        case \"ADC\": {\n            String value;\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.set(Position.KEY_POWER, Double.parseDouble(value));\n            }\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.set(Position.KEY_BATTERY, Double.parseDouble(value));\n            }\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.set(Position.PREFIX_ADC + 1, Double.parseDouble(value));\n            }\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.set(Position.PREFIX_ADC + 2, Double.parseDouble(value));\n            }\n            break;\n        }\n        case \"DTT\": {\n            String value;\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.set(Position.KEY_STATUS, Integer.parseInt(value, 16));\n            }\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                int io = Integer.parseInt(value, 16);\n                position.set(Position.KEY_IGNITION, BitUtil.check(io, 0));\n                position.set(Position.PREFIX_IN + 1, BitUtil.check(io, 1));\n                position.set(Position.PREFIX_IN + 2, BitUtil.check(io, 2));\n                position.set(Position.PREFIX_IN + 3, BitUtil.check(io, 3));\n                position.set(Position.PREFIX_IN + 4, BitUtil.check(io, 4));\n                position.set(Position.PREFIX_OUT + 1, BitUtil.check(io, 5));\n                position.set(Position.PREFIX_OUT + 2, BitUtil.check(io, 6));\n                position.set(Position.PREFIX_OUT + 3, BitUtil.check(io, 7));\n            }\n\n            String geofenceValue1 = nextValue(values, index);\n            String geofenceValue2 = nextValue(values, index);\n            position.set(Position.KEY_GEOFENCE, (geofenceValue1 != null ? geofenceValue1 : \"\") + (geofenceValue2 != null ? geofenceValue2 : \"\"));\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.set(\"eventStatus\", value);\n            }\n\n            value = nextValue(values, index);\n            if (value != null && !value.isEmpty()) {\n                position.set(\"packetType\", value);\n            }\n\n            break;\n        }\n        case \"ETD\": {\n            String value = nextValue(values, index);\n            position.set(\"eventData\", value);\n            break;\n        }\n        case \"OBD\": {\n            String value = nextValue(values, index);\n            position.set(\"obd\", value);\n            break;\n        }\n        case \"TAG\": {\n            String value = nextValue(values, index);\n            position.set(\"tagData\", value);\n            break;\n        }\n        case \"IWD\": {\n            while (index[0] < values.length) {\n                String sensorIndexStr = nextValue(values, index);\n                String dataTypeStr = nextValue(values, index);\n                if (sensorIndexStr != null && !sensorIndexStr.isEmpty() &&\n                    dataTypeStr != null && !dataTypeStr.isEmpty()) {\n                    int sensorIndex = Integer.parseInt(sensorIndexStr);\n                    int dataType = Integer.parseInt(dataTypeStr);\n                    if (dataType == 0) {\n                        String driverId = nextValue(values, index);\n                        position.set(Position.KEY_DRIVER_UNIQUE_ID, driverId);\n                    } else if (dataType == 1) {\n                        index[0] += 1; // Ignore sensor serial number\n                        String tempValue = nextValue(values, index);\n                        if (tempValue != null && !tempValue.isEmpty()) {\n                            position.set(Position.PREFIX_TEMP + sensorIndex, Double.parseDouble(tempValue));\n                        }\n                    }\n                } else {\n                    // Not enough data to parse, break the loop\n                    break;\n                }\n            }\n            break;\n        }\n        default:\n            break;\n    }\n}\n\nprivate String nextValue(String[] values, int[] index) {\n    if (index[0] < values.length) {\n        return values[index[0]++];\n    } else {\n        index[0]++;\n        return null;\n    }\n}",
    "exact_match": false,
    "ast_match": false,
    "compile": null,
    "test": true
}